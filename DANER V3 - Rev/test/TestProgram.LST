MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 3.0.4.1, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 MPASMWIN_USED                   EQU     1
                      00004 
                      00005 #define PBP_PATH        C:\PBP3\
                      00006 
                      00007 
                      00008 
                      00009 
                      00016         LIST
                      00017         LIST p = 18F25K22, r = dec, w = -311, w = -230, f = inhx32
                      00018         INCLUDE "P18F25K22.INC" ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F25K22 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      02664         LIST
                      00021         LIST
  00F00000            00022 EEPROM_START    EQU     0F00000h
  00000040            00023 BLOCK_SIZE      EQU     64
                      00024 
                      00025 
                      00026 PBP_HARDWAREDEF  macro
                      00027   endm
                      00028 
                      00029 
28 19 3C 2C 85 0F C0 000030   CONFIG HFOFST   = ON
       F E0 0F 40 
                      00031     CONFIG FOSC     = INTIO67
                      00032     CONFIG PLLCFG   = OFF
                      00033     CONFIG IESO     = OFF
                      00034     CONFIG PWRTEN   = OFF
                      00035     CONFIG BOREN    = OFF
                      00036     CONFIG WDTEN    = OFF
                      00037     CONFIG MCLRE    = INTMCLR
                      00038     CONFIG XINST    = OFF
                      00039     CONFIG CCP2MX   = PORTB3
                      00040     CONFIG T3CMX    = PORTB5
                      00041     CONFIG PBADEN   = OFF 
                      00042   
                      00043 
                      00044 
                      00045 
                      00046 ; Define statements.
                      00047 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00299   DEFINE  ADC_CHANNELS  1
                      00048 #define         ADC_CHANNELS              1
                      00049 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00002   define OSC 16
                      00050 #define         OSC              16
                      00051 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00022   DEFINE LCD_DREG PORTA 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00052 #define         LCD_DREG                 PORTA 
                      00053 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00023   DEFINE LCD_DBIT 0
                      00054 #define         LCD_DBIT                 0
                      00055 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00024   DEFINE LCD_RSREG PORTA
                      00056 #define         LCD_RSREG                PORTA
                      00057 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00025   DEFINE LCD_RSBIT 5 
                      00058 #define         LCD_RSBIT                5 
                      00059 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00026   DEFINE LCD_EREG PORTA
                      00060 #define         LCD_EREG                 PORTA
                      00061 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00027   DEFINE LCD_EBIT 4 
                      00062 #define         LCD_EBIT                 4 
                      00063 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00028   DEFINE LCD_BITS 4 
                      00064 #define         LCD_BITS                 4 
                      00065 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00029   DEFINE LCD_LINE 2
                      00066 #define         LCD_LINE                 2
                      00067 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00031   DEFINE I2C_SCLOUT 1
                      00068 #define         I2C_SCLOUT               1
                      00069 
  00000000            00070 RAM_START                       EQU     00000h
  000005FF            00071 RAM_END                         EQU     005FFh
  00000006            00072 RAM_BANKS                       EQU     00006h
  00000060            00073 BANK0_START                     EQU     00060h
  000000FF            00074 BANK0_END                       EQU     000FFh
  00000100            00075 BANK1_START                     EQU     00100h
  000001FF            00076 BANK1_END                       EQU     001FFh
  00000200            00077 BANK2_START                     EQU     00200h
  000002FF            00078 BANK2_END                       EQU     002FFh
  00000300            00079 BANK3_START                     EQU     00300h
  000003FF            00080 BANK3_END                       EQU     003FFh
  00000400            00081 BANK4_START                     EQU     00400h
  000004FF            00082 BANK4_END                       EQU     004FFh
  00000500            00083 BANK5_START                     EQU     00500h
  000005FF            00084 BANK5_END                       EQU     005FFh
  00000000            00085 BANKA_START                     EQU     00000h
  0000005F            00086 BANKA_END                       EQU     0005Fh
                      00087 
                      00088 ; C:\PBP3\PBPPI18L.RAM          00028   A00000  FLAGS   VAR     BYTE BANKA SYSTEM       ' Static flags
  00000000            00089 FLAGS                           EQU     RAM_START + 000h
                      00090 ; C:\PBP3\PBPPI18L.RAM          00027   A00001  GOP     VAR     BYTE BANKA SYSTEM       ' Gen Op Paramet
                            er
  00000001            00091 GOP                             EQU     RAM_START + 001h
                      00092 ; C:\PBP3\PBPPI18L.RAM          00016   A00002  R4      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000002            00093 R4                              EQU     RAM_START + 002h
                      00094 ; C:\PBP3\PBPPI18L.RAM          00017   A00004  R5      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000004            00095 R5                              EQU     RAM_START + 004h
                      00096 ; C:\PBP3\PBPPI18L.RAM          00018   A00006  R6      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000006            00097 R6                              EQU     RAM_START + 006h
                      00098 ; C:\PBP3\PBPPI18L.RAM          00019   A00008  R7      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000008            00099 R7                              EQU     RAM_START + 008h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00100 ; C:\PBP3\PBPPI18L.RAM          00020   A0000A  R8      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  0000000A            00101 R8                              EQU     RAM_START + 00Ah
                      00102 ; C:\PBP3\PBPPI18L.RAM          00023   A0000C  RM1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Mask
  0000000C            00103 RM1                             EQU     RAM_START + 00Ch
                      00104 ; C:\PBP3\PBPPI18L.RAM          00026   A0000D  RM2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Mask
  0000000D            00105 RM2                             EQU     RAM_START + 00Dh
                      00106 ; C:\PBP3\PBPPI18L.RAM          00021   A0000E  RR1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Register
  0000000E            00107 RR1                             EQU     RAM_START + 00Eh
                      00108 ; C:\PBP3\PBPPI18L.RAM          00024   A0000F  RR2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Register
  0000000F            00109 RR2                             EQU     RAM_START + 00Fh
                      00110 ; C:\PBP3\PBPPI18L.RAM          00022   A00010  RS1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Bank
  00000010            00111 RS1                             EQU     RAM_START + 010h
                      00112 ; C:\PBP3\PBPPI18L.RAM          00025   A00011  RS2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Bank
  00000011            00113 RS2                             EQU     RAM_START + 011h
                      00114 ; C:\PBP3\PBPPI18L.RAM          00012   A00012  R0      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  00000012            00115 R0                              EQU     RAM_START + 012h
                      00116 ; C:\PBP3\PBPPI18L.RAM          00013   A00016  R1      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  00000016            00117 R1                              EQU     RAM_START + 016h
                      00118 ; C:\PBP3\PBPPI18L.RAM          00014   A0001A  R2      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  0000001A            00119 R2                              EQU     RAM_START + 01Ah
                      00120 ; C:\PBP3\PBPPI18L.RAM          00015   A0001E  R3      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  0000001E            00121 R3                              EQU     RAM_START + 01Eh
                      00122 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00001   A00022  
  00000022            00123 T1                              EQU     RAM_START + 022h
                      00124 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00001   A00026  
  00000026            00125 T2                              EQU     RAM_START + 026h
                      00126 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00098   A0002A  Adr             var word
  0000002A            00127 _Adr                            EQU     RAM_START + 02Ah
                      00128 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00095   A0002C  DutyCycleL      VAR WORD
  0000002C            00129 _DutyCycleL                     EQU     RAM_START + 02Ch
                      00130 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00094   A0002E  Frequency       VAR WORD
  0000002E            00131 _Frequency                      EQU     RAM_START + 02Eh
                      00132 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00047   A00030  HP_Duty      VAR WORD
  00000030            00133 _HP_Duty                        EQU     RAM_START + 030h
                      00134 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00046   A00032  HP_Freq      VAR Word
  00000032            00135 _HP_Freq                        EQU     RAM_START + 032h
                      00136 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00048   A00034  HP_Temp      VAR WORD
  00000034            00137 _HP_Temp                        EQU     RAM_START + 034h
                      00138 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00096   A00036  Merenje         var word
  00000036            00139 _Merenje                        EQU     RAM_START + 036h
                      00140 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00093   A00038  Potenciometar   VAR word
  00000038            00141 _Potenciometar                  EQU     RAM_START + 038h
                      00142 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00088   A0003A  Days            var byte
  0000003A            00143 _Days                           EQU     RAM_START + 03Ah
                      00144 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00087   A0003B  Hours           var byte
  0000003B            00145 _Hours                          EQU     RAM_START + 03Bh
                      00146 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00045   A0003C  HP_Channel   VAR BYTE
  0000003C            00147 _HP_Channel                     EQU     RAM_START + 03Ch
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00039   A0003D  HP_Flags  VAR BYTE
  0000003D            00149 _HP_Flags                       EQU     RAM_START + 03Dh
                      00150 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00049   A0003E  HP_PR2       VAR BYTE
  0000003E            00151 _HP_PR2                         EQU     RAM_START + 03Eh
                      00152 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00050   A0003F  LMcnt var byte            
  0000003F            00153 _LMcnt                          EQU     RAM_START + 03Fh
                      00154 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00086   A00040  Minutes         var byte
  00000040            00155 _Minutes                        EQU     RAM_START + 040h
                      00156 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00090   A00041  Month           var byte
  00000041            00157 _Month                          EQU     RAM_START + 041h
                      00158 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00100   A00042   poti var byte
  00000042            00159 _poti                           EQU     RAM_START + 042h
                      00160 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00085   A00043  Seconds         var byte
  00000043            00161 _Seconds                        EQU     RAM_START + 043h
                      00162 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00091   A00044  Temp            var byte
  00000044            00163 _Temp                           EQU     RAM_START + 044h
                      00164 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00092   A00045  Temperatura     var byte  
  00000045            00165 _Temperatura                    EQU     RAM_START + 045h
                      00166 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00084   A00046  X               VAR BYTE
  00000046            00167 _X                              EQU     RAM_START + 046h
                      00168 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00089   A00047  Years           var byte
  00000047            00169 _Years                          EQU     RAM_START + 047h
                      00170 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00300   PORTL   VAR     PORTB
  00000F81            00171 _PORTL                          EQU      PORTB
                      00172 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00301   PORTH   VAR     PORTC
  00000F82            00173 _PORTH                          EQU      PORTC
                      00174 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00302   TRISL   VAR     TRISB
  00000F93            00175 _TRISL                          EQU      TRISB
                      00176 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00303   TRISH   VAR     TRISC
  00000F94            00177 _TRISH                          EQU      TRISC
  00000034            00178 _HP_Temp??LOWBYTE               EQU     _HP_Temp
  00000035            00179 _HP_Temp??HIGHBYTE              EQU     _HP_Temp + 001h
  00000038            00180 _Potenciometar??LOWBYTE         EQU     _Potenciometar
                      00181 #define _PS0                    _HP_Flags??0
                      00182 #define _PS1                    _HP_Flags??1
                      00183 #define _PSchanged              _HP_Flags??2
                      00184 #define _PR2changed             _HP_Flags??3
                      00185 #define _TMR2IF                 _PIR1??1
                      00186 #define _TMR2ON                 _T2CON??2
                      00187 #define _T2CKPS1                _T2CON??1
                      00188 #define _T2CKPS0                _T2CON??0
                      00189 #define _BCKLIGHT               _PORTE??3
                      00190 #define _SDA                    _PORTC??0
                      00191 #define _SCL                    _PORTC??1
                      00192 #define _TASTATURA              _PORTC??3
                      00193 #define _RELEJ1                 _PORTC??4
                      00194 #define _RELEJ2                 _PORTC??5
                      00195 #define _TX                     _PORTC??6
                      00196 #define _RX                     _PORTC??7
                      00197 #define _BUZZER                 _PORTB??1
                      00198 #define _COPER                  _PORTB??2
                      00199 #define _SCLK                   _PORTB??4
                      00200 #define _DIN                    _PORTB??6
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201 #define _CS                     _PORTB??7
                      00202 #define _tast1                  _PORTA??6
                      00203 #define _tast2                  _PORTA??7
                      00204 #define _HP_Flags??0            _HP_Flags, 000h
                      00205 #define _HP_Flags??1            _HP_Flags, 001h
                      00206 #define _HP_Flags??2            _HP_Flags, 002h
                      00207 #define _HP_Flags??3            _HP_Flags, 003h
                      00208 #define _PIR1??1                 PIR1, 001h
                      00209 #define _T2CON??2                T2CON, 002h
                      00210 #define _T2CON??1                T2CON, 001h
                      00211 #define _T2CON??0                T2CON, 000h
                      00212 #define _PORTE??3                PORTE, 003h
                      00213 #define _PORTC??0                PORTC, 000h
                      00214 #define _PORTC??1                PORTC, 001h
                      00215 #define _PORTC??3                PORTC, 003h
                      00216 #define _PORTC??4                PORTC, 004h
                      00217 #define _PORTC??5                PORTC, 005h
                      00218 #define _PORTC??6                PORTC, 006h
                      00219 #define _PORTC??7                PORTC, 007h
                      00220 #define _PORTB??1                PORTB, 001h
                      00221 #define _PORTB??2                PORTB, 002h
                      00222 #define _PORTB??4                PORTB, 004h
                      00223 #define _PORTB??6                PORTB, 006h
                      00224 #define _PORTB??7                PORTB, 007h
                      00225 #define _PORTA??6                PORTA, 006h
                      00226 #define _PORTA??7                PORTA, 007h
                      00227 #define _Minutes??7             _Minutes, 007h
                      00228 #define _Hours??7               _Hours, 007h
                      00229 #define _Hours??6               _Hours, 006h
                      00230 #define _Days??7                _Days, 007h
                      00231 #define _Days??6                _Days, 006h
                      00232 #define _Month??7               _Month, 007h
                      00233 #define _Month??6               _Month, 006h
                      00234 #define _Month??5               _Month, 005h
                      00235 #define _Potenciometar??9       _Potenciometar + 001h, 001h
                      00236 
                      00237 ; Constants.
  000000A2            00238 _RTC                            EQU     000A2h
  000000A0            00239 _EPROM                          EQU     000A0h
  00000090            00240 _LM75                           EQU     00090h
                      00241 
                      00242 ; EEPROM data.
                      00243 
                      00244 
                      00245         INCLUDE "TESTPROGRAM.MAC"
                      00001 
                      00567         LIST
                      00246         INCLUDE "C:\PBP3\PBPPI18L.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPI18L.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer, Darrel Taylor      *
                      00005 ;*              Charles Leo
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00006 ;*  Notice    : Copyright (c) 2011 microEngineering Labs, Inc.    *
                      00007 ;*              All Rights Reserved                               *
                      00008 ;*  Date      : 06/23/2011                                        *
                      00009 ;*  Version   : 3.0.0                                             *
                      00010 ;*  Notes     : Longs                                             *
                      00011 ;******************************************************************
                      00087   LIST
                      00088 ; Oscillator is 16MHz
                      01493   LIST
000000                01494     ORG RESET_ORG               ; Reset vector at 0
                      01498   LIST
000000 6A00           01499         clrf    FLAGS           ; Clear all flags on reset
                      01503   LIST
000002 EF02 F002      01504         goto    INIT            ; Finish initialization
                      03232   LIST
000006 8A00           03233 I2CREADS bsf    I2CSTOPFLAG     ; Indicate Stop after this byte
000008 AA00           03234         btfss   I2CSTOPFLAG     ; Skip next always
00000A 9A00           03235 I2CREAD bcf     I2CSTOPFLAG     ; Don't Stop
00000C B600           03236         btfsc   I2CREADFLAG     ; Already reading?
00000E D003           03237         bra     i2creadip       ; Yes
000010 8600           03238         bsf     I2CREADFLAG     ; Indicate read
000012 D840           03239         rcall   i2cstart        ; Send Start condition and command
000014 E227           03240         bc      i2cstop         ; No acknowledge
                      03241 
000016 0E08           03242 i2creadip movlw 8               ; 8 bits to a byte
000018 6E17           03243         movwf   R1 + 1          ; Bit counter
00001A D850           03244 i2creadloop rcall i2cgetbit     ; Get a bit
00001C 3616           03245         rlcf    R1, F           ; Put bit away
00001E 2E17           03246         decfsz  R1 + 1, F       ; Do next, if any
000020 D7FC           03247         bra     i2creadloop
000022 AA00           03248         btfss   I2CSTOPFLAG     ; Send stop?
000024 D82E           03249         rcall   i2cdal          ; No, send acknowledge
000026 D858           03250         rcall   i2cckh          ; Toggle clock in any case
000028 D851           03251         rcall   i2cckl
00002A BA00           03252         btfsc   I2CSTOPFLAG     ; Send stop?
00002C D81B           03253         rcall   i2cstop         ; Yes, send Stop condition
00002E D821           03254         rcall   i2cdah          ; Make sure data ends up as input
000030 5016           03255         movf    R1, W           ; Get result to W
000032 90D8           03256         bcf     STATUS, C       ; Clear carry for OK return
000034 EFFF F001      03257 i2creaddone goto DUNN
                      03323   LIST
000038 8A00           03324 I2CWRITES bsf   I2CSTOPFLAG     ; Indicate Stop after this byte
00003A AA00           03325         btfss   I2CSTOPFLAG     ; Skip next always
00003C 9A00           03326 I2CWRITE bcf    I2CSTOPFLAG     ; Don't Stop
00003E B400           03327         btfsc   I2CFIRSTFLAG    ; Check for first I2C char (command)
000040 D005           03328         bra     i2cwrite2       ; No
000042 0BFE           03329         andlw   0feh            ; Make sure r/w bit clear
000044 6E01           03330         movwf   GOP             ; Save command
000046 8400           03331         bsf     I2CFIRSTFLAG    ; Indicate not first anymore
000048 90D8           03332         bcf     STATUS, C       ; Clear carry for OK return
00004A D00A           03333         bra     i2cwritedone    ; That's it for now
                      03334 
00004C B800           03335 i2cwrite2 btfsc I2CWRITEFLAG    ; Already writing?
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004E D005           03336         bra     i2cwriteip      ; Yes
000050 6E1E           03337         movwf   R3              ; Save char
000052 8800           03338         bsf     I2CWRITEFLAG    ; Indicate write
000054 D81F           03339         rcall   i2cstart        ; Send Start condition and command
000056 E206           03340         bc      i2cstop         ; No acknowledge
000058 501E           03341         movf    R3, W           ; Get char back
00005A D823           03342 i2cwriteip rcall i2cwritec      ; Write character
00005C E203           03343         bc      i2cstop         ; No acknowledge
00005E AA00           03344         btfss   I2CSTOPFLAG     ; Send stop bit?
000060 EFFF F001      03345 i2cwritedone goto DUNN          ; No
                      03346 
000064 D80E           03347 i2cstop rcall   i2cdal          ; 12 Start data low
000066 D838           03348         rcall   i2cckh          ; 15 Set clock high (input)
000068 9400           03349         bcf     I2CFIRSTFLAG    ; 1 Reset first char flag
00006A 9800           03350         bcf     I2CWRITEFLAG    ; 1 No longer writing
00006C 9600           03351         bcf     I2CREADFLAG     ; 1 No longer reading either
00006E D801           03352         rcall   i2cdah          ; Set data high (input)
000070 D7F7           03353         bra     i2cwritedone
                      03354 
000072 C010 FFEA      03355 i2cdah  movff   RS1, FSR0H      ; 2 (11) Get pointer to data pin
000076 3C0E           03356         incfsz  RR1, W          ; 1 Point to TRIS (never skip, doesn't change flags)
000078 6EE9           03357         movwf   FSR0L           ; 1
00007A 88E9           03358         bsf     FSR0L, 4        ; 1
00007C 500C           03359         movf    RM1, W          ; 1
00007E 12EC           03360 i2chigh iorwf   PREINC0, F      ; 1 Set high (input)
000080 D008           03361         bra     i2chl           ; 2
                      03362 
000082 C010 FFEA      03363 i2cdal  movff   RS1, FSR0H      ; 2 (10) Get pointer to data pin
000086 C00E FFE9      03364         movff   RR1, FSR0L      ; 2
00008A 1C0C           03365         comf    RM1, W          ; 1
00008C 16EE           03366 i2clow  andwf   POSTINC0, F     ; 1 Set low, start pointing to TRIS
00008E 88E9           03367         bsf     FSR0L, 4        ; 1
000090 16EC           03368         andwf   PREINC0, F      ; 1 Set to output
000092                03369 i2chl
                      03370       ifndef I2C_SLOW
000092 0012           03371         return                  ; 2
                      03372       else
                      03373           if (OSC > 12)
                      03374         movlw   (OSC) / 4       ; 1 Pause ~5us to slow to 100kHz without wrecking C
                      03375         movwf   R0              ; 1
                      03376 i2cslowloop decfsz R0, F        ; 1
                      03377         bra     i2cslowloop     ; 2
                      03378         return                  ; 2
                      03379           else
                      03380         goto    DUNN            ; 6
                      03381           endif
                      03382       endif
                      03383 
000094 DFEE           03384 i2cstart rcall  i2cdah          ; 13 Make sure bus is idle
000096 D820           03385         rcall   i2cckh          ; 15
000098 DFF4           03386         rcall   i2cdal          ; 12 Send Start condition
00009A D818           03387         rcall   i2cckl          ; 14
00009C 5001           03388         movf    GOP, W          ; 1 Get command
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00009E B600           03389         btfsc   I2CREADFLAG     ; 1 / 2 Read?
0000A0 0901           03390         iorlw   1               ; 1 / 0 Yes, put in read bit
                      03391 
0000A2 6E16           03392 i2cwritec movwf R1              ; 1 Save data
0000A4 0E08           03393         movlw   8               ; 1 8 bits to send
0000A6 6E17           03394         movwf   R1 + 1          ; 1 Bit counter
0000A8 3616           03395 i2cwriteloop rlcf R1, F         ; 1 Get a bit to send
0000AA B0D8           03396         btfsc   STATUS, C       ; 1 / 2 Skip if no bit
0000AC DFE2           03397         rcall   i2cdah          ; 13 / 0 Set bit high (input)
0000AE A0D8           03398         btfss   STATUS, C       ; 1 / 2 Skip if bit
0000B0 DFE8           03399         rcall   i2cdal          ; 12 / 0 Set bit low
0000B2 D812           03400         rcall   i2cckh          ; 15 Set clock high (input)
0000B4 D80B           03401         rcall   i2cckl          ; 14 Set clock low
0000B6 2E17           03402         decfsz  R1 + 1, F       ; 1 / 2 Do next bit, if any
0000B8 D7F7           03403         bra     i2cwriteloop    ; 2
0000BA DFDB           03404         rcall   i2cdah          ; 13 Make sure data high (input)
                      03405 ;       bra     i2cgetbit       ; Get acknowledge (fall through)
                      03406 
0000BC D80D           03407 i2cgetbit rcall i2cckh          ; 15 (34) Set clock high
0000BE C010 FFEA      03408         movff   RS1, FSR0H      ; 2 Point to data pin
0000C2 C00E FFE9      03409         movff   RR1, FSR0L      ; 2
0000C6 500C           03410         movf    RM1, W          ; 1
0000C8 14EF           03411         andwf   INDF0, W        ; 1 Isolate pin
0000CA 0FFF           03412         addlw   -1              ; 1 Move bit to carry
                      03413 ;       bra     i2cckl          ; Set clock low (fall through)
                      03414 
0000CC C011 FFEA      03415 i2cckl  movff   RS2, FSR0H      ; 2 (12) Get pointer to clock pin
0000D0 C00F FFE9      03416         movff   RR2, FSR0L      ; 2
0000D4 1C0D           03417         comf    RM2, W          ; 1
0000D6 D7DA           03418         bra     i2clow          ; 7 Finish it up
                      03419 
                      03420       ifndef I2C_SCLOUT
                      03421 i2cckh  movff   RS2, FSR0H      ; 2 (13) Get pointer to clock pin
                      03422 i2chold incfsz  RR2, W          ; 1 Point to TRIS (never skip)
                      03423         movwf   FSR0L           ; 1
                      03424         bsf     FSR0L, 4        ; 1
                      03425         movf    RM2, W          ; 1
                      03426           ifndef I2C_HOLD
                      03427         bra     i2chigh         ; 7 Finish it up
                      03428           else
                      03429         iorwf   PREINC0, F      ; 1 Set high (input)
                      03430         movff   RR2, FSR0L      ; 2 Point back to port
                      03431         andwf   INDF0, W        ; 1 Isolate pin
                      03432         bz      i2chold         ; 1 / 2 Check for still low
                      03433         bra     i2chl           ; 4
                      03434           endif
                      03435       else
0000D8 C011 FFEA      03436 i2cckh  movff   RS2, FSR0H      ; 2 (13) Get pointer to clock pin
0000DC C00F FFE9      03437         movff   RR2, FSR0L      ; 2
0000E0 500D           03438         movf    RM2, W          ; 1
0000E2 12EE           03439         iorwf   POSTINC0, F     ; 1 Set high, start pointing to TRIS
0000E4 88E9           03440         bsf     FSR0L, 4        ; 1
0000E6 1C0D           03441         comf    RM2, W          ; 1 Get inverted mask
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000E8 16EC           03442         andwf   PREINC0, F      ; 1 Set to output
0000EA D7D3           03443         bra     i2chl           ; 4
                      03444       endif
                      06087   LIST
0000EC 0E08           06088 SHIFTOUT8 movlw 8               ; Send 8 bits
0000EE 6E1E           06089 SHIFTOUT movwf  R3              ; Save number of bits
                      06090 
0000F0 C011 FFEA      06091         movff   RS2, FSR0H      ; Point to clock port (FSR0 for High and Low)
0000F4 C00F FFE9      06092         movff   RR2, FSR0L
0000F8 500D           06093         movf    RM2, W          ; Get clock bit mask
0000FA B401           06094         btfsc   GOP, 2          ; Skip if start low
0000FC ECA9 F000      06095         call    HIGHT           ; Start clock bit high
000100 A401           06096         btfss   GOP, 2          ; Skip if start high
000102 ECAB F000      06097         call    LOWT            ; Start clock bit low
000106 C011 FFE2      06098         movff   RS2, FSR1H      ; Point to clock port (FSR1)
00010A C00F FFE1      06099         movff   RR2, FSR1L
                      06100 
                      06101 ;       movff   RS1, FSR0H      ; Point to data TRIS (FSR0)
00010E 500E           06102         movf    RR1, W
000110 0F12           06103         addlw   12h
000112 6EE9           06104         movwf   FSR0L
000114 1C0C           06105         comf    RM1, W          ; Get inverted data bit mask
000116 16EF           06106         andwf   INDF0, F        ; Set data to output
000118 501E           06107         movf    R3, W           ; Get count and check for 0
00011A E011           06108         bz      shiftoutdone    ; It's 0
00011C B001           06109         btfsc   GOP, 0          ; Shift MSB?
00011E ECD0 F000      06110         call    REV             ; Yes, reverse bits to bottom
000122 C00E FFE9      06111         movff   RR1, FSR0L      ; Point back to port
000126 3215           06112 shiftoutloop rrcf R0 + 3, F     ; Shift LSB to carry
000128 3214           06113         rrcf    R0 + 2, F
00012A 3213           06114         rrcf    R0 + 1, F
00012C 3212           06115         rrcf    R0, F           ; Carry has bit
00012E 50EF           06116         movf    INDF0, W        ; Get pin value
000130 100C           06117         iorwf   RM1, W          ; Put in 1 for data
000132 A0D8           06118         btfss   STATUS, C       ; 1 or 0?
000134 180C           06119         xorwf   RM1, W          ; 0, take 1 back out
000136 6EEF           06120         movwf   INDF0           ; Put out data
000138 D804           06121         rcall   shifttoggle     ; Toggle clock
00013A 2E1E           06122         decfsz  R3, F           ; Do all the bits
00013C D7F4           06123         bra     shiftoutloop
00013E EFFF F001      06124 shiftoutdone goto DUNN
                      06134   LIST
000142 500D           06135 shifttoggle movf RM2, W         ; Get clock bit mask
000144 1AE7           06136         xorwf   INDF1, F        ; Toggle clock
                      06137      ifdef SHIFT_PAUSEUS
                      06138         movf    R0, W           ; Save shift data
                      06139         movwf   R1
                      06140         movf    R0 + 1, W
                      06141         movwf   R1 + 1
                      06142         movlw   (SHIFT_PAUSEUS) >> 8    ; Slow down transfer
                      06143         movwf   R0 + 1
                      06144         movlw   low (SHIFT_PAUSEUS)
                      06145         call    PAUSEUS
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06146         movf    R1, W           ; Restore shift data
                      06147         movwf   R0
                      06148         movf    R1 + 1, W
                      06149         movwf   R0 + 1
                      06150         movf    RM2, W          ; Get clock bit mask
                      06151 PAUSEUS_USED = 1
                      06152      else
000146 0000           06153         nop                     ; Slow down transfer
                      06154       if (OSC > 4)
000148 D000           06155         bra     $ + 2
                      06156       endif
                      06157       if (OSC > 8)
00014A D000           06158         bra     $ + 2
                      06159       endif
                      06160       if (OSC > 12)
00014C D000           06161         bra     $ + 2
                      06162       endif
                      06163       if (OSC > 16)
                      06164         bra     $ + 2
                      06165       endif
                      06166       if (OSC > 20)
                      06167         bra     $ + 2
                      06168       endif
                      06169       if (OSC > 24)
                      06170         bra     $ + 2
                      06171         bra     $ + 2
                      06172       endif
                      06173       if (OSC > 32)
                      06174         bra     $ + 2
                      06175         bra     $ + 2
                      06176       endif
                      06177       if (OSC > 40)
                      06178         bra     $ + 2
                      06179         bra     $ + 2
                      06180       endif
                      06181       if (OSC > 48)
                      06182         bra     $ + 2
                      06183         bra     $ + 2
                      06184         bra     $ + 2
                      06185         bra     $ + 2
                      06186       endif
                      06187      endif
00014E 1AE7           06188         xorwf   INDF1, F
000150 0012           06189         return
                      06553   LIST
000152 12EF           06554 HIGHT   iorwf   INDF0, F        ; Set bit high
000154 D003           06555         bra     OUTPUTT         ; Make sure it's an output
                      06578   LIST
000156 0AFF           06579 LOWT    xorlw   0ffh            ; Invert bit mask
000158 16EF           06580         andwf   INDF0, F        ; Set bit low
00015A D001           06581         bra     OUTPUTI         ; Make sure it's an output
                      06650   LIST
00015C 0AFF           06651 OUTPUTT xorlw   0ffh            ; Invert bit mask
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06657   LIST
00015E 88E9           06658 OUTPUTI bsf     FSR0L, 4        ; Point to TRIS register
000160 2AE9           06659         incf    FSR0L, F
000162 16EC           06660         andwf   PREINC0, F      ; Set bit to output
000164 EFFF F001      06661         goto    DUNN            ; Done
                      07088   LIST
000168 6A17           07089 PAUSEB  clrf    R1 + 1
00016A 6A18           07090 PAUSEW  clrf    R1 + 2
00016C 6A19           07091         clrf    R1 + 3
00016E 6E16           07092 PAUSE   movwf   R1
000170 6AE8           07093 pauseloop clrf  WREG            ; 1 (10) Clear W for subtracts
000172 0616           07094         decf    R1, F           ; 1
000174 5A17           07095         subwfb  R1 + 1, F       ; 1
000176 5A18           07096         subwfb  R1 + 2, F       ; 1
000178 5A19           07097         subwfb  R1 + 3, F       ; 1
00017A A0D8           07098         btfss   STATUS, C       ; 2
00017C EFFF F001      07099         goto    DUNN
000180 0E03           07100         movlw   (PAUSE_DELAY) >> 8      ; 1
000182 6E13           07101         movwf   R0 + 1          ; 1
000184 0EE5           07102         movlw   low (PAUSE_DELAY)       ; 1
000186 D802           07103         rcall   PAUSEUS         ; -2 (PAUSEUS gives you 2 less than you ask for)
000188 D7F3           07104         bra     pauseloop       ; 2
                      07272   LIST
00018A 6A13           07273 PAUSEUSB clrf   R0 + 1          ; 1
00018C 0FFB           07274 PAUSEUS addlw   -5              ; 1 Subtract overhead
00018E 6E12           07275         movwf   R0              ; 1
000190 D000           07276         bra     $ + 2           ; 2
000192 6AE8           07277         clrf    WREG            ; 1
000194 D001           07278         bra     pauseush        ; 2
000196 0612           07279 pauseusloop decf R0, F          ; 1
000198 5A13           07280 pauseush subwfb R0 + 1, F       ; 1
00019A E2FD           07281         bc      pauseusloop     ; 1 / 2
                      07282         CLRWDT?NOP              ; 1
                          M     ifndef NO_CLRWDT
00019C 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
00019E 0012           07283         return                  ; 2 + 3 (call + setup)
                      07962   LIST
0001A0 6A16           07963 REV     clrf    R1              ; Zero the intermediate result
0001A2 6A17           07964         clrf    R1 + 1
0001A4 6A18           07965         clrf    R1 + 2
0001A6 6A19           07966         clrf    R1 + 3
0001A8 D008           07967         bra     revfirst        ; Handle 0 case
0001AA 3215           07968 revloop rrcf    R0 + 3, F       ; Shift right once
0001AC 3214           07969         rrcf    R0 + 2, F
0001AE 3213           07970         rrcf    R0 + 1, F
0001B0 3212           07971         rrcf    R0, F
0001B2 3616           07972         rlcf    R1, F           ; Reverse the bits into R1
0001B4 3617           07973         rlcf    R1 + 1, F
0001B6 3618           07974         rlcf    R1 + 2, F
0001B8 3619           07975         rlcf    R1 + 3, F
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001BA 0FFF           07976 revfirst addlw  -1
0001BC E2F6           07977         bc      revloop         ; Done?
0001BE 5019           07978         movf    R1 + 3, W       ; Move result to R0
0001C0 6E15           07979         movwf   R0 + 3
0001C2 5018           07980         movf    R1 + 2, W
0001C4 6E14           07981         movwf   R0 + 2
0001C6 5017           07982         movf    R1 + 1, W
0001C8 6E13           07983         movwf   R0 + 1
0001CA 5016           07984         movf    R1, W
0001CC 6E12           07985         movwf   R0              ; Low part of result in W
0001CE EFFF F001      07986         goto    DUNN
                      08002   LIST
0001D2 90D8           08003 shiftlloop bcf  STATUS, C       ; Shift in 0 bits
0001D4 3612           08004         rlcf    R0, F           ; Shift left once
0001D6 3613           08005         rlcf    R0 + 1, F
0001D8 3614           08006         rlcf    R0 + 2, F
0001DA 3615           08007         rlcf    R0 + 3, F
0001DC 0FFF           08008 SHIFTL  addlw   -1
0001DE E2F9           08009         bc      shiftlloop      ; Done?
0001E0 5012           08010         movf    R0, W           ; Move low part of result to W
0001E2 EFFF F001      08011         goto    DUNN
                      08027   LIST
0001E6 90D8           08028 shiftrloop bcf  STATUS, C       ; Shift in 0 bits
0001E8 3215           08029         rrcf    R0 + 3, F       ; Shift right once
0001EA 3214           08030         rrcf    R0 + 2, F
0001EC 3213           08031         rrcf    R0 + 1, F
0001EE 3212           08032         rrcf    R0, F
0001F0 0FFF           08033 SHIFTR  addlw   -1
0001F2 E2F9           08034         bc      shiftrloop      ; Done?
0001F4 5012           08035         movf    R0, W           ; Move low part of result to W
0001F6 EFFF F001      08036         goto    DUNN
                      08169   LIST
0001FA 6E16           08170 CMPEQW  movwf   R1
0001FC 0E02           08171         movlw   2               ; Mask for =
0001FE D009           08172         bra     CMPW
                      08280   LIST
000200 6E16           08281 CMPLEW  movwf   R1
000202 0E06           08282         movlw   6               ; Mask for < =
000204 D006           08283         bra     CMPW
                      08317   LIST
000206 6E16           08318 CMPLTW  movwf   R1
000208 0E04           08319         movlw   4               ; Mask for <
00020A D003           08320         bra     CMPW
                      08363   LIST
00020C 6E16           08364 CMPNE   movwf   R1
00020E 0E05           08365         movlw   5               ; Mask for < >
000210 D002           08366         bra     CMP
                      08390   LIST
000212 6E02           08391 CMPW    movwf   R4              ; Save compare state
000214 D00A           08392         bra     cmpw1           ; Compare unsigned words
                      08398   LIST
000216 6E02           08399 CMP     movwf   R4              ; Save compare state
000218 5019           08400         movf    R1 + 3, W       ; Compare signed longs
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00021A 1815           08401         xorwf   R0 + 3, W       ; Check signs
00021C E615           08402         bn      cmpdiff         ; Different signs
00021E 5019           08403         movf    R1 + 3, W       ; Flags = MSB(R0) - MSB(R1)
000220 5C15           08404         subwf   R0 + 3, W
000222 E108           08405         bnz     cmpnoteq        ; If unequal then done
000224 5018           08406         movf    R1 + 2, W
000226 5C14           08407         subwf   R0 + 2, W
000228 E105           08408         bnz     cmpnoteq        ; If unequal then done
00022A 5017           08409 cmpw1   movf    R1 + 1, W
00022C 5C13           08410         subwf   R0 + 1, W
00022E E102           08411         bnz     cmpnoteq        ; If unequal then done
000230 5016           08412 cmpb1   movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
000232 5C12           08413         subwf   R0, W
000234 0E04           08414 cmpnoteq movlw  4               ; W = 4 if R0 < R1
000236 B0D8           08415         btfsc   STATUS, C
000238 0E01           08416         movlw   1               ; W = 1 if R0 > R1
00023A B4D8           08417         btfsc   STATUS, Z
00023C 0E02           08418         movlw   2               ; W = 2 if R0 == R1
00023E 1402           08419         andwf   R4, W           ; Mask for compare state
000240 A4D8           08420         btfss   STATUS, Z
000242 0EFF           08421         movlw   -1
000244 EFFF F001      08422         goto    DUNN
                      08423 
000248 5015           08424 cmpdiff movf    R0 + 3, W       ; Different signs so flip compare to accomodate
00024A 5C19           08425         subwf   R1 + 3, W       ; Flags = MSB(R1) - MSB(R0)
00024C D7F3           08426         bra     cmpnoteq        ; Will always be not equal
                      08598   LIST
00024E 6A21           08599 DIVS    clrf    R3 + 3          ; Clear sign difference indicator
000250 AE15           08600         btfss   R0 + 3, 7       ; Check for R0 negative
000252 D006           08601         bra     divchkr1        ; Not negative
000254 7E21           08602         btg     R3 + 3, 7       ; Flip sign indicator
000256 6AE8           08603         clrf    WREG            ; Clear W for subtracts
000258 6C12           08604         negf    R0              ; Flip value to plus
00025A 5613           08605         subfwb  R0 + 1, F
00025C 5614           08606         subfwb  R0 + 2, F
00025E 5615           08607         subfwb  R0 + 3, F
000260 AE19           08608 divchkr1 btfss  R1 + 3, 7       ; Check for R1 negative
000262 D008           08609         bra     divdo           ; Not negative
000264 7E21           08610         btg     R3 + 3, 7       ; Flip sign indicator
000266 6AE8           08611         clrf    WREG            ; Clear W for subtracts
000268 6C16           08612         negf    R1              ; Flip value to plus
00026A 5617           08613         subfwb  R1 + 1, F
00026C 5618           08614         subfwb  R1 + 2, F
00026E 5619           08615         subfwb  R1 + 3, F
000270 D001           08616         bra     divdo           ; Skip unsigned entry
                      08622   LIST
000272                08623 DIV
                      08624       ifdef DIVS_USED
000272 6A21           08625         clrf    R3 + 3          ; Clear sign difference indicator       
                      08626       endif
000274 6A1A           08627 divdo   clrf    R2              ; Do the divide
000276 6A1B           08628         clrf    R2 + 1
000278 6A1C           08629         clrf    R2 + 2
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00027A 6A1D           08630         clrf    R2 + 3
                      08631 
00027C 0E20           08632         movlw   32
00027E 6E1E           08633         movwf   R3
                      08634 
000280 3415           08635 divloop rlcf    R0 + 3, W
000282 361A           08636         rlcf    R2, F
000284 361B           08637         rlcf    R2 + 1, F
000286 361C           08638         rlcf    R2 + 2, F
000288 361D           08639         rlcf    R2 + 3, F
00028A 5016           08640         movf    R1, W
00028C 5E1A           08641         subwf   R2, F
00028E 5017           08642         movf    R1 + 1, W
000290 5A1B           08643         subwfb  R2 + 1, F
000292 5018           08644         movf    R1 + 2, W
000294 5A1C           08645         subwfb  R2 + 2, F
000296 5019           08646         movf    R1 + 3, W
000298 5A1D           08647         subwfb  R2 + 3, F
                      08648 
00029A E209           08649         bc      divok
00029C 5016           08650         movf    R1, W
00029E 261A           08651         addwf   R2, F
0002A0 5017           08652         movf    R1 + 1, W
0002A2 221B           08653         addwfc  R2 + 1, F
0002A4 5018           08654         movf    R1 + 2, W
0002A6 221C           08655         addwfc  R2 + 2, F
0002A8 5019           08656         movf    R1 + 3, W
0002AA 221D           08657         addwfc  R2 + 3, F
                      08658 
0002AC 90D8           08659         bcf     STATUS, C
                      08660 
0002AE 3612           08661 divok   rlcf    R0, F
0002B0 3613           08662         rlcf    R0 + 1, F
0002B2 3614           08663         rlcf    R0 + 2, F
0002B4 3615           08664         rlcf    R0 + 3, F
                      08665 
0002B6 2E1E           08666         decfsz  R3, F
0002B8 D7E3           08667         bra     divloop
                      08668 
                      08669       ifdef DIVS_USED
0002BA AE21           08670         btfss   R3 + 3, 7       ; Should result be negative?
0002BC D009           08671         bra     divdone         ; Not negative
0002BE 6AE8           08672         clrf    WREG            ; Clear W for subtracts
0002C0 6C12           08673         negf    R0              ; Flip quotient to minus
0002C2 5613           08674         subfwb  R0 + 1, F
0002C4 5614           08675         subfwb  R0 + 2, F
0002C6 5615           08676         subfwb  R0 + 3, F
0002C8 6C1A           08677         negf    R2              ; Flip remainder to minus
0002CA 561B           08678         subfwb  R2 + 1, F
0002CC 561C           08679         subfwb  R2 + 2, F
0002CE 561D           08680         subfwb  R2 + 3, F
0002D0                08681 divdone
                      08682     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08683 
0002D0 5012           08684         movf    R0, W           ; Get low byte to W
0002D2 EFFF F001      08685         goto    DUNN
                      08701   LIST
0002D6 5016           08702 MUL     movf    R1, W
0002D8 021E           08703         mulwf   R3              ; AARGB3 * BARGB3 = PRODHL
0002DA CFF3 F01A      08704         movff   PRODL, R2
0002DE CFF4 F01B      08705         movff   PRODH, R2 + 1
                      08706 
0002E2 5017           08707         movf    R1 + 1, W
0002E4 021F           08708         mulwf   R3 + 1          ; AARGB2 * BARGB2 = PRODHL
0002E6 CFF3 F01C      08709         movff   PRODL, R2 + 2
0002EA CFF4 F01D      08710         movff   PRODH, R2 + 3
                      08711 
                      08712 ;       movf    R1 + 1, W       ; W still has R1 + 1 from above
0002EE 021E           08713         mulwf   R3              ; AARGB2 * BARGB3 = PRODHL
0002F0 50F3           08714         movf    PRODL, W        ; Add cross products
0002F2 261B           08715         addwf   R2 + 1, F
0002F4 50F4           08716         movf    PRODH, W
0002F6 221C           08717         addwfc  R2 + 2, F
0002F8 6AE8           08718         clrf    WREG
0002FA 221D           08719         addwfc  R2 + 3, F
                      08720 
0002FC 5016           08721         movf    R1, W
0002FE 021F           08722         mulwf   R3 + 1          ; AARGB3 * BARGB2 = PRODHL
000300 50F3           08723         movf    PRODL, W        ; Add cross products
000302 261B           08724         addwf   R2 + 1, F
000304 50F4           08725         movf    PRODH, W
000306 221C           08726         addwfc  R2 + 2, F
000308 6AE8           08727         clrf    WREG
00030A 221D           08728         addwfc  R2 + 3, F
                      08729 
00030C 5018           08730         movf    R1 + 2, W
00030E 021E           08731         mulwf   R3              ; AARGB1 * BARGB3 = PRODHL
000310 50F3           08732         movf    PRODL, W        ; Add cross products
000312 261C           08733         addwf   R2 + 2, F
000314 50F4           08734         movf    PRODH, W
000316 221D           08735         addwfc  R2 + 3, F
000318 5018           08736         movf    R1 + 2, W
00031A 021F           08737         mulwf   R3 + 1          ; AARGB1 * BARGB2 = PRODHL
00031C 6AE8           08738         clrf    WREG            ; Add cross products
00031E 6A12           08739         clrf    R0
000320 2212           08740         addwfc  R0, F
000322 50F3           08741         movf    PRODL, W
000324 261D           08742         addwf   R2 + 3, F
000326 50F4           08743         movf    PRODH, W
000328 2212           08744         addwfc  R0, F
                      08745 
00032A 5016           08746         movf    R1, W
00032C 0220           08747         mulwf   R3 + 2          ; AARGB3 * BARGB1 = PRODHL
00032E 50F3           08748         movf    PRODL, W        ; Add cross products
000330 261C           08749         addwf   R2 + 2, F
000332 50F4           08750         movf    PRODH, W
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000334 221D           08751         addwfc  R2 + 3, F
000336 6AE8           08752         clrf    WREG
000338 6A13           08753         clrf    R0 + 1
00033A 2212           08754         addwfc  R0, F
00033C 2213           08755         addwfc  R0 + 1, F
                      08756 
00033E 5017           08757         movf    R1 + 1, W
000340 0220           08758         mulwf   R3 + 2          ; AARGB2 * BARGB1 = PRODHL
000342 50F3           08759         movf    PRODL, W        ; Add cross products
000344 261D           08760         addwf   R2 + 3, F
000346 50F4           08761         movf    PRODH, W
000348 2212           08762         addwfc  R0, F
00034A 6AE8           08763         clrf    WREG
00034C 2213           08764         addwfc  R0 + 1, F
                      08765 
00034E 5018           08766         movf    R1 + 2, W
000350 0220           08767         mulwf   R3 + 2          ; AARGB1 * BARGB1 = PRODHL
000352 50F3           08768         movf    PRODL, W        ; Add cross products
000354 2612           08769         addwf   R0, F
000356 50F4           08770         movf    PRODH, W
000358 2213           08771         addwfc  R0 + 1, F
                      08772 
00035A 5019           08773         movf    R1 + 3, W
00035C 021F           08774         mulwf   R3 + 1          ; AARGB0 * BARGB2 = PRODHL
00035E 50F3           08775         movf    PRODL, W        ; Add cross products
000360 2612           08776         addwf   R0, F
000362 50F4           08777         movf    PRODH, W
000364 2213           08778         addwfc  R0 + 1, F
000366 5019           08779         movf    R1 + 3, W
000368 0220           08780         mulwf   R3 + 2          ; AARGB0 * BARGB1 = PRODHL
00036A 6AE8           08781         clrf    WREG            ; Add cross products
00036C 6A14           08782         clrf    R0 + 2
00036E 2214           08783         addwfc  R0 + 2, F
000370 50F3           08784         movf    PRODL, W
000372 2613           08785         addwf   R0 + 1, F
000374 50F4           08786         movf    PRODH, W
000376 2214           08787         addwfc  R0 + 2, F
                      08788 
000378 5019           08789         movf    R1 + 3, W
00037A 021E           08790         mulwf   R3              ; AARGB0 * BARGB3 = PRODHL
00037C 50F3           08791         movf    PRODL, W        ; Add cross products
00037E 261D           08792         addwf   R2 + 3, F
000380 50F4           08793         movf    PRODH, W
000382 2212           08794         addwfc  R0, F
000384 6AE8           08795         clrf    WREG
000386 2213           08796         addwfc  R0 + 1, F
000388 2214           08797         addwfc  R0 + 2, F
                      08798 
00038A 5019           08799         movf    R1 + 3, W
00038C 0221           08800         mulwf   R3 + 3          ; AARGB0 * BARGB0 = PRODHL
00038E CFF4 F015      08801         movff   PRODH, R0 + 3   ; Add cross products
000392 50F3           08802         movf    PRODL, W
000394 2614           08803         addwf   R0 + 2, F
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000396 6AE8           08804         clrf    WREG
000398 2215           08805         addwfc  R0 + 3, F
                      08806 
00039A 5016           08807         movf    R1, W
00039C 0221           08808         mulwf   R3 + 3          ; AARGB3 * BARGB0 = PRODHL
00039E 50F3           08809         movf    PRODL, W        ; Add cross products
0003A0 261D           08810         addwf   R2 + 3, F
0003A2 50F4           08811         movf    PRODH, W
0003A4 2212           08812         addwfc  R0, F
0003A6 6AE8           08813         clrf    WREG
0003A8 2213           08814         addwfc  R0 + 1, F
0003AA 2214           08815         addwfc  R0 + 2, F
0003AC 2215           08816         addwfc  R0 + 3, F
                      08817 
0003AE 5017           08818         movf    R1 + 1, W
0003B0 0221           08819         mulwf   R3 + 3          ; AARGB2 * BARGB0 = PRODHL
0003B2 50F3           08820         movf    PRODL, W        ; Add cross products
0003B4 2612           08821         addwf   R0, F
0003B6 50F4           08822         movf    PRODH, W
0003B8 2213           08823         addwfc  R0 + 1, F
0003BA 6AE8           08824         clrf    WREG
0003BC 2214           08825         addwfc  R0 + 2, F
0003BE 2215           08826         addwfc  R0 + 3, F
                      08827 
0003C0 5018           08828         movf    R1 + 2, W
0003C2 0221           08829         mulwf   R3 + 3          ; AARGB1 * BARGB0 = PRODHL
0003C4 50F3           08830         movf    PRODL, W        ; Add cross products
0003C6 2613           08831         addwf   R0 + 1, F
0003C8 50F4           08832         movf    PRODH, W
0003CA 2214           08833         addwfc  R0 + 2, F
0003CC 6AE8           08834         clrf    WREG
0003CE 2215           08835         addwfc  R0 + 3, F
                      08836 
0003D0 AE21           08837         btfss   R3 + 3, 7
0003D2 D008           08838         bra     mulsign
0003D4 5016           08839         movf    R1, W
0003D6 5E12           08840         subwf   R0, F
0003D8 5017           08841         movf    R1 + 1, W
0003DA 5A13           08842         subwfb  R0 + 1, F
0003DC 5018           08843         movf    R1 + 2, W
0003DE 5A14           08844         subwfb  R0 + 2, F
0003E0 5019           08845         movf    R1 + 3, W
0003E2 5A15           08846         subwfb  R0 + 3, F
                      08847 
0003E4 AE19           08848 mulsign btfss   R1 + 3, 7
0003E6 D008           08849         bra     muldone
0003E8 501E           08850         movf    R3, W
0003EA 5E12           08851         subwf   R0, F
0003EC 501F           08852         movf    R3 + 1, W
0003EE 5A13           08853         subwfb  R0 + 1, F
0003F0 5020           08854         movf    R3 + 2, W
0003F2 5A14           08855         subwfb  R0 + 2, F
0003F4 5021           08856         movf    R3 + 3, W
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F6 5A15           08857         subwfb  R0 + 3, F
                      08858 
0003F8 501A           08859 muldone movf    R2, W           ; Get low byte to W
0003FA EFFF F001      08860         goto    DUNN
                      08896   LIST
0003FE 0100           08897 DUNN    movlb   0               ; 1 Reset banks to 0
                      08898 DUNN5   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
000400 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000402 0012           08899         return                  ; 2 Done
                      08912   LIST
000404                08913 INIT
                      08949   LIST
000404                08950 main
                      00247 
                      00248 
                      00249 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00036   #HEADER
                      00250 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00062   #CONFIG
                      00251 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00282   BANKA   $0000, $005F
                      00252 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00283   BANK0   $0060, $00FF
                      00253 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00284   BANK1   $0100, $01FF
                      00254 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00285   BANK2   $0200, $02FF
                      00255 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00286   BANK3   $0300, $03FF
                      00256 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00287   BANK4   $0400, $04FF
                      00257 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00288   BANK5   $0500, $05FF
                      00258 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00290   'EEPROM  $F00000, $F000FF
                      00259 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00292       #MSG "LONG Variables enabled (PBPL used)"
                      00260 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00293       LIBRARY  "PBPPI18L"
                      00261 
                      00262 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00294       INCLUDE "PBPPI18L.RAM"
                      00263 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00297       INCLUDE "PBPPIC18.RAM"
                      00264 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00298   #ENDIF
                      00265 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00299   DEFINE  ADC_CHANNELS  1
                      00266 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00307   #HEADER
                      00267 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00002   define OSC 16
                      00268 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00003   #CONFIG
                      00269 
                      00270 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00019   include "HPWM10_L.pbp"
                      00271 
                      00272 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00018   disable debug
                      00273         DDISABLE?       
                      00274 
                      00275 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00019   asm
                      00276 
                      00277         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00278 
                      00279   if (R1 - R0 == 4)
                      00280   else
                      00281     messg You must use PBPL
                      00282   endif
                      00283 ;____[ HPWM10: 10-bit HPWM, with up to 5 CCP modules ]_____________
                      00284 
                      00285 HPWM10 macro  Channel, Duty, Freq   
                      00286     if Channel < 6 
                      00287       MOVE?CB Channel, _HP_Channel      ; Save channel from constant
                      00288     else
                      00289       MOVE?BB Channel, _HP_Channel      ; Save channel from BYTE var
                      00290     endif
                      00291     MOVE?WW   Duty, _HP_Duty
                      00292     MOVE?WW   Freq, _HP_Freq
                      00293     L?CALL    _HPWM10_UPD    
                      00294     endm
                      00295 
                      00296 
                      00297         ENDASM?
                      00298 
                      00299 
                      00300 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00056   goto OverHPWM10
                      00301         GOTO?L  _OverHPWM10
                          M         L?GOTO  _OverHPWM10
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_OverHPWM10))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _OverHPWM10
                          M     else
                          M       if ((_OverHPWM10) < 1)
                          M         goto    _OverHPWM10
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((_OverHPWM10) > $)
000404 EFC3 F003          M         goto    _OverHPWM10
                          M         else
                          M           if ((_OverHPWM10) < ($ - 3ffh))
                          M         goto    _OverHPWM10
                          M           else
                          M         bra     _OverHPWM10
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00302 
                      00303 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00058   @PS = ((OSC * 1000000) / 1024)
                      00304 
                      00305         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
  00003D09            00306 PS = ((OSC * 1000000) / 1024)
                      00307 
                      00308         ENDASM?
                      00309 
                      00310 
                      00311 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00059   @PR2const = ((OSC * 1000000) / 4)  ;<---
                            -Added
                      00312 
                      00313         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
  003D0900            00314 PR2const = ((OSC * 1000000) / 4)  ;<----Added
                      00315 
                      00316         ENDASM?
                      00317 
                      00318 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00060   PS  CON EXT                        ;<---
                            -Added
                      00319 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00061   PR2const CON EXT
                      00320 
                      00321 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00062   HPWM10_UPD:  
                      00322 
                      00323         LABEL?L _HPWM10_UPD     
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _HPWM10_UPD
                          M         XALL
                          M     else
000408                    M _HPWM10_UPD
                          M     endif
                      00324 
                      00325 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00064       HP_Temp = PS / HP_Freq
                      00326         DIV?CWW PS, _HP_Freq, _HP_Temp
                          M         MOVE?CN PS,  R0
                          M     ifdef USE_LINKER
                          M         CHK?RP  R0
                          M         movlw   low (PS)
                          M         movwf   R0
                          M         movlw   high (PS)
                          M         movwf   (R0)   + 1
                          M         movlw   upper (PS)
                          M         movwf   (R0)   + 2
                          M         movlw   (PS)  >> 24
                          M         movwf   (R0)   + 3
                          M     else
                          M         MOVE?CB low (PS),  R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     if (low (low (PS)) == 0)
                          M         clrf    R0
                          M     else
                          M       if (low (low (PS)) == 255)
                          M         setf    R0
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000408 0E09               M         movlw   low (low (PS))
00040A 6E12               M         movwf   R0
                          M       endif
                          M     endif
                          M         MOVE?CB high (PS),  (R0)   + 1
                          M         CHK?RP  (R0) + 1
                          M     if ((((R0) + 1) & 8000h) != PREV_ALT)
                          M       if (((R0) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 1) & 8000h
                          M     endif
                          M     if (((((R0) + 1) & 0fffh) > BANKA_END) & ((((R0) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 1)
                          M PREV_BANK = high ((R0) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (PS)) == 0)
                          M         clrf    (R0) + 1
                          M     else
                          M       if (low (high (PS)) == 255)
                          M         setf    (R0) + 1
                          M       else
00040C 0E3D               M         movlw   low (high (PS))
00040E 6E13               M         movwf   (R0) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (PS),  (R0)   + 2
                          M         CHK?RP  (R0) + 2
                          M     if ((((R0) + 2) & 8000h) != PREV_ALT)
                          M       if (((R0) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 2) & 8000h
                          M     endif
                          M     if (((((R0) + 2) & 0fffh) > BANKA_END) & ((((R0) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 2)
                          M PREV_BANK = high ((R0) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (PS)) == 0)
000410 6A14               M         clrf    (R0) + 2
                          M     else
                          M       if (low (upper (PS)) == 255)
                          M         setf    (R0) + 2
                          M       else
                          M         movlw   low (upper (PS))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (R0) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (PS)  >> 24, (R0)   + 3
                          M         CHK?RP  (R0) + 3
                          M     if ((((R0) + 3) & 8000h) != PREV_ALT)
                          M       if (((R0) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 3) & 8000h
                          M     endif
                          M     if (((((R0) + 3) & 0fffh) > BANKA_END) & ((((R0) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 3)
                          M PREV_BANK = high ((R0) + 3)
                          M       endif
                          M     endif
                          M     if (low ((PS) >> 24) == 0)
000412 6A15               M         clrf    (R0) + 3
                          M     else
                          M       if (low ((PS) >> 24) == 255)
                          M         setf    (R0) + 3
                          M       else
                          M         movlw   low ((PS) >> 24)
                          M         movwf   (R0) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         MOVE?WN _HP_Freq, R1
                          M         MOVE?BB _HP_Freq, R1
000414 C032 F016          M         movff   _HP_Freq, R1
                          M         MOVE?BB (_HP_Freq) + 1, (R1) + 1
000418 C033 F017          M         movff   (_HP_Freq) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
00041C 6A18               M         clrf    (R1)   + 2
00041E 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  DIVS
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
000420 DF16               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000422 6E34               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000424 C013 F035          M         movff   (R0) + 1, (_HP_Temp) + 1
                      00327 
                      00328 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00065       if HP_Temp >= 4 then
                      00329         CMPLT?WCL       _HP_Temp, 004h, L00003
                          M     if ((004h) >= 10000h)
                          M         L?GOTO  L00003
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((004h) > 0)
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
000428 C034 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
00042C C035 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?CB (004h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((004h) >> 8) == 0)
000430 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low ((004h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low ((004h) >> 8)
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (004h)
000432 0E04               M         movlw   low (low (004h))
                          M         L?CALL  CMPLTW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLTW
                          M     else
                          M       if ((CMPLTW) < 1)
                          M         call    CMPLTW
                          M       else
                          M         if ((CMPLTW) > $)
                          M         call    CMPLTW
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((CMPLTW) < ($ - 3ffh))
                          M         call    CMPLTW
                          M           else
000434 DEE8               M         rcall   CMPLTW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000436 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
000438 EF2C F002          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
                          M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       endif
                          M     endif
                      00330 
                      00331 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00066           if PS1 <> 1 then PSchanged = 1 
                      00332         CMPEQ?TCL       _PS1, 001h, L00005
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
00043C 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 001h, L00005
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 001h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
00043E B23D               M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
000440 EF23 F002          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
                          M             else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bra     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00333         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000444 843D               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00334         LABEL?L L00005  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
000446                    M L00005
                          M     endif
                      00335 
                      00336 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00067           PS1 = 1
                      00337         MOVE?CT 001h, _PS1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000446 823D               M         bsf     _HP_Flags, 001h
                          M     else
                          M         bcf     _HP_Flags, 001h
                          M     endif
                      00338 
                      00339 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00068           if PS0 <> 1 then PSchanged = 1 
                      00340         CMPEQ?TCL       _PS0, 001h, L00007
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000448 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 000h, L00007
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00007))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00007) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M             else
                          M         bov     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
00044A B03D               M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
00044C EF29 F002          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 3ffh))
                          M         goto    L00007
                          M             else
                          M         bra     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00341         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000450 843D               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00342         LABEL?L L00007  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00007
                          M         XALL
                          M     else
000452                    M L00007
                          M     endif
                      00343 
                      00344 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00069           PS0 = 1
                      00345         MOVE?CT 001h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000452 803D               M         bsf     _HP_Flags, 000h
                          M     else
                          M         bcf     _HP_Flags, 000h
                          M     endif
                      00346 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00347 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00070       else
                      00348         GOTO?L  L00004
                          M         L?GOTO  L00004
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00004
                          M     else
                          M       if ((L00004) < 1)
                          M         goto    L00004
                          M       else
                          M         if ((L00004) > $)
000454 EF4A F002          M         goto    L00004
                          M         else
                          M           if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M           else
                          M         bra     L00004
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00349         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00003
                          M         XALL
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000458                    M L00003
                          M     endif
                      00350 
                      00351 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00071           if PS1 <> 0 then PSchanged = 1 
                      00352         CMPEQ?TCL       _PS1, 000h, L00009
                          M     if (((000h) == 0) | ((000h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000458 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 000h, _HP_Flags, 001h, L00009
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00009))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((000h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M             else
                          M         bov     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((000h)   == 0)
00045A A23D               M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
00045C EF31 F002          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 3ffh))
                          M         goto    L00009
                          M             else
                          M         bra     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00353         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000460 843D               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00354         LABEL?L L00009  
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00009
                          M         XALL
                          M     else
000462                    M L00009
                          M     endif
                      00355 
                      00356 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00072           PS1 = 0
                      00357         MOVE?CT 000h, _PS1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 001h
                          M     else
000462 923D               M         bcf     _HP_Flags, 001h
                          M     endif
                      00358 
                      00359 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00073           if HP_Temp > 0 then 
                      00360         CMPLE?WCL       _HP_Temp, 000h, L00011
                          M     if ((000h) >= 0ffffh)
                          M         L?GOTO  L00011
                          M     else
                          M       if ((000h) >= 0)
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
000464 C034 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
000468 C035 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?CB (000h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((000h) >> 8) == 0)
00046C 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low ((000h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low ((000h) >> 8)
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (000h)
00046E 0E00               M         movlw   low (low (000h))
                          M         L?CALL  CMPLEW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLEW
                          M     else
                          M       if ((CMPLEW) < 1)
                          M         call    CMPLEW
                          M       else
                          M         if ((CMPLEW) > $)
                          M         call    CMPLEW
                          M         else
                          M           if ((CMPLEW) < ($ - 3ffh))
                          M         call    CMPLEW
                          M           else
000470 DEC7               M         rcall   CMPLEW
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00011
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00011))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M             else
                          M         bov     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000472 A4D8               M         btfss   STATUS, Z
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
000474 EF44 F002          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 3ffh))
                          M         goto    L00011
                          M             else
                          M         bra     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       endif
                          M     endif
                      00361 
                      00362 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00074               if PS0 <> 1 then PSchanged =
                             1 
                      00363         CMPEQ?TCL       _PS0, 001h, L00013
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000478 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 000h, L00013
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00013))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M             else
                          M         bov     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
00047A B03D               M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
00047C EF41 F002          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 3ffh))
                          M         goto    L00013
                          M             else
                          M         bra     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00364         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000480 843D               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00365         LABEL?L L00013  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00013
                          M         XALL
                          M     else
000482                    M L00013
                          M     endif
                      00366 
                      00367 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00075               PS0 = 1
                      00368         MOVE?CT 001h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000482 803D               M         bsf     _HP_Flags, 000h
                          M     else
                          M         bcf     _HP_Flags, 000h
                          M     endif
                      00369 
                      00370 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00076           else
                      00371         GOTO?L  L00012
                          M         L?GOTO  L00012
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00012))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00012
                          M     else
                          M       if ((L00012) < 1)
                          M         goto    L00012
                          M       else
                          M         if ((L00012) > $)
000484 EF4A F002          M         goto    L00012
                          M         else
                          M           if ((L00012) < ($ - 3ffh))
                          M         goto    L00012
                          M           else
                          M         bra     L00012
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00372         LABEL?L L00011  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00011
                          M         XALL
                          M     else
000488                    M L00011
                          M     endif
                      00373 
                      00374 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00077               if PS0 <> 0 then PSchanged =
                             1 
                      00375         CMPEQ?TCL       _PS0, 000h, L00015
                          M     if (((000h) == 0) | ((000h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000488 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 000h, _HP_Flags, 000h, L00015
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00015))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((000h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 7fh))
                          M         btfsc   STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00015
                          M             else
                          M         bov     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((000h)   == 0)
00048A A03D               M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
00048C EF49 F002          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 3ffh))
                          M         goto    L00015
                          M             else
                          M         bra     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00376         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000490 843D               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00377         LABEL?L L00015  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00015
                          M         XALL
                          M     else
000492                    M L00015
                          M     endif
                      00378 
                      00379 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00078               PS0 = 0
                      00380         MOVE?CT 000h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 000h
                          M     else
000492 903D               M         bcf     _HP_Flags, 000h
                          M     endif
                      00381 
                      00382 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00079           endif
                      00383         LABEL?L L00012  
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00012
                          M         XALL
                          M     else
000494                    M L00012
                          M     endif
                      00384 
                      00385 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00080       endif
                      00386         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
000494                    M L00004
                          M     endif
                      00387 
                      00388 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00091       HP_Temp =PR2const/HP_Freq 'DIV32 HP_
                            Freq <-------------------changed
                      00389         DIV?CWW PR2const, _HP_Freq, _HP_Temp
                          M         MOVE?CN PR2const, R0
                          M     ifdef USE_LINKER
                          M         CHK?RP  R0
                          M         movlw   low (PR2const)
                          M         movwf   R0
                          M         movlw   high (PR2const)
                          M         movwf   (R0)   + 1
                          M         movlw   upper (PR2const)
                          M         movwf   (R0)   + 2
                          M         movlw   (PR2const) >> 24
                          M         movwf   (R0)   + 3
                          M     else
                          M         MOVE?CB low (PR2const), R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     if (low (low (PR2const)) == 0)
000494 6A12               M         clrf    R0
                          M     else
                          M       if (low (low (PR2const)) == 255)
                          M         setf    R0
                          M       else
                          M         movlw   low (low (PR2const))
                          M         movwf   R0
                          M       endif
                          M     endif
                          M         MOVE?CB high (PR2const), (R0) + 1
                          M         CHK?RP  (R0) + 1
                          M     if ((((R0) + 1) & 8000h) != PREV_ALT)
                          M       if (((R0) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 1) & 8000h
                          M     endif
                          M     if (((((R0) + 1) & 0fffh) > BANKA_END) & ((((R0) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 1)
                          M PREV_BANK = high ((R0) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (PR2const)) == 0)
                          M         clrf    (R0) + 1
                          M     else
                          M       if (low (high (PR2const)) == 255)
                          M         setf    (R0) + 1
                          M       else
000496 0E09               M         movlw   low (high (PR2const))
000498 6E13               M         movwf   (R0) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (PR2const), (R0) + 2
                          M         CHK?RP  (R0) + 2
                          M     if ((((R0) + 2) & 8000h) != PREV_ALT)
                          M       if (((R0) + 2) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 2) & 8000h
                          M     endif
                          M     if (((((R0) + 2) & 0fffh) > BANKA_END) & ((((R0) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 2)
                          M PREV_BANK = high ((R0) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (PR2const)) == 0)
                          M         clrf    (R0) + 2
                          M     else
                          M       if (low (upper (PR2const)) == 255)
                          M         setf    (R0) + 2
                          M       else
00049A 0E3D               M         movlw   low (upper (PR2const))
00049C 6E14               M         movwf   (R0) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (PR2const) >> 24, (R0) + 3
                          M         CHK?RP  (R0) + 3
                          M     if ((((R0) + 3) & 8000h) != PREV_ALT)
                          M       if (((R0) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 3) & 8000h
                          M     endif
                          M     if (((((R0) + 3) & 0fffh) > BANKA_END) & ((((R0) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 3)
                          M PREV_BANK = high ((R0) + 3)
                          M       endif
                          M     endif
                          M     if (low ((PR2const) >> 24) == 0)
00049E 6A15               M         clrf    (R0) + 3
                          M     else
                          M       if (low ((PR2const) >> 24) == 255)
                          M         setf    (R0) + 3
                          M       else
                          M         movlw   low ((PR2const) >> 24)
                          M         movwf   (R0) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         MOVE?WN _HP_Freq, R1
                          M         MOVE?BB _HP_Freq, R1
0004A0 C032 F016          M         movff   _HP_Freq, R1
                          M         MOVE?BB (_HP_Freq) + 1, (R1) + 1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004A4 C033 F017          M         movff   (_HP_Freq) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
0004A8 6A18               M         clrf    (R1)   + 2
0004AA 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
0004AC DED0               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0004AE 6E34               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0004B0 C013 F035          M         movff   (R0) + 1, (_HP_Temp) + 1
                      00390 
                      00391 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00093       if PS0 then HP_Temp = HP_Temp >> 2  
                            ; /4
                      00392         CMPF?TL _PS0, L00017
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
0004B4 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 000h, L00017
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00017))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 7fh))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M             else
                          M         bov     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0004B6 A03D               M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
0004B8 EF69 F002          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 3ffh))
                          M         goto    L00017
                          M             else
                          M         bra     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00393         SHIFTR?WCW      _HP_Temp, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Temp))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Temp
                          M         rrcf    (_HP_Temp) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Temp
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rrcf    _HP_Temp, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
0004BC C034 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
0004C0 C035 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
0004C4 6A14               M         clrf    (R0)   + 2
0004C6 6A15               M         clrf    (R0)   + 3
0004C8 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
0004CA DE92               M         rcall   SHIFTR
                          M           endif
                          M         endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0004CC 6E34               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0004CE C013 F035          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00394         LABEL?L L00017  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00017
                          M         XALL
                          M     else
0004D2                    M L00017
                          M     endif
                      00395 
                      00396 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00094       if PS1 then HP_Temp = HP_Temp >> 2  
                            ; /4 or 16
                      00397         CMPF?TL _PS1, L00019
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
0004D2 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 001h, L00019
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00019))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M             else
                          M         bov     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0004D4 A23D               M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00019
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((L00019) < 1)
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
0004D6 EF78 F002          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 3ffh))
                          M         goto    L00019
                          M             else
                          M         bra     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00398         SHIFTR?WCW      _HP_Temp, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Temp))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Temp
                          M         rrcf    (_HP_Temp) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
0004DA C034 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
0004DE C035 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
0004E2 6A14               M         clrf    (R0)   + 2
0004E4 6A15               M         clrf    (R0)   + 3
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004E6 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
0004E8 DE83               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0004EA 6E34               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0004EC C013 F035          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00399         LABEL?L L00019  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00019
                          M         XALL
                          M     else
0004F0                    M L00019
                          M     endif
                      00400 
                      00401 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00095       HP_PR2 = HP_Temp.lowbyte - 1
                      00402         SUB?BCB _HP_Temp??LOWBYTE, 001h, _HP_PR2
                          M     if ((_HP_PR2) == (_HP_Temp??LOWBYTE))
                          M       if ((001h) == 1)
                          M         CHK?RP  _HP_PR2
                          M         decf    _HP_PR2, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _HP_PR2
                          M         subwf   _HP_PR2, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M     if (((_HP_Temp??LOWBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??LOWBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??LOWBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??LOWBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??LOWBYTE) & 0fffh) < (0f01h + BANKA_EN
                            D)))
                          M       if (((_HP_Temp??LOWBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??LOWBYTE)
                          M PREV_BANK = high (_HP_Temp??LOWBYTE)
                          M       endif
                          M     endif
0004F0 0434               M         decf    _HP_Temp??LOWBYTE, W
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M         subwf   _HP_Temp??LOWBYTE, W
                          M       endif
                          M         MOVE?AB _HP_PR2
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
0004F2 6E3E               M         movwf   _HP_PR2
                          M     endif
                      00403 
                      00404 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00096       if HP_PR2 <> PR2 then PR2changed = 1
                      00405         CMPEQ?BBL       _HP_PR2, PR2, L00021
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
0004F4 0004               M         clrwdt
                          M     endif
                          M         MOVE?BA _HP_PR2
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
0004F6 503E               M         movf    _HP_PR2, W
                          M         CHK?RP  PR2
                          M     if (((PR2)   & 8000h) != PREV_ALT)
                          M       if ((PR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PR2)   & 8000h
                          M     endif
                          M     if ((((PR2)   & 0fffh) > BANKA_END) & (((PR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PR2)
                          M PREV_BANK = high (PR2)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0004F8 5CBB               M         subwf   PR2,  W
                          M         BIT?GOTO 1, STATUS, Z, L00021
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00021))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((1)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M             else
                          M         bov     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfss   STATUS, Z
                          M       else
0004FA B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
0004FC EF81 F002          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 3ffh))
                          M         goto    L00021
                          M             else
                          M         bra     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00406         MOVE?CT 001h, _PR2changed
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000500 863D               M         bsf     _HP_Flags, 003h
                          M     else
                          M         bcf     _HP_Flags, 003h
                          M     endif
                      00407         LABEL?L L00021  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef PM_USED
                          M         LALL
                          M L00021
                          M         XALL
                          M     else
000502                    M L00021
                          M     endif
                      00408 
                      00409 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00100       HP_Temp = (HP_PR2 + 1) << 2  ; * 4
                      00410         ADD?BCN _HP_PR2, 001h, T1
                          M     if ((001h) == 1)
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
000502 283E               M         incf    _HP_PR2, W
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000504 6E22               M         movwf   T1
000506 6A23               M         clrf    (T1)   + 1
000508 6A24               M         clrf    (T1)   + 2
00050A 6A25               M         clrf    (T1)   + 3
00050C 3623               M         rlcf    (T1)   + 1, F
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _HP_PR2
                          M         addwf   _HP_PR2, W
                          M         MOVE?AN T1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   high (001h)
                          M         addwfc  (T1)   + 1, F
                          M         movlw   upper (001h)
                          M         addwfc  (T1)   + 2, F
                          M         movlw   (001h) >> 24
                          M         addwfc  (T1)   + 3, F
                          M     endif
                      00411         SHIFTL?NCW      T1, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M         CHK?RP  T1
                          M         rlcf    T1,  W
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M     else
                          M         MOVE?NW T1,  R0
                          M         MOVE?BB T1,  R0
00050E C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000512 C023 F013          M         movff   (T1) + 1, (R0) + 1
000516 0E02               M         movlw   002h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
                          M         call    SHIFTL
                          M           else
000518 DE61               M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
00051A 6E34               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
00051C C013 F035          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00412 
                      00413 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00102       HP_Duty = (HP_Temp * HP_Duty)/1023 '
                            DIV32 1023 <-------------------changed
                      00414         MUL?WWN _HP_Temp, _HP_Duty, T1
                          M         MOVE?WN _HP_Temp, R3
                          M         MOVE?BB _HP_Temp, R3
000520 C034 F01E          M         movff   _HP_Temp, R3
                          M         MOVE?BB (_HP_Temp) + 1, (R3) + 1
000524 C035 F01F          M         movff   (_HP_Temp) + 1, (R3) + 1
                          M         CHK?RP  R3
                          M     if (((R3)    & 8000h) != PREV_ALT)
                          M       if ((R3)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R3)    & 8000h
                          M     endif
                          M     if ((((R3)    & 0fffh) > BANKA_END) & (((R3)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R3)
                          M PREV_BANK = high (R3)
                          M       endif
                          M     endif
000528 6A20               M         clrf    (R3)   + 2
00052A 6A21               M         clrf    (R3)   + 3
                          M         MOVE?WN _HP_Duty, R1
                          M         MOVE?BB _HP_Duty, R1
00052C C030 F016          M         movff   _HP_Duty, R1
                          M         MOVE?BB (_HP_Duty) + 1, (R1) + 1
000530 C031 F017          M         movff   (_HP_Duty) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
000534 6A18               M         clrf    (R1)   + 2
000536 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000538 DECE               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00053A 6E22               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
00053C C01B F023          M         movff   (R2) + 1, (T1) + 1
                          M         MOVE?BB (R2)  + 2, (T1)   + 2
000540 C01C F024          M         movff   (R2) + 2, (T1) + 2
                          M         MOVE?BB (R2)  + 3, (T1)   + 3
000544 C01D F025          M         movff   (R2) + 3, (T1) + 3
                      00415         DIV?NCW T1, 0000003FFh, _HP_Duty
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000548 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00054C C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000550 C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000554 C025 F015          M         movff   (T1) + 3, (R0) + 3
                          M         MOVE?CN 0000003FFh, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (0000003FFh)
                          M         movwf   R1
                          M         movlw   high (0000003FFh)
                          M         movwf   (R1)   + 1
                          M         movlw   upper (0000003FFh)
                          M         movwf   (R1)   + 2
                          M         movlw   (0000003FFh) >> 24
                          M         movwf   (R1)   + 3
                          M     else
                          M         MOVE?CB low (0000003FFh), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (0000003FFh)) == 0)
                          M         clrf    R1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (low (0000003FFh)) == 255)
000558 6816               M         setf    R1
                          M       else
                          M         movlw   low (low (0000003FFh))
                          M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (0000003FFh), (R1) + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (0000003FFh)) == 0)
                          M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (0000003FFh)) == 255)
                          M         setf    (R1) + 1
                          M       else
00055A 0E03               M         movlw   low (high (0000003FFh))
00055C 6E17               M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (0000003FFh), (R1) + 2
                          M         CHK?RP  (R1) + 2
                          M     if ((((R1) + 2) & 8000h) != PREV_ALT)
                          M       if (((R1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 2) & 8000h
                          M     endif
                          M     if (((((R1) + 2) & 0fffh) > BANKA_END) & ((((R1) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 2)
                          M PREV_BANK = high ((R1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (0000003FFh)) == 0)
00055E 6A18               M         clrf    (R1) + 2
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (upper (0000003FFh)) == 255)
                          M         setf    (R1) + 2
                          M       else
                          M         movlw   low (upper (0000003FFh))
                          M         movwf   (R1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (0000003FFh) >> 24, (R1) + 3
                          M         CHK?RP  (R1) + 3
                          M     if ((((R1) + 3) & 8000h) != PREV_ALT)
                          M       if (((R1) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 3) & 8000h
                          M     endif
                          M     if (((((R1) + 3) & 0fffh) > BANKA_END) & ((((R1) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 3)
                          M PREV_BANK = high ((R1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((0000003FFh) >> 24) == 0)
000560 6A19               M         clrf    (R1) + 3
                          M     else
                          M       if (low ((0000003FFh) >> 24) == 255)
                          M         setf    (R1) + 3
                          M       else
                          M         movlw   low ((0000003FFh) >> 24)
                          M         movwf   (R1) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
000562 DE75               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Duty
                          M         MOVE?AB _HP_Duty
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
000564 6E30               M         movwf   _HP_Duty
                          M         MOVE?BB (R0)  + 1, (_HP_Duty) + 1
000566 C013 F031          M         movff   (R0) + 1, (_HP_Duty) + 1
                      00416 
                      00417 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00107       Branch HP_Channel,[GetCH_Done,GetCH_
                            1,GetCH_2,GetCH_3,GetCH_4,GetCH_5]
                      00418         BRANCH?BCL      _HP_Channel, 006h, L00001
  0000                    M     local jmptbl
                          M         MOVE?BA _HP_Channel
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
00056A 503C               M         movf    _HP_Channel, W
00056C 6E12               M         movwf   R0
00056E 0805               M         sublw   (006h) - 1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         BIT?GOTO 0, STATUS, C, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000570 A0D8               M         btfss   STATUS, C
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, C
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
000572 EFCD F002          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000576 6AFA               M         clrf    PCLATH
000578 6AFB               M         clrf    PCLATU
00057A 3612               M         rlcf    R0, F
00057C 36FA               M         rlcf    PCLATH, F
00057E 0E8E               M         movlw   low (jmptbl)
000580 2612               M         addwf   R0, F
000582 0E05               M         movlw   high (jmptbl)
000584 22FA               M         addwfc  PCLATH, F
000586 0E00               M         movlw   upper (jmptbl)
000588 22FB               M         addwfc  PCLATU, F
00058A 5012               M         movf    R0, W
00058C 6EF9               M         movwf   PCL
00058E                    M jmptbl
                      00419         BRGOTO?L        _GetCH_Done
00058E D021               M         bra     _GetCH_Done
                      00420         BRGOTO?L        _GetCH_1
000590 D004               M         bra     _GetCH_1
                      00421         BRGOTO?L        _GetCH_2
000592 D009               M         bra     _GetCH_2
                      00422         BRGOTO?L        _GetCH_3
000594 D00E               M         bra     _GetCH_3
                      00423         BRGOTO?L        _GetCH_4
000596 D013               M         bra     _GetCH_4
                      00424         BRGOTO?L        _GetCH_5
000598 D018               M         bra     _GetCH_5
                      00425 
                      00426         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
00059A                    M L00001
                          M     endif
                      00427 
                      00428 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00109       GetCH_1:
                      00429 
                      00430         LABEL?L _GetCH_1        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_1
                          M         XALL
                          M     else
00059A                    M _GetCH_1
                          M     endif
                      00431 
                      00432 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00110               ASM
                      00433 
                      00434         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00435 
                      00436               ifdef CCP1CON  
                      00437                 MOVE?BB  CCPR1L,  _HP_Temp
00059A CFBE F034          M         movff   CCPR1L, _HP_Temp
                      00438                 MOVE?BB  CCP1CON, _HP_Temp + 1
00059E CFBD F035          M         movff   CCP1CON, _HP_Temp + 1
0005A2 EFE9 F002      00439                 goto _GetCH_Done        
                      00440               endif  
                      00441             
                      00442 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00443         ENDASM?
                      00444 
                      00445 
                      00446 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00117       GetCH_2:  
                      00447 
                      00448         LABEL?L _GetCH_2        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_2
                          M         XALL
                          M     else
0005A6                    M _GetCH_2
                          M     endif
                      00449 
                      00450 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00118               ASM
                      00451 
                      00452         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00453 
                      00454               ifdef CCP2CON  
                      00455                 MOVE?BB  CCPR2L,  _HP_Temp
0005A6 CF67 F034          M         movff   CCPR2L, _HP_Temp
                      00456                 MOVE?BB  CCP2CON, _HP_Temp + 1
0005AA CF66 F035          M         movff   CCP2CON, _HP_Temp + 1
0005AE EFE9 F002      00457                 goto _GetCH_Done        
                      00458               endif  
                      00459             
                      00460 
                      00461         ENDASM?
                      00462 
                      00463 
                      00464 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00125       GetCH_3:  
                      00465 
                      00466         LABEL?L _GetCH_3        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_3
                          M         XALL
                          M     else
0005B2                    M _GetCH_3
                          M     endif
                      00467 
                      00468 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00126               ASM
                      00469 
                      00470         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00471 
                      00472               ifdef CCP3CON  
                      00473                 MOVE?BB  CCPR3L,  _HP_Temp
0005B2 CF5E F034          M         movff   CCPR3L, _HP_Temp
                      00474                 MOVE?BB  CCP3CON, _HP_Temp + 1
0005B6 CF5D F035          M         movff   CCP3CON, _HP_Temp + 1
0005BA EFE9 F002      00475                 goto _GetCH_Done        
                      00476               endif  
                      00477             
                      00478 
                      00479         ENDASM?
                      00480 
                      00481 
                      00482 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00133       GetCH_4:  
                      00483 
                      00484         LABEL?L _GetCH_4        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         LALL
                          M _GetCH_4
                          M         XALL
                          M     else
0005BE                    M _GetCH_4
                          M     endif
                      00485 
                      00486 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00134               ASM
                      00487 
                      00488         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00489 
                      00490               ifdef CCP4CON  
                      00491                 MOVE?BB  CCPR4L,  _HP_Temp
0005BE CF58 F034          M         movff   CCPR4L, _HP_Temp
                      00492                 MOVE?BB  CCP4CON, _HP_Temp + 1
0005C2 CF57 F035          M         movff   CCP4CON, _HP_Temp + 1
0005C6 EFE9 F002      00493                 goto _GetCH_Done        
                      00494               endif  
                      00495             
                      00496 
                      00497         ENDASM?
                      00498 
                      00499 
                      00500 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00141       GetCH_5:  
                      00501 
                      00502         LABEL?L _GetCH_5        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_5
                          M         XALL
                          M     else
0005CA                    M _GetCH_5
                          M     endif
                      00503 
                      00504 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00142               ASM
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00505 
                      00506         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00507 
                      00508               ifdef CCP5CON  
                      00509                 MOVE?BB  CCPR5L,  _HP_Temp
0005CA CF55 F034          M         movff   CCPR5L, _HP_Temp
                      00510                 MOVE?BB  CCP5CON, _HP_Temp + 1
0005CE CF54 F035          M         movff   CCP5CON, _HP_Temp + 1
                      00511               endif  
                      00512             
                      00513 
                      00514         ENDASM?
                      00515 
                      00516 
                      00517 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00149   GetCH_Done:
                      00518 
                      00519         LABEL?L _GetCH_Done     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_Done
                          M         XALL
                          M     else
0005D2                    M _GetCH_Done
                          M     endif
                      00520 
                      00521 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00150       HP_Temp = (HP_Temp.lowbyte << 2) | (
                            (HP_Temp.highbyte & %110000) >> 4)
                      00522         SHIFTL?BCN      _HP_Temp??LOWBYTE, 002h, T1
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M         rlcf    _HP_Temp??LOWBYTE, W
                          M         MOVE?AN T1
                          M         rlcf    (T1)   + 1, F
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BN _HP_Temp??LOWBYTE, R0
                          M         MOVE?BB _HP_Temp??LOWBYTE, R0
0005D2 C034 F012          M         movff   _HP_Temp??LOWBYTE, R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
0005D6 6A13               M         clrf    (R0)   + 1
0005D8 6A14               M         clrf    (R0)   + 2
0005DA 6A15               M         clrf    (R0)   + 3
0005DC 0E02               M         movlw   002h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
0005DE ECEE F000          M         call    SHIFTL
                          M           else
                          M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005E2 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
0005E4 C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
0005E8 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
0005EC C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      00523         AND?BCN _HP_Temp??HIGHBYTE, 030h, T2
0005F0 0E30               M         movlw   030h
                          M         CHK?RP  _HP_Temp??HIGHBYTE
                          M     if (((_HP_Temp??HIGHBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??HIGHBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??HIGHBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??HIGHBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??HIGHBYTE) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if (((_HP_Temp??HIGHBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??HIGHBYTE)
                          M PREV_BANK = high (_HP_Temp??HIGHBYTE)
                          M       endif
                          M     endif
0005F2 1435               M         andwf   _HP_Temp??HIGHBYTE, W
                          M         MOVE?AN T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0005F4 6E26               M         movwf   T2
0005F6 6A27               M         clrf    (T2)   + 1
0005F8 6A28               M         clrf    (T2)   + 2
0005FA 6A29               M         clrf    (T2)   + 3
                      00524         SHIFTR?NCN      T2, 004h, T2
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T2)   == (T2))
                          M         CHK?RP  T2
                          M         rrcf    (T2)   + 3, F
                          M         rrcf    (T2)   + 2, F
                          M         rrcf    (T2)   + 1, F
                          M         rrcf    T2,   F
                          M       else
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 3, W
                          M         MOVE?AB (T2)   + 3
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 2, W
                          M         MOVE?AB (T2)   + 2
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 1, W
                          M         MOVE?AB (T2)   + 1
                          M         CHK?RP  T2
                          M         rrcf    T2,  W
                          M         MOVE?AB T2
                          M       endif
                          M     else
                          M         MOVE?NN T2,  R0
                          M         MOVE?BB T2,  R0
0005FC C026 F012          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
000600 C027 F013          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?BB (T2)  + 2, (R0)   + 2
000604 C028 F014          M         movff   (T2) + 2, (R0) + 2
                          M         MOVE?BB (T2)  + 3, (R0)   + 3
000608 C029 F015          M         movff   (T2) + 3, (R0) + 3
00060C 0E04               M         movlw   004h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
00060E ECF8 F000          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000612 6E26               M         movwf   T2
                          M         MOVE?BB (R0)  + 1, (T2)   + 1
000614 C013 F027          M         movff   (R0) + 1, (T2) + 1
                          M         MOVE?BB (R0)  + 2, (T2)   + 2
000618 C014 F028          M         movff   (R0) + 2, (T2) + 2
                          M         MOVE?BB (R0)  + 3, (T2)   + 3
00061C C015 F029          M         movff   (R0) + 3, (T2) + 3
                          M     endif
                      00525         OR?NNW  T1, T2, _HP_Temp
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000620 5022               M         movf    T1,  W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000622 1026               M         iorwf   T2,   W
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000624 6E34               M         movwf   _HP_Temp
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) & 8000h) != PREV_ALT)
                          M       if ((T1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1 + 1) & 8000h
                          M     endif
                          M     if ((((T1 + 1) & 0fffh) > BANKA_END) & (((T1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000626 5023               M         movf    T1 + 1, W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000628 1027               M         iorwf   T2   + 1, W
                          M         MOVE?AB _HP_Temp + 1
                          M         CHK?RP  _HP_Temp + 1
                          M     if (((_HP_Temp + 1) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp + 1) & 8000h
                          M     endif
                          M     if ((((_HP_Temp + 1) & 0fffh) > BANKA_END) & (((_HP_Temp + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp + 1)
                          M PREV_BANK = high (_HP_Temp + 1)
                          M       endif
                          M     endif
00062A 6E35               M         movwf   _HP_Temp + 1
                      00526 
                      00527 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00154       if HP_Temp <> HP_Duty then  ; if Dut
                            yCycle Changed
                      00528         CMPEQ?WWL       _HP_Temp, _HP_Duty, L00023
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
00062C C034 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
000630 C035 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?WWA _HP_Duty, R1
                          M         MOVE?BB (_HP_Duty) + 1, (R1) + 1
000634 C031 F017          M         movff   (_HP_Duty) + 1, (R1) + 1
                          M         MOVE?BA _HP_Duty
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
000638 5030               M         movf    _HP_Duty, W
                          M         L?CALL  CMPEQW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPEQW
                          M     else
                          M       if ((CMPEQW) < 1)
                          M         call    CMPEQW
                          M       else
                          M         if ((CMPEQW) > $)
                          M         call    CMPEQW
                          M         else
                          M           if ((CMPEQW) < ($ - 3ffh))
00063A ECFD F000          M         call    CMPEQW
                          M           else
                          M         rcall   CMPEQW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00023
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00023))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M             else
                          M         bov     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00063E A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
000640 EF89 F003          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00023
                          M             else
                          M         bra     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00529 
                      00530 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00156           HP_Temp = HP_Duty >> 2        ; 
                            for CCP?CON
                      00531         SHIFTR?WCW      _HP_Duty, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Duty))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Duty
                          M         rrcf    (_HP_Duty) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Duty
                          M         rrcf    _HP_Duty, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Duty, R0
                          M         MOVE?BB _HP_Duty, R0
000644 C030 F012          M         movff   _HP_Duty, R0
                          M         MOVE?BB (_HP_Duty) + 1, (R0) + 1
000648 C031 F013          M         movff   (_HP_Duty) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
00064C 6A14               M         clrf    (R0)   + 2
00064E 6A15               M         clrf    (R0)   + 3
000650 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
000652 ECF8 F000          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000656 6E34               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000658 C013 F035          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00532 
                      00533 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00157           HP_Temp.highbyte =  %1100 | ((HP
                            _Duty & %11) << 4)
                      00534         AND?WCN _HP_Duty, 003h, T1
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
00065C 0E03               M         movlw   low (003h)
00065E 1430               M         andwf   _HP_Duty, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000660 6E22               M         movwf   T1
000662 0E00               M         movlw   (003h) >> 8
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
000664 1431               M         andwf   _HP_Duty + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) & 8000h) != PREV_ALT)
                          M       if ((T1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1 + 1) & 8000h
                          M     endif
                          M     if ((((T1 + 1) & 0fffh) > BANKA_END) & (((T1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000666 6E23               M         movwf   T1 + 1
000668 6A24               M         clrf    T1   + 2
00066A 6A25               M         clrf    T1   + 3
                      00535         SHIFTL?NCN      T1, 004h, T1
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T1)   == (T1))
                          M         CHK?RP  T1
                          M         rlcf    T1,   F
                          M         rlcf    (T1)   + 1, F
                          M         rlcf    (T1)   + 2, F
                          M         rlcf    (T1)   + 3, F
                          M       else
                          M         CHK?RP  T1
                          M         rlcf    T1,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 1, W
                          M         MOVE?AB (T1)   + 1
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M       endif
                          M     else
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
00066C C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000670 C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000674 C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000678 C025 F015          M         movff   (T1) + 3, (R0) + 3
00067C 0E04               M         movlw   004h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
00067E ECEE F000          M         call    SHIFTL
                          M           else
                          M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000682 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000684 C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
000688 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
00068C C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      00536         OR?CNB  00Ch, T1, _HP_Temp??HIGHBYTE
000690 0E0C               M         movlw   00Ch
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000692 1022               M         iorwf   T1,  W
                          M         MOVE?AB _HP_Temp??HIGHBYTE
                          M         CHK?RP  _HP_Temp??HIGHBYTE
                          M     if (((_HP_Temp??HIGHBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??HIGHBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??HIGHBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??HIGHBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??HIGHBYTE) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if (((_HP_Temp??HIGHBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??HIGHBYTE)
                          M PREV_BANK = high (_HP_Temp??HIGHBYTE)
                          M       endif
                          M     endif
000694 6E35               M         movwf   _HP_Temp??HIGHBYTE
                      00537 
                      00538 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00159           if TMR2ON then              ; if
                             Timer2 is running
                      00539         CMPF?TL _TMR2ON, L00025
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000696 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, T2CON, 002h,  L00025
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00025))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  T2CON
                          M       if ((0)      == 0)
                          M         btfss   T2CON, 002h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M             else
                          M         bov     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000698 A4BA               M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
00069A EF55 F003          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 3ffh))
                          M         goto    L00025
                          M             else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bra     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00540 
                      00541 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00160               TMR2IF = 0
                      00542         MOVE?CT 000h, _TMR2IF
                          M         CHK?RP  PIR1
                          M     if (((PIR1)  & 8000h) != PREV_ALT)
                          M       if ((PIR1)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PIR1)  & 8000h
                          M     endif
                          M     if ((((PIR1)  & 0fffh) > BANKA_END) & (((PIR1)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PIR1)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PIR1)
                          M PREV_BANK = high (PIR1)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PIR1,   001h
                          M     else
00069E 929E               M         bcf     PIR1,   001h
                          M     endif
                      00543 
                      00544 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00161               while TMR2IF = 0 : wend ; le
                            t current cycle complete
                      00545         LABEL?L L00027  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00027
                          M         XALL
                          M     else
0006A0                    M L00027
                          M     endif
                      00546         CMPNE?TCL       _TMR2IF, 000h, L00028
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006A0 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PIR1,  001h,  L00028
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00028))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PIR1)  > BANKA_END) & ((PIR1)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PIR1
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
                          M         btfsc   PIR1,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M       else
                          M         if ((L00028) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M         else
                          M           if ((L00028) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M           else
                          M             if ((L00028) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M             else
                          M         bov     L00028
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfss   PIR1,  001h
                          M       else
0006A2 B29E               M         btfsc   PIR1,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00028
                          M       else
                          M         if ((L00028) < 1)
                          M         goto    L00028
                          M         else
                          M           if ((L00028) > $)
0006A4 EF55 F003          M         goto    L00028
                          M           else
                          M             if ((L00028) < ($ - 3ffh))
                          M         goto    L00028
                          M             else
                          M         bra     L00028
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
                          M         BIT?GOTO 0, PIR1,  001h,  L00028
                          M       else
                          M         L?GOTO  L00028
                          M       endif
                          M     endif
                      00547 
                      00548 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00161               while TMR2IF = 0 : wend ; le
                            t current cycle complete
                      00549         GOTO?L  L00027
                          M         L?GOTO  L00027
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00027))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         goto    L00027
                          M     else
                          M       if ((L00027) < 1)
                          M         goto    L00027
                          M       else
                          M         if ((L00027) > $)
                          M         goto    L00027
                          M         else
                          M           if ((L00027) < ($ - 3ffh))
                          M         goto    L00027
                          M           else
0006A8 D7FB               M         bra     L00027
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00550         LABEL?L L00028  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00028
                          M         XALL
                          M     else
0006AA                    M L00028
                          M     endif
                      00551 
                      00552 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00162           endif
                      00553         LABEL?L L00025  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00025
                          M         XALL
                          M     else
0006AA                    M L00025
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00554 
                      00555 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00164           Branch HP_Channel,[PutCH_Done,Pu
                            tCH_1,PutCH_2,PutCH_3,PutCH_4,PutCH_5]
                      00556         BRANCH?BCL      _HP_Channel, 006h, L00002
  0000                    M     local jmptbl
                          M         MOVE?BA _HP_Channel
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
0006AA 503C               M         movf    _HP_Channel, W
0006AC 6E12               M         movwf   R0
0006AE 0805               M         sublw   (006h) - 1
                          M         BIT?GOTO 0, STATUS, C, L00002
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00002))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M       else
                          M         if ((L00002) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M         else
                          M           if ((L00002) > $)
                          M         btfsc   STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00002
                          M           else
                          M             if ((L00002) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M             else
                          M         bov     L00002
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0006B0 A0D8               M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00002
                          M       else
                          M         if ((L00002) < 1)
                          M         goto    L00002
                          M         else
                          M           if ((L00002) > $)
0006B2 EF6D F003          M         goto    L00002
                          M           else
                          M             if ((L00002) < ($ - 3ffh))
                          M         goto    L00002
                          M             else
                          M         bra     L00002
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0006B6 6AFA               M         clrf    PCLATH
0006B8 6AFB               M         clrf    PCLATU
0006BA 3612               M         rlcf    R0, F
0006BC 36FA               M         rlcf    PCLATH, F
0006BE 0ECE               M         movlw   low (jmptbl)
0006C0 2612               M         addwf   R0, F
0006C2 0E06               M         movlw   high (jmptbl)
0006C4 22FA               M         addwfc  PCLATH, F
0006C6 0E00               M         movlw   upper (jmptbl)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006C8 22FB               M         addwfc  PCLATU, F
0006CA 5012               M         movf    R0, W
0006CC 6EF9               M         movwf   PCL
0006CE                    M jmptbl
                      00557         BRGOTO?L        _PutCH_Done
0006CE D021               M         bra     _PutCH_Done
                      00558         BRGOTO?L        _PutCH_1
0006D0 D004               M         bra     _PutCH_1
                      00559         BRGOTO?L        _PutCH_2
0006D2 D009               M         bra     _PutCH_2
                      00560         BRGOTO?L        _PutCH_3
0006D4 D00E               M         bra     _PutCH_3
                      00561         BRGOTO?L        _PutCH_4
0006D6 D013               M         bra     _PutCH_4
                      00562         BRGOTO?L        _PutCH_5
0006D8 D018               M         bra     _PutCH_5
                      00563 
                      00564         LABEL?L L00002  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00002
                          M         XALL
                          M     else
0006DA                    M L00002
                          M     endif
                      00565 
                      00566 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00166           PutCH_1:  
                      00567 
                      00568         LABEL?L _PutCH_1        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_1
                          M         XALL
                          M     else
0006DA                    M _PutCH_1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00569 
                      00570 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00167                   ASM
                      00571 
                      00572         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00573 
                      00574                   ifdef CCP1CON
                      00575                     MOVE?BB  _HP_Temp, CCPR1L
0006DA C034 FFBE          M         movff   _HP_Temp, CCPR1L
                      00576                     MOVE?BB  _HP_Temp + 1, CCP1CON
0006DE C035 FFBD          M         movff   _HP_Temp + 1, CCP1CON
0006E2 EF89 F003      00577                     goto _PutCH_Done
                      00578                   endif  
                      00579                 
                      00580 
                      00581         ENDASM?
                      00582 
                      00583 
                      00584 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00174           PutCH_2:  
                      00585 
                      00586         LABEL?L _PutCH_2        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_2
                          M         XALL
                          M     else
0006E6                    M _PutCH_2
                          M     endif
                      00587 
                      00588 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00175                   ASM
                      00589 
                      00590         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00591 
                      00592                   ifdef CCP2CON  
                      00593                     MOVE?BB  _HP_Temp, CCPR2L
0006E6 C034 FF67          M         movff   _HP_Temp, CCPR2L
                      00594                     MOVE?BB  _HP_Temp + 1, CCP2CON
0006EA C035 FF66          M         movff   _HP_Temp + 1, CCP2CON
0006EE EF89 F003      00595                     goto _PutCH_Done
                      00596                   endif  
                      00597                 
                      00598 
                      00599         ENDASM?
                      00600 
                      00601 
                      00602 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00182           PutCH_3:  
                      00603 
                      00604         LABEL?L _PutCH_3        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_3
                          M         XALL
                          M     else
0006F2                    M _PutCH_3
                          M     endif
                      00605 
                      00606 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00183                   ASM
                      00607 
                      00608         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00609 
                      00610                   ifdef CCP3CON  
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00611                     MOVE?BB  _HP_Temp, CCPR3L
0006F2 C034 FF5E          M         movff   _HP_Temp, CCPR3L
                      00612                     MOVE?BB  _HP_Temp + 1, CCP3CON
0006F6 C035 FF5D          M         movff   _HP_Temp + 1, CCP3CON
0006FA EF89 F003      00613                     goto _PutCH_Done
                      00614                   endif  
                      00615                 
                      00616 
                      00617         ENDASM?
                      00618 
                      00619 
                      00620 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00190           PutCH_4:  
                      00621 
                      00622         LABEL?L _PutCH_4        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_4
                          M         XALL
                          M     else
0006FE                    M _PutCH_4
                          M     endif
                      00623 
                      00624 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00191                   ASM
                      00625 
                      00626         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00627 
                      00628                   ifdef CCP4CON  
                      00629                     MOVE?BB  _HP_Temp, CCPR4L
0006FE C034 FF58          M         movff   _HP_Temp, CCPR4L
                      00630                     MOVE?BB  _HP_Temp + 1, CCP4CON
000702 C035 FF57          M         movff   _HP_Temp + 1, CCP4CON
000706 EF89 F003      00631                     goto _PutCH_Done
                      00632                   endif  
                      00633                 
                      00634 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00635         ENDASM?
                      00636 
                      00637 
                      00638 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00198           PutCH_5:
                      00639 
                      00640         LABEL?L _PutCH_5        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_5
                          M         XALL
                          M     else
00070A                    M _PutCH_5
                          M     endif
                      00641 
                      00642 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00199                   ASM
                      00643 
                      00644         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00645 
                      00646                   ifdef CCP5CON  
                      00647                     MOVE?BB  _HP_Temp, CCPR5L
00070A C034 FF55          M         movff   _HP_Temp, CCPR5L
                      00648                     MOVE?BB  _HP_Temp + 1, CCP5CON
00070E C035 FF54          M         movff   _HP_Temp + 1, CCP5CON
                      00649                   endif  
                      00650                 
                      00651 
                      00652         ENDASM?
                      00653 
                      00654 
                      00655 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00206       PutCH_Done:
                      00656 
                      00657         LABEL?L _PutCH_Done     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_Done
                          M         XALL
                          M     else
000712                    M _PutCH_Done
                          M     endif
                      00658 
                      00659 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00207       endif
                      00660         LABEL?L L00023  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00023
                          M         XALL
                          M     else
000712                    M L00023
                          M     endif
                      00661 
                      00662 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00211       if TMR2ON = 0 then TMR2ON = 1     ; 
                            Start Timer2 if not already running
                      00663         CMPNE?TCL       _TMR2ON, 000h, L00029
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000712 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, T2CON, 002h,  L00029
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00029))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  T2CON
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((1)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M             else
                          M         bov     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
000714 B4BA               M         btfsc   T2CON, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
000716 EF8E F003          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00029
                          M             else
                          M         bra     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
                          M         BIT?GOTO 0, T2CON, 002h,  L00029
                          M       else
                          M         L?GOTO  L00029
                          M       endif
                          M     endif
                      00664         MOVE?CT 001h, _TMR2ON
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00071A 84BA               M         bsf     T2CON,  002h
                          M     else
                          M         bcf     T2CON,  002h
                          M     endif
                      00665         LABEL?L L00029  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00029
                          M         XALL
                          M     else
00071C                    M L00029
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00666 
                      00667 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00213       if (PSchanged | PR2changed) = 1 then
                      00668         OR?TTN  _PSchanged, _PR2changed, T1
00071C 6AE8               M         clrf    WREG
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
00071E B43D               M         btfsc   _HP_Flags, 002h
000720 0F01               M         addlw   1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
000722 B63D               M         btfsc   _HP_Flags, 003h
000724 0901               M         iorlw   1
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000726 6E22               M         movwf   T1
000728 6A23               M         clrf    (T1)   + 1
00072A 6A24               M         clrf    (T1)   + 2
00072C 6A25               M         clrf    (T1)   + 3
                      00669         CMPNE?NCL       T1, 001h, L00031
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
00072E C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000732 C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000736 C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
00073A C025 F015          M         movff   (T1) + 3, (R0) + 3
                          M         MOVE?CB (001h) >> 24, R1 + 3
                          M         CHK?RP  R1 + 3
                          M     if (((R1 + 3) & 8000h) != PREV_ALT)
                          M       if ((R1 + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 3) & 8000h
                          M     endif
                          M     if ((((R1 + 3) & 0fffh) > BANKA_END) & (((R1 + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 3)
                          M PREV_BANK = high (R1 + 3)
                          M       endif
                          M     endif
                          M     if (low ((001h) >> 24) == 0)
00073E 6A19               M         clrf    R1 + 3
                          M     else
                          M       if (low ((001h) >> 24) == 255)
                          M         setf    R1 + 3
                          M       else
                          M         movlw   low ((001h) >> 24)
                          M         movwf   R1 + 3
                          M       endif
                          M     endif
                          M         MOVE?CB upper (001h), R1 + 2
                          M         CHK?RP  R1 + 2
                          M     if (((R1 + 2) & 8000h) != PREV_ALT)
                          M       if ((R1 + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 2) & 8000h
                          M     endif
                          M     if ((((R1 + 2) & 0fffh) > BANKA_END) & (((R1 + 2) & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((R1 + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 2)
                          M PREV_BANK = high (R1 + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (001h)) == 0)
000740 6A18               M         clrf    R1 + 2
                          M     else
                          M       if (low (upper (001h)) == 255)
                          M         setf    R1 + 2
                          M       else
                          M         movlw   low (upper (001h))
                          M         movwf   R1 + 2
                          M       endif
                          M     endif
                          M         MOVE?CB high (001h), R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low (high (001h)) == 0)
000742 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low (high (001h)) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low (high (001h))
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (001h)
000744 0E01               M         movlw   low (low (001h))
                          M         L?CALL  CMPNE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPNE
                          M     else
                          M       if ((CMPNE) < 1)
                          M         call    CMPNE
                          M       else
                          M         if ((CMPNE) > $)
                          M         call    CMPNE
                          M         else
                          M           if ((CMPNE) < ($ - 3ffh))
000746 EC06 F001          M         call    CMPNE
                          M           else
                          M         rcall   CMPNE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00031
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00031))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M             else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bov     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00074A A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
00074C EFC2 F003          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 3ffh))
                          M         goto    L00031
                          M             else
                          M         bra     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00670 
                      00671 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00214           TMR2IF = 0
                      00672         MOVE?CT 000h, _TMR2IF
                          M         CHK?RP  PIR1
                          M     if (((PIR1)  & 8000h) != PREV_ALT)
                          M       if ((PIR1)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PIR1)  & 8000h
                          M     endif
                          M     if ((((PIR1)  & 0fffh) > BANKA_END) & (((PIR1)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PIR1)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PIR1)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (PIR1)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PIR1,   001h
                          M     else
000750 929E               M         bcf     PIR1,   001h
                          M     endif
                      00673 
                      00674 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00215           while !TMR2IF : wend          ; 
                            let current cycle complete
                      00675         LABEL?L L00033  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00033
                          M         XALL
                          M     else
000752                    M L00033
                          M     endif
                      00676         CMPT?TL _TMR2IF, L00034
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000752 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PIR1,  001h,  L00034
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00034))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PIR1)  > BANKA_END) & ((PIR1)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PIR1
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
                          M         btfsc   PIR1,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M       else
                          M         if ((L00034) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M         else
                          M           if ((L00034) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M           else
                          M             if ((L00034) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M             else
                          M         bov     L00034
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
000754 B29E               M         btfsc   PIR1,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00034
                          M       else
                          M         if ((L00034) < 1)
                          M         goto    L00034
                          M         else
                          M           if ((L00034) > $)
000756 EFAE F003          M         goto    L00034
                          M           else
                          M             if ((L00034) < ($ - 3ffh))
                          M         goto    L00034
                          M             else
                          M         bra     L00034
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00677 
                      00678 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00215           while !TMR2IF : wend          ; 
                            let current cycle complete
                      00679         GOTO?L  L00033
                          M         L?GOTO  L00033
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00033))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00033
                          M     else
                          M       if ((L00033) < 1)
                          M         goto    L00033
                          M       else
                          M         if ((L00033) > $)
                          M         goto    L00033
                          M         else
                          M           if ((L00033) < ($ - 3ffh))
                          M         goto    L00033
                          M           else
00075A D7FB               M         bra     L00033
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00680         LABEL?L L00034  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00034
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
00075C                    M L00034
                          M     endif
                      00681 
                      00682 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00217           if PSchanged then             ; 
                            set T2 prescaler
                      00683         CMPF?TL _PSchanged, L00035
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
00075C 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 002h, L00035
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00035))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 002h
                          M       else
                          M         btfsc   _HP_Flags, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M             else
                          M         bov     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00075E A43D               M         btfss   _HP_Flags, 002h
                          M       else
                          M         btfsc   _HP_Flags, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
000760 EFBB F003          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 3ffh))
                          M         goto    L00035
                          M             else
                          M         bra     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00684 
                      00685 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00218               PSchanged = 0
                      00686         MOVE?CT 000h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 002h
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000764 943D               M         bcf     _HP_Flags, 002h
                          M     endif
                      00687 
                      00688 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00219               T2CKPS0 = PS0
                      00689         MOVE?TT _PS0, _T2CKPS0
                          M     if (((_HP_Flags) <= BANKA_END) | ((_HP_Flags) >= (0f01h + BANKA_END)))
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
000766 B03D               M         btfsc   _HP_Flags, 000h
000768 80BA               M         bsf     T2CON,  000h
00076A A03D               M         btfss   _HP_Flags, 000h
00076C 90BA               M         bcf     T2CON,  000h
                          M     else
                          M       if (((_HP_Flags) & 0f00h) == ((T2CON) & 0f00h))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 000h
                          M         bsf     T2CON,  000h
                          M         btfss   _HP_Flags, 000h
                          M         bcf     T2CON,  000h
                          M       else
                          M           if (((T2CON)  <= BANKA_END) | ((T2CON)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 000h
                          M         bsf     T2CON,  000h
                          M         btfss   _HP_Flags, 000h
                          M         bcf     T2CON,  000h
                          M           else
                          M         MOVE?TA _HP_Flags, 000h
                          M         MOVE?AT T2CON,  000h
                          M           endif
                          M       endif
                          M     endif
                      00690 
                      00691 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00220               T2CKPS1 = PS1
                      00692         MOVE?TT _PS1, _T2CKPS1
                          M     if (((_HP_Flags) <= BANKA_END) | ((_HP_Flags) >= (0f01h + BANKA_END)))
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
00076E B23D               M         btfsc   _HP_Flags, 001h
000770 82BA               M         bsf     T2CON,  001h
000772 A23D               M         btfss   _HP_Flags, 001h
000774 92BA               M         bcf     T2CON,  001h
                          M     else
                          M       if (((_HP_Flags) & 0f00h) == ((T2CON) & 0f00h))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 001h
                          M         bsf     T2CON,  001h
                          M         btfss   _HP_Flags, 001h
                          M         bcf     T2CON,  001h
                          M       else
                          M           if (((T2CON)  <= BANKA_END) | ((T2CON)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 001h
                          M         bsf     T2CON,  001h
                          M         btfss   _HP_Flags, 001h
                          M         bcf     T2CON,  001h
                          M           else
                          M         MOVE?TA _HP_Flags, 001h
                          M         MOVE?AT T2CON,  001h
                          M           endif
                          M       endif
                          M     endif
                      00693 
                      00694 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00221           endif
                      00695         LABEL?L L00035  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00035
                          M         XALL
                          M     else
000776                    M L00035
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00696 
                      00697 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00223           if PR2changed then            ; 
                            set PR2
                      00698         CMPF?TL _PR2changed, L00037
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
000776 0004               M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 003h, L00037
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00037))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 003h
                          M       else
                          M         btfsc   _HP_Flags, 003h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M             else
                          M         bov     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000778 A63D               M         btfss   _HP_Flags, 003h
                          M       else
                          M         btfsc   _HP_Flags, 003h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
00077A EFC2 F003          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 3ffh))
                          M         goto    L00037
                          M             else
                          M         bra     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00699 
                      00700 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00224               PR2changed = 0
                      00701         MOVE?CT 000h, _PR2changed
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 003h
                          M     else
00077E 963D               M         bcf     _HP_Flags, 003h
                          M     endif
                      00702 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00703 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00225               PR2 = HP_PR2
                      00704         MOVE?BB _HP_PR2, PR2
000780 C03E FFBB          M         movff   _HP_PR2, PR2
                      00705 
                      00706 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00226           endif
                      00707         LABEL?L L00037  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00037
                          M         XALL
                          M     else
000784                    M L00037
                          M     endif
                      00708 
                      00709 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00227       endif
                      00710         LABEL?L L00031  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00031
                          M         XALL
                          M     else
000784                    M L00031
                          M     endif
                      00711 
                      00712 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00228   return
                      00713         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000784 0012               M         return
                      00714 
                      00715 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\HPWM10_L.PBP        00231   OverHPWM10:
                      00716 
                      00717         LABEL?L _OverHPWM10     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _OverHPWM10
                          M         XALL
                          M     else
000786                    M _OverHPWM10
                          M     endif
                      00718 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00022   DEFINE LCD_DREG PORTA 
                      00719 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00023   DEFINE LCD_DBIT 0
                      00720 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00024   DEFINE LCD_RSREG PORTA
                      00721 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00025   DEFINE LCD_RSBIT 5 
                      00722 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00026   DEFINE LCD_EREG PORTA
                      00723 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00027   DEFINE LCD_EBIT 4 
                      00724 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00028   DEFINE LCD_BITS 4 
                      00725 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00029   DEFINE LCD_LINE 2
                      00726 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00031   DEFINE I2C_SCLOUT 1
                      00727 
                      00728 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00033   OSCCON  = %1111000
                      00729         MOVE?CB 078h, OSCCON
                          M         CHK?RP  OSCCON
                          M     if (((OSCCON) & 8000h) != PREV_ALT)
                          M       if ((OSCCON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON) & 8000h
                          M     endif
                          M     if ((((OSCCON) & 0fffh) > BANKA_END) & (((OSCCON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (078h) == 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    OSCCON
                          M     else
                          M       if (low (078h) == 255)
                          M         setf    OSCCON
                          M       else
000786 0E78               M         movlw   low (078h)
000788 6ED3               M         movwf   OSCCON
                          M       endif
                          M     endif
                      00730 
                      00731 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00034   OSCCON2 = %0000000
                      00732         MOVE?CB 000h, OSCCON2
                          M         CHK?RP  OSCCON2
                          M     if (((OSCCON2) & 8000h) != PREV_ALT)
                          M       if ((OSCCON2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON2) & 8000h
                          M     endif
                          M     if ((((OSCCON2) & 0fffh) > BANKA_END) & (((OSCCON2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON2)
                          M PREV_BANK = high (OSCCON2)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00078A 6AD2               M         clrf    OSCCON2
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    OSCCON2
                          M       else
                          M         movlw   low (000h)
                          M         movwf   OSCCON2
                          M       endif
                          M     endif
                      00733 
                      00734 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00035   OSCTUNE = %10000000
                      00735         MOVE?CB 080h, OSCTUNE
                          M         CHK?RP  OSCTUNE
                          M     if (((OSCTUNE) & 8000h) != PREV_ALT)
                          M       if ((OSCTUNE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCTUNE) & 8000h
                          M     endif
                          M     if ((((OSCTUNE) & 0fffh) > BANKA_END) & (((OSCTUNE) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCTUNE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCTUNE)
                          M PREV_BANK = high (OSCTUNE)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (low (080h) == 0)
                          M         clrf    OSCTUNE
                          M     else
                          M       if (low (080h) == 255)
                          M         setf    OSCTUNE
                          M       else
00078C 0E80               M         movlw   low (080h)
00078E 6E9B               M         movwf   OSCTUNE
                          M       endif
                          M     endif
                      00736 
                      00737 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00036   T1CON = %00000111
                      00738         MOVE?CB 007h, T1CON
                          M         CHK?RP  T1CON
                          M     if (((T1CON) & 8000h) != PREV_ALT)
                          M       if ((T1CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1CON) & 8000h
                          M     endif
                          M     if ((((T1CON) & 0fffh) > BANKA_END) & (((T1CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1CON)
                          M PREV_BANK = high (T1CON)
                          M       endif
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    T1CON
                          M     else
                          M       if (low (007h) == 255)
                          M         setf    T1CON
                          M       else
000790 0E07               M         movlw   low (007h)
000792 6ECD               M         movwf   T1CON
                          M       endif
                          M     endif
                      00739 
                      00740 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00037   ANSELA = 0
                      00741         MOVE?CB 000h, ANSELA
                          M         CHK?RP  ANSELA
                          M     if (((ANSELA) & 8000h) != PREV_ALT)
                          M       if ((ANSELA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELA) & 8000h
                          M     endif
                          M     if ((((ANSELA) & 0fffh) > BANKA_END) & (((ANSELA) & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((ANSELA) & 0f00h) != (PREV_BANK << 8))
000794 010F               M         movlb   high (ANSELA)
  0000000F                M PREV_BANK = high (ANSELA)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000796 6B38               M         clrf    ANSELA
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ANSELA
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ANSELA
                          M       endif
                          M     endif
                      00742 
                      00743 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00038   ANSELB = 0
                      00744         MOVE?CB 000h, ANSELB
                          M         CHK?RP  ANSELB
                          M     if (((ANSELB) & 8000h) != PREV_ALT)
                          M       if ((ANSELB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELB) & 8000h
                          M     endif
                          M     if ((((ANSELB) & 0fffh) > BANKA_END) & (((ANSELB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELB)
                          M PREV_BANK = high (ANSELB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000798 6B39               M         clrf    ANSELB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ANSELB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ANSELB
                          M       endif
                          M     endif
                      00745 
                      00746 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00039   ANSELC = %000010
                      00747         MOVE?CB 002h, ANSELC
                          M         CHK?RP  ANSELC
                          M     if (((ANSELC) & 8000h) != PREV_ALT)
                          M       if ((ANSELC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (ANSELC) & 8000h
                          M     endif
                          M     if ((((ANSELC) & 0fffh) > BANKA_END) & (((ANSELC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELC)
                          M PREV_BANK = high (ANSELC)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    ANSELC
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    ANSELC
                          M       else
00079A 0E02               M         movlw   low (002h)
00079C 6F3A               M         movwf   ANSELC
                          M       endif
                          M     endif
                      00748 
                      00749 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00040   TRISC = %00001000
                      00750         MOVE?CB 008h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) & 8000h) != PREV_ALT)
                          M       if ((TRISC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISC) & 8000h
                          M     endif
                          M     if ((((TRISC) & 0fffh) > BANKA_END) & (((TRISC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (008h) == 0)
                          M         clrf    TRISC
                          M     else
                          M       if (low (008h) == 255)
                          M         setf    TRISC
                          M       else
00079E 0E08               M         movlw   low (008h)
0007A0 6E94               M         movwf   TRISC
                          M       endif
                          M     endif
                      00751 
                      00752 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00041   TRISA = 0
                      00753         MOVE?CB 000h, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) & 8000h) != PREV_ALT)
                          M       if ((TRISA) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISA) & 8000h
                          M     endif
                          M     if ((((TRISA) & 0fffh) > BANKA_END) & (((TRISA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0007A2 6A92               M         clrf    TRISA
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISA
                          M       else
                          M         movlw   low (000h)
                          M         movwf   TRISA
                          M       endif
                          M     endif
                      00754 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00047   RTC             con %10100010
                      00755 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00048   EPROM           CON %10100000
                      00756 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00049   LM75            CON %10010000
                      00757 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00052   symbol BCKLIGHT        = PORTE.3
                      00758 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00053   symbol SDA             = PORTC.0
                      00759 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00054   symbol SCL             = PORTC.1
                      00760 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00055   symbol TASTATURA       = PORTC.3
                      00761 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00056   symbol RELEJ1          = PORTC.4
                      00762 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00057   symbol RELEJ2          = PORTC.5
                      00763 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00058   symbol TX              = PORTC.6
                      00764 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00059   symbol RX              = PORTC.7
                      00765 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00060   symbol BUZZER          = PORTB.1
                      00766 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00061   symbol COPER           = PORTB.2
                      00767 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00062   symbol SCLK            = PORTB.4
                      00768 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00063   symbol DIN             = PORTB.6
                      00769 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00064   symbol CS              = PORTB.7
                      00770 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00065   symbol tast1 = PORTA.6
                      00771 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00066   SYMBOL tast2 = PORTA.7
                      00772 
                      00773 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00068   input tast1
                      00774         INPUT?T _tast1
                          M         MOVE?CT 1, ((PORTA) + 12h), 006h
                          M         CHK?RP  ((PORTA) + 12h)
                          M     if (((((PORTA) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTA) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTA) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTA) + 12h)) & 0fffh) > BANKA_END) & (((((PORTA) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((((PORTA) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTA) + 12h))
                          M PREV_BANK = high (((PORTA) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
0007A4 8C92               M         bsf     ((PORTA) + 12h), 006h
                          M     else
                          M         bcf     ((PORTA) + 12h), 006h
                          M     endif
                      00775 
                      00776 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00069   input tast2
                      00777         INPUT?T _tast2
                          M         MOVE?CT 1, ((PORTA) + 12h), 007h
                          M         CHK?RP  ((PORTA) + 12h)
                          M     if (((((PORTA) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTA) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTA) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTA) + 12h)) & 0fffh) > BANKA_END) & (((((PORTA) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTA) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTA) + 12h))
                          M PREV_BANK = high (((PORTA) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
0007A6 8E92               M         bsf     ((PORTA) + 12h), 007h
                          M     else
                          M         bcf     ((PORTA) + 12h), 007h
                          M     endif
                      00778 
                      00779 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00071   OUTPUT          BCKLIGHT
                      00780         OUTPUT?T        _BCKLIGHT
                          M         MOVE?CT 0, ((PORTE) + 12h), 003h
                          M         CHK?RP  ((PORTE) + 12h)
                          M     if (((((PORTE) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTE) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTE) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTE) + 12h)) & 0fffh) > BANKA_END) & (((((PORTE) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTE) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTE) + 12h))
                          M PREV_BANK = high (((PORTE) + 12h))
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTE) + 12h), 003h
                          M     else
0007A8 9696               M         bcf     ((PORTE) + 12h), 003h
                          M     endif
                      00781 
                      00782 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00072   INPUT           TASTATURA
                      00783         INPUT?T _TASTATURA
                          M         MOVE?CT 1, ((PORTC) + 12h), 003h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
0007AA 8694               M         bsf     ((PORTC) + 12h), 003h
                          M     else
                          M         bcf     ((PORTC) + 12h), 003h
                          M     endif
                      00784 
                      00785 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00073   OUTPUT          RELEJ1
                      00786         OUTPUT?T        _RELEJ1
                          M         MOVE?CT 0, ((PORTC) + 12h), 004h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 004h
                          M     else
0007AC 9894               M         bcf     ((PORTC) + 12h), 004h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00787 
                      00788 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00074   OUTPUT          RELEJ2
                      00789         OUTPUT?T        _RELEJ2
                          M         MOVE?CT 0, ((PORTC) + 12h), 005h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 005h
                          M     else
0007AE 9A94               M         bcf     ((PORTC) + 12h), 005h
                          M     endif
                      00790 
                      00791 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00075   OUTPUT          BUZZER
                      00792         OUTPUT?T        _BUZZER
                          M         MOVE?CT 0, ((PORTB) + 12h), 001h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 001h
                          M     else
0007B0 9293               M         bcf     ((PORTB) + 12h), 001h
                          M     endif
                      00793 
                      00794 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00076   OUTPUT          COPER
                      00795         OUTPUT?T        _COPER
                          M         MOVE?CT 0, ((PORTB) + 12h), 002h
                          M         CHK?RP  ((PORTB) + 12h)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 002h
                          M     else
0007B2 9493               M         bcf     ((PORTB) + 12h), 002h
                          M     endif
                      00796 
                      00797 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00077   output          cs
                      00798         OUTPUT?T        _CS
                          M         MOVE?CT 0, ((PORTB) + 12h), 007h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 007h
                          M     else
0007B4 9E93               M         bcf     ((PORTB) + 12h), 007h
                          M     endif
                      00799 
                      00800 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00078   output          din 
                      00801         OUTPUT?T        _DIN
                          M         MOVE?CT 0, ((PORTB) + 12h), 006h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 006h
                          M     else
0007B6 9C93               M         bcf     ((PORTB) + 12h), 006h
                          M     endif
                      00802 
                      00803 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00079   output          sclk 
                      00804         OUTPUT?T        _SCLK
                          M         MOVE?CT 0, ((PORTB) + 12h), 004h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 004h
                          M     else
0007B8 9893               M         bcf     ((PORTB) + 12h), 004h
                          M     endif
                      00805 
                      00806 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00080   output tx 
                      00807         OUTPUT?T        _TX
                          M         MOVE?CT 0, ((PORTC) + 12h), 006h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 006h
                          M     else
0007BA 9C94               M         bcf     ((PORTC) + 12h), 006h
                          M     endif
                      00808 
                      00809 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00081   output rx
                      00810         OUTPUT?T        _RX
                          M         MOVE?CT 0, ((PORTC) + 12h), 007h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 007h
                          M     else
0007BC 9E94               M         bcf     ((PORTC) + 12h), 007h
                          M     endif
                      00811 
                      00812 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00082     trisb=0
                      00813         MOVE?CB 000h, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) & 8000h) != PREV_ALT)
                          M       if ((TRISB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISB) & 8000h
                          M     endif
                          M     if ((((TRISB) & 0fffh) > BANKA_END) & (((TRISB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISB)
                          M PREV_BANK = high (TRISB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0007BE 6A93               M         clrf    TRISB
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   TRISB
                          M       endif
                          M     endif
                      00814 
                      00815 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00097   Frequency = 30000
                      00816         MOVE?CW 000007530h, _Frequency
                          M     ifdef USE_LINKER
                          M         CHK?RP  _Frequency
                          M         movlw   low (000007530h)
                          M         movwf   _Frequency
                          M         movlw   high (000007530h)
                          M         movwf   (_Frequency) + 1
                          M     else
                          M         MOVE?CB low (000007530h), _Frequency
                          M         CHK?RP  _Frequency
                          M     if (((_Frequency) & 8000h) != PREV_ALT)
                          M       if ((_Frequency) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Frequency) & 8000h
                          M     endif
                          M     if ((((_Frequency) & 0fffh) > BANKA_END) & (((_Frequency) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Frequency)
                          M PREV_BANK = high (_Frequency)
                          M       endif
                          M     endif
                          M     if (low (low (000007530h)) == 0)
                          M         clrf    _Frequency
                          M     else
                          M       if (low (low (000007530h)) == 255)
                          M         setf    _Frequency
                          M       else
0007C0 0E30               M         movlw   low (low (000007530h))
0007C2 6E2E               M         movwf   _Frequency
                          M       endif
                          M     endif
                          M         MOVE?CB high (000007530h), (_Frequency) + 1
                          M         CHK?RP  (_Frequency) + 1
                          M     if ((((_Frequency) + 1) & 8000h) != PREV_ALT)
                          M       if (((_Frequency) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_Frequency) + 1) & 8000h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((((_Frequency) + 1) & 0fffh) > BANKA_END) & ((((_Frequency) + 1) & 0fffh) < (0f01h + BANKA_END)
                            ))
                          M       if ((((_Frequency) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_Frequency) + 1)
                          M PREV_BANK = high ((_Frequency) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000007530h)) == 0)
                          M         clrf    (_Frequency) + 1
                          M     else
                          M       if (low (high (000007530h)) == 255)
                          M         setf    (_Frequency) + 1
                          M       else
0007C4 0E75               M         movlw   low (high (000007530h))
0007C6 6E2F               M         movwf   (_Frequency) + 1
                          M       endif
                          M     endif
                          M     endif
                      00817 
                      00818 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00101    poti = 0
                      00819         MOVE?CB 000h, _poti
                          M         CHK?RP  _poti
                          M     if (((_poti) & 8000h) != PREV_ALT)
                          M       if ((_poti) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_poti) & 8000h
                          M     endif
                          M     if ((((_poti) & 0fffh) > BANKA_END) & (((_poti) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_poti) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_poti)
                          M PREV_BANK = high (_poti)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0007C8 6A42               M         clrf    _poti
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _poti
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _poti
                          M       endif
                          M     endif
                      00820 
                      00821 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00102   gosub UpisiVreme 
                      00822         GOSUB?L _UpisiVreme
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _UpisiVreme
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
0007CA 0100               M         movlb   0
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _UpisiVreme
                          M     else
                          M       if ((_UpisiVreme) < 1)
                          M         call    _UpisiVreme
                          M       else
                          M         if ((_UpisiVreme) > $)
0007CC EC3E F004          M         call    _UpisiVreme
                          M         else
                          M           if ((_UpisiVreme) < ($ - 3ffh))
                          M         call    _UpisiVreme
                          M           else
                          M         rcall   _UpisiVreme
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0007D0                    M dlabel
                      00823 
                      00824 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00103   i2cwrite sda,scl,lm75,01,[0,0,0]
                      00825         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
0007D0 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
0007D2 6E0E               M         movwf   RR1
0007D4 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
0007D6 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
0007D8 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0007DA 6E0C               M         movwf   RM1
                      00826         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
0007DC 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
0007DE 6E0F               M         movwf   RR2
0007E0 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
0007E2 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
0007E4 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0007E6 6E0D               M         movwf   RM2
                      00827         I2CWRITE?C      _LM75
                          M     if ((high (_LM75)) != 0)
                          M         movlw   (_LM75) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_LM75)
0007E8 0E90               M         movlw   low (low (_LM75))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0007EA EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00828         I2CWRITE?C      001h
                          M     if ((high (001h)) != 0)
                          M         movlw   (001h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (001h)
0007EE 0E01               M         movlw   low (low (001h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0007F0 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00829         I2CWRITE?C      000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         MOVE?CA low (000h)
0007F4 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0007F6 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00830         I2CWRITE?C      000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
0007FA 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0007FC EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00831         I2CWRITES?C     000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
000800 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITES
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITES
                          M     else
                          M       if ((I2CWRITES) < 1)
                          M         call    I2CWRITES
                          M       else
                          M         if ((I2CWRITES) > $)
                          M         call    I2CWRITES
                          M         else
                          M           if ((I2CWRITES) < ($ - 3ffh))
000802 EC1C F000          M         call    I2CWRITES
                          M           else
                          M         rcall   I2CWRITES
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00832 
                      00833 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00104       DutyCycleL=512
                      00834         MOVE?CW 000000200h, _DutyCycleL
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL) + 1
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL
                          M         CHK?RP  _DutyCycleL
                          M     if (((_DutyCycleL) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL) & 0fffh) > BANKA_END) & (((_DutyCycleL) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL)
                          M PREV_BANK = high (_DutyCycleL)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
000806 6A2C               M         clrf    _DutyCycleL
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL) + 1
                          M         CHK?RP  (_DutyCycleL) + 1
                          M     if ((((_DutyCycleL) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL) + 1) & 0fffh) < (0f01h + BANKA_EN
                            D)))
                          M       if ((((_DutyCycleL) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL) + 1)
                          M PREV_BANK = high ((_DutyCycleL) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL) + 1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
000808 0E02               M         movlw   low (high (000000200h))
00080A 6E2D               M         movwf   (_DutyCycleL) + 1
                          M       endif
                          M     endif
                          M     endif
                      00835 
                      00836 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00106       @ HPWM10 4, _DutyCycleL, _Frequency
                      00837 
                      00838         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00839  HPWM10 4, _DutyCycleL, _Frequency
                          M     if 4       < 6 
                          M       MOVE?CB 4,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (4)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (4)   == 255)
                          M         setf    _HP_Channel
                          M       else
00080C 0E04               M         movlw   low (4)
00080E 6E3C               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 4,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL, _HP_Duty
                          M         MOVE?BB _DutyCycleL, _HP_Duty
000810 C02C F030          M         movff   _DutyCycleL, _HP_Duty
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (_DutyCycleL) + 1, (_HP_Duty) + 1
000814 C02D F031          M         movff   (_DutyCycleL) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000818 C02E F032          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
00081C C02F F033          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000820 EC04 F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00840 
                      00841         ENDASM?
                      00842 
                      00843 
                      00844 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00107       @ HPWM10 3, _DutyCycleL, _Frequency
                      00845 
                      00846         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00847  HPWM10 3, _DutyCycleL, _Frequency
                          M     if 3       < 6 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       MOVE?CB 3,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (3)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (3)   == 255)
                          M         setf    _HP_Channel
                          M       else
000824 0E03               M         movlw   low (3)
000826 6E3C               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 3,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL, _HP_Duty
                          M         MOVE?BB _DutyCycleL, _HP_Duty
000828 C02C F030          M         movff   _DutyCycleL, _HP_Duty
                          M         MOVE?BB (_DutyCycleL) + 1, (_HP_Duty) + 1
00082C C02D F031          M         movff   (_DutyCycleL) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000830 C02E F032          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000834 C02F F033          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000838 EC04 F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00848 
                      00849         ENDASM?
                      00850 
                      00851 
                      00852 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00108       @ HPWM10 2, _DutyCycleL, _Frequency
                      00853 
                      00854         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00855  HPWM10 2, _DutyCycleL, _Frequency
                          M     if 2       < 6 
                          M       MOVE?CB 2,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (2)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (2)   == 255)
                          M         setf    _HP_Channel
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
00083C 0E02               M         movlw   low (2)
00083E 6E3C               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 2,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL, _HP_Duty
                          M         MOVE?BB _DutyCycleL, _HP_Duty
000840 C02C F030          M         movff   _DutyCycleL, _HP_Duty
                          M         MOVE?BB (_DutyCycleL) + 1, (_HP_Duty) + 1
000844 C02D F031          M         movff   (_DutyCycleL) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000848 C02E F032          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
00084C C02F F033          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000850 EC04 F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00856 
                      00857         ENDASM?
                      00858 
                      00859 
                      00860 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00109       @ HPWM10 1, _DutyCycleL, _Frequency
                      00861 
                      00862         ASM?
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00863  HPWM10 1, _DutyCycleL, _Frequency
                          M     if 1       < 6 
                          M       MOVE?CB 1,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (1)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (1)   == 255)
                          M         setf    _HP_Channel
                          M       else
000854 0E01               M         movlw   low (1)
000856 6E3C               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 1,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL, _HP_Duty
                          M         MOVE?BB _DutyCycleL, _HP_Duty
000858 C02C F030          M         movff   _DutyCycleL, _HP_Duty
                          M         MOVE?BB (_DutyCycleL) + 1, (_HP_Duty) + 1
00085C C02D F031          M         movff   (_DutyCycleL) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000860 C02E F032          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000864 C02F F033          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000868 EC04 F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00864 
                      00865         ENDASM?
                      00866 
                      00867 
                      00868 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00110   Main:
                      00869 
                      00870         LABEL?L _Main   
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _Main
                          M         XALL
                          M     else
00086C                    M _Main
                          M     endif
                      00871 
                      00872 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00133    DutyCycleL = 512   
                      00873         MOVE?CW 000000200h, _DutyCycleL
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL) + 1
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL
                          M         CHK?RP  _DutyCycleL
                          M     if (((_DutyCycleL) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL) & 0fffh) > BANKA_END) & (((_DutyCycleL) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL)
                          M PREV_BANK = high (_DutyCycleL)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
00086C 6A2C               M         clrf    _DutyCycleL
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL) + 1
                          M         CHK?RP  (_DutyCycleL) + 1
                          M     if ((((_DutyCycleL) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL) + 1) & 0fffh) < (0f01h + BANKA_EN
                            D)))
                          M       if ((((_DutyCycleL) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL) + 1)
                          M PREV_BANK = high ((_DutyCycleL) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL) + 1
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
00086E 0E02               M         movlw   low (high (000000200h))
000870 6E2D               M         movwf   (_DutyCycleL) + 1
                          M       endif
                          M     endif
                          M     endif
                      00874 
                      00875 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00136    Potenciometar.lowbyte = 142
                      00876         MOVE?CB 08Eh, _Potenciometar??LOWBYTE
                          M         CHK?RP  _Potenciometar??LOWBYTE
                          M     if (((_Potenciometar??LOWBYTE) & 8000h) != PREV_ALT)
                          M       if ((_Potenciometar??LOWBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Potenciometar??LOWBYTE) & 8000h
                          M     endif
                          M     if ((((_Potenciometar??LOWBYTE) & 0fffh) > BANKA_END) & (((_Potenciometar??LOWBYTE) & 0fffh) < (0f01
                            h + BANKA_END)))
                          M       if (((_Potenciometar??LOWBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Potenciometar??LOWBYTE)
                          M PREV_BANK = high (_Potenciometar??LOWBYTE)
                          M       endif
                          M     endif
                          M     if (low (08Eh) == 0)
                          M         clrf    _Potenciometar??LOWBYTE
                          M     else
                          M       if (low (08Eh) == 255)
                          M         setf    _Potenciometar??LOWBYTE
                          M       else
000872 0E8E               M         movlw   low (08Eh)
000874 6E38               M         movwf   _Potenciometar??LOWBYTE
                          M       endif
                          M     endif
                      00877 
                      00878 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00137       gosub PostaviPotenciometar
                      00879         GOSUB?L _PostaviPotenciometar
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         L?CALL  _PostaviPotenciometar
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _PostaviPotenciometar
                          M     else
                          M       if ((_PostaviPotenciometar) < 1)
                          M         call    _PostaviPotenciometar
                          M       else
                          M         if ((_PostaviPotenciometar) > $)
000876 ECB9 F004          M         call    _PostaviPotenciometar
                          M         else
                          M           if ((_PostaviPotenciometar) < ($ - 3ffh))
                          M         call    _PostaviPotenciometar
                          M           else
                          M         rcall   _PostaviPotenciometar
                          M           endif
                          M         endif
                          M       endif
                          M     endif
00087A                    M dlabel
                      00880 
                      00881 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00138   Goto Main
                      00882         GOTO?L  _Main
                          M         L?GOTO  _Main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_Main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    _Main
                          M     else
                          M       if ((_Main) < 1)
                          M         goto    _Main
                          M       else
                          M         if ((_Main) > $)
                          M         goto    _Main
                          M         else
                          M           if ((_Main) < ($ - 3ffh))
                          M         goto    _Main
                          M           else
00087A D7F8               M         bra     _Main
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00883 
                      00884 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00140   UpisiVreme:
                      00885 
                      00886         LABEL?L _UpisiVreme     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _UpisiVreme
                          M         XALL
                          M     else
00087C                    M _UpisiVreme
                          M     endif
                      00887 
                      00888 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00141       Seconds        = $00
                      00889         MOVE?CB 000h, _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (low (000h) == 0)
00087C 6A43               M         clrf    _Seconds
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Seconds
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Seconds
                          M       endif
                          M     endif
                      00890 
                      00891 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00142       Minutes        = $00
                      00892         MOVE?CB 000h, _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00087E 6A40               M         clrf    _Minutes
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Minutes
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Minutes
                          M       endif
                          M     endif
                      00893 
                      00894 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00143       Hours          = $00
                      00895         MOVE?CB 000h, _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000880 6A3B               M         clrf    _Hours
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Hours
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Hours
                          M       endif
                          M     endif
                      00896 
                      00897 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00144       Days           = $01
                      00898         MOVE?CB 001h, _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Days
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Days
                          M       else
000882 0E01               M         movlw   low (001h)
000884 6E3A               M         movwf   _Days
                          M       endif
                          M     endif
                      00899 
                      00900 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00145       Years          = $01
                      00901         MOVE?CB 001h, _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Years
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Years
                          M       else
000886 0E01               M         movlw   low (001h)
000888 6E47               M         movwf   _Years
                          M       endif
                          M     endif
                      00902 
                      00903 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00146       Month          = $01
                      00904         MOVE?CB 001h, _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Month
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Month
                          M       else
00088A 0E01               M         movlw   low (001h)
00088C 6E41               M         movwf   _Month
                          M       endif
                          M     endif
                      00905 
                      00906 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00147       I2cwrite sda,scl,rtc,$02,[seconds,mi
                            nutes,hours,days,$02,month,years]
                      00907         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
00088E 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000890 6E0E               M         movwf   RR1
000892 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000894 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000896 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000898 6E0C               M         movwf   RM1
                      00908         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
00089A 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
00089C 6E0F               M         movwf   RR2
00089E 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
0008A0 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
0008A2 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0008A4 6E0D               M         movwf   RM2
                      00909         I2CWRITE?C      _RTC
                          M     if ((high (_RTC)) != 0)
                          M         movlw   (_RTC) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_RTC)
0008A6 0EA2               M         movlw   low (low (_RTC))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008A8 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00910         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
0008AC 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008AE EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00911         I2CWRITE?B      _Seconds
                          M         MOVE?BA _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
0008B2 5043               M         movf    _Seconds, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008B4 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00912         I2CWRITE?B      _Minutes
                          M         MOVE?BA _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
0008B8 5040               M         movf    _Minutes, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008BA EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00913         I2CWRITE?B      _Hours
                          M         MOVE?BA _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
0008BE 503B               M         movf    _Hours, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008C0 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00914         I2CWRITE?B      _Days
                          M         MOVE?BA _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
0008C4 503A               M         movf    _Days, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008C6 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00915         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
0008CA 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008CC EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00916         I2CWRITE?B      _Month
                          M         MOVE?BA _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
0008D0 5041               M         movf    _Month, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008D2 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00917         I2CWRITES?B     _Years
                          M         MOVE?BA _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
0008D6 5047               M         movf    _Years, W
                          M         L?CALL  I2CWRITES
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITES
                          M     else
                          M       if ((I2CWRITES) < 1)
                          M         call    I2CWRITES
                          M       else
                          M         if ((I2CWRITES) > $)
                          M         call    I2CWRITES
                          M         else
                          M           if ((I2CWRITES) < ($ - 3ffh))
0008D8 EC1C F000          M         call    I2CWRITES
                          M           else
                          M         rcall   I2CWRITES
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00918 
                      00919 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00148       PAUSE 10 
                      00920         PAUSE?C 00Ah
                          M     if (((00Ah) >> 8) == 0)
                          M         MOVE?CA 00Ah
0008DC 0E0A               M         movlw   low (00Ah)
                          M         L?CALL  PAUSEB
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
0008DE ECB4 F000          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((00Ah) >> 16) == 0)
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (00Ah) >> 24, R1 + 3
                          M         MOVE?CB upper (00Ah), R1 + 2
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      00921 
                      00922 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00149   return 
                      00923         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
0008E2 0012               M         return
                      00924 
                      00925 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00151   UzmiVreme: 
                      00926 
                      00927         LABEL?L _UzmiVreme      
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _UzmiVreme
                          M         XALL
                          M     else
0008E4                    M _UzmiVreme
                          M     endif
                      00928 
                      00929 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00152       i2cread sda,scl,rtc,$02,[seconds,min
                            utes,hours,days,temp,month,years]
                      00930         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
0008E4 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
0008E6 6E0E               M         movwf   RR1
0008E8 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
0008EA 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
0008EC 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0008EE 6E0C               M         movwf   RM1
                      00931         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
0008F0 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
0008F2 6E0F               M         movwf   RR2
0008F4 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
0008F6 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
0008F8 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0008FA 6E0D               M         movwf   RM2
                      00932         I2CWRITE?C      _RTC
                          M     if ((high (_RTC)) != 0)
                          M         movlw   (_RTC) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_RTC)
0008FC 0EA2               M         movlw   low (low (_RTC))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008FE EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00933         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000902 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000904 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00934         I2CREAD?B       _Seconds
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((I2CREAD) < ($ - 3ffh))
000908 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
00090C 6E43               M         movwf   _Seconds
                      00935         I2CREAD?B       _Minutes
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
00090E EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         MOVE?AB _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000912 6E40               M         movwf   _Minutes
                      00936         I2CREAD?B       _Hours
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000914 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000918 6E3B               M         movwf   _Hours
                      00937         I2CREAD?B       _Days
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
00091A EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
00091E 6E3A               M         movwf   _Days
                      00938         I2CREAD?B       _Temp
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000920 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Temp
                          M         CHK?RP  _Temp
                          M     if (((_Temp) & 8000h) != PREV_ALT)
                          M       if ((_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Temp) & 8000h
                          M     endif
                          M     if ((((_Temp) & 0fffh) > BANKA_END) & (((_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Temp)
                          M PREV_BANK = high (_Temp)
                          M       endif
                          M     endif
000924 6E44               M         movwf   _Temp
                      00939         I2CREAD?B       _Month
                          M         L?CALL  I2CREAD
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000926 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
00092A 6E41               M         movwf   _Month
                      00940         I2CREADS?B      _Years
                          M         L?CALL  I2CREADS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
00092C EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
000930 6E47               M         movwf   _Years
                      00941 
                      00942 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00943         MOVE?CT 000h, _Minutes??7
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Minutes, 007h
                          M     else
000932 9E40               M         bcf     _Minutes, 007h
                          M     endif
                      00944 
                      00945 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00946         MOVE?CT 000h, _Hours??7
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Hours, 007h
                          M     else
000934 9E3B               M         bcf     _Hours, 007h
                          M     endif
                      00947 
                      00948 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00949         MOVE?CT 000h, _Hours??6
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Hours, 006h
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000936 9C3B               M         bcf     _Hours, 006h
                          M     endif
                      00950 
                      00951 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00952         MOVE?CT 000h, _Days??7
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Days,  007h
                          M     else
000938 9E3A               M         bcf     _Days,  007h
                          M     endif
                      00953 
                      00954 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00955         MOVE?CT 000h, _Days??6
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Days,  006h
                          M     else
00093A 9C3A               M         bcf     _Days,  006h
                          M     endif
                      00956 
                      00957 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00958         MOVE?CT 000h, _Month??7
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Month, 007h
                          M     else
00093C 9E41               M         bcf     _Month, 007h
                          M     endif
                      00959 
                      00960 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00961         MOVE?CT 000h, _Month??6
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Month, 006h
                          M     else
00093E 9C41               M         bcf     _Month, 006h
                          M     endif
                      00962 
                      00963 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00153       minutes.7=0:hours.7=0:hours.6=0:days
                            .7=0:days.6=0:month.7=0:month.6=0:month.5=0
                      00964         MOVE?CT 000h, _Month??5
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Month, 005h
                          M     else
000940 9A41               M         bcf     _Month, 005h
                          M     endif
                      00965 
                      00966 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00154   return
                      00967         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000942 0012               M         return
                      00968 
                      00969 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00156   OcitajTemperaturu:
                      00970 
                      00971         LABEL?L _OcitajTemperaturu      
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _OcitajTemperaturu
                          M         XALL
                          M     else
000944                    M _OcitajTemperaturu
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00972 
                      00973 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00157       LMcnt=LMcnt+1
                      00974         ADD?BCB _LMcnt, 001h, _LMcnt
                          M     if ((_LMcnt) == (_LMcnt))
                          M       if ((001h) == 1)
                          M         CHK?RP  _LMcnt
                          M     if (((_LMcnt) & 8000h) != PREV_ALT)
                          M       if ((_LMcnt) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_LMcnt) & 8000h
                          M     endif
                          M     if ((((_LMcnt) & 0fffh) > BANKA_END) & (((_LMcnt) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_LMcnt) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_LMcnt)
                          M PREV_BANK = high (_LMcnt)
                          M       endif
                          M     endif
000944 2A3F               M         incf    _LMcnt, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _LMcnt
                          M         addwf   _LMcnt, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _LMcnt
                          M         incf    _LMcnt, W
                          M         MOVE?AB _LMcnt
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _LMcnt
                          M         addwf   _LMcnt, W
                          M         MOVE?AB _LMcnt
                          M       endif
                          M     endif
                      00975 
                      00976 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00159        I2CREAD  sda, scl, lm75, 0,[Tempera
                            tura]
                      00977         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000946 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000948 6E0E               M         movwf   RR1
00094A 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
00094C 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
00094E 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000950 6E0C               M         movwf   RM1
                      00978         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000952 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000954 6E0F               M         movwf   RR2
000956 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000958 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
00095A 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
00095C 6E0D               M         movwf   RM2
                      00979         I2CWRITE?C      _LM75
                          M     if ((high (_LM75)) != 0)
                          M         movlw   (_LM75) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_LM75)
00095E 0E90               M         movlw   low (low (_LM75))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000960 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00980         I2CWRITE?C      000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
000964 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000966 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00981         I2CREADS?B      _Temperatura
                          M         L?CALL  I2CREADS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
00096A EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Temperatura
                          M         CHK?RP  _Temperatura
                          M     if (((_Temperatura) & 8000h) != PREV_ALT)
                          M       if ((_Temperatura) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Temperatura) & 8000h
                          M     endif
                          M     if ((((_Temperatura) & 0fffh) > BANKA_END) & (((_Temperatura) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Temperatura) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Temperatura)
                          M PREV_BANK = high (_Temperatura)
                          M       endif
                          M     endif
00096E 6E45               M         movwf   _Temperatura
                      00982 
                      00983 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00160   return 
                      00984         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
000970 0012               M         return
                      00985 
                      00986 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00162   PostaviPotenciometar:
                      00987 
                      00988         LABEL?L _PostaviPotenciometar   
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PostaviPotenciometar
                          M         XALL
                          M     else
000972                    M _PostaviPotenciometar
                          M     endif
                      00989 
                      00990 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00165       LOW CS
                      00991         LOW?T   _CS
                          M         MOVE?CT 0, PORTB, 007h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTB,  007h
                          M     else
000972 9E81               M         bcf     PORTB,  007h
                          M     endif
                          M         MOVE?CT 0, ((PORTB) + 12h), 007h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 007h
                          M     else
000974 9E93               M         bcf     ((PORTB) + 12h), 007h
                          M     endif
                      00992 
                      00993 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00166       PAUSEUS 100
                      00994         PAUSEUS?C       064h
                          M     if (((064h) >> 8) == 0)
000976 0E64               M         movlw   064h
                          M         L?CALL  PAUSEUSB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEUSB
                          M     else
                          M       if ((PAUSEUSB) < 1)
                          M         call    PAUSEUSB
                          M       else
                          M         if ((PAUSEUSB) > $)
                          M         call    PAUSEUSB
                          M         else
                          M           if ((PAUSEUSB) < ($ - 3ffh))
000978 ECC5 F000          M         call    PAUSEUSB
                          M           else
                          M         rcall   PAUSEUSB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M         MOVE?CB (064h) >> 8, R0 + 1
                          M         MOVE?CA low (064h)
                          M         L?CALL  PAUSEUS
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00995 
                      00996 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00167       Potenciometar.9 = 0
                      00997         MOVE?CT 000h, _Potenciometar??9
                          M         CHK?RP  _Potenciometar + 001h
                          M     if (((_Potenciometar + 001h) & 8000h) != PREV_ALT)
                          M       if ((_Potenciometar + 001h) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Potenciometar + 001h) & 8000h
                          M     endif
                          M     if ((((_Potenciometar + 001h) & 0fffh) > BANKA_END) & (((_Potenciometar + 001h) & 0fffh) < (0f01h + 
                            BANKA_END)))
                          M       if (((_Potenciometar + 001h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Potenciometar + 001h)
                          M PREV_BANK = high (_Potenciometar + 001h)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Potenciometar + 001h, 001h
                          M     else
00097C 9239               M         bcf     _Potenciometar + 001h, 001h
                          M     endif
                      00998 
                      00999 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00168       SHIFTOUT din,sclk, 1,[Potenciometar\
                            9]
                      01000         SHIFTDATA?T     _DIN
                          M         BIT?R1  PORTB, 006h
00097E 0E81               M         movlw   low ((PORTB) + ((006h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000980 6E0E               M         movwf   RR1
000982 0E0F               M         movlw   high ((PORTB) + ((006h)  >> 3))
000984 6E10               M         movwf   RS1
                          M         BIT?W   006h
                          M     if (((006h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((006h)  & 7) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   02h
                          M     endif
                          M     if (((006h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((006h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((006h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((006h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((006h)  & 7) == 6)
000986 0E40               M         movlw   40h
                          M     endif
                          M     if (((006h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000988 6E0C               M         movwf   RM1
                      01001         SHIFTCLOCK?T    _SCLK
                          M         BIT?R2  PORTB, 004h
00098A 0E81               M         movlw   low ((PORTB) + ((004h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
00098C 6E0F               M         movwf   RR2
00098E 0E0F               M         movlw   high ((PORTB) + ((004h)  >> 3))
000990 6E11               M         movwf   RS2
                          M         BIT?W   004h
                          M     if (((004h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((004h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((004h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((004h)  & 7) == 3)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   08h
                          M     endif
                          M     if (((004h)  & 7) == 4)
000992 0E10               M         movlw   10h
                          M     endif
                          M     if (((004h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((004h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((004h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000994 6E0D               M         movwf   RM2
                      01002         SHIFTMODE?C     001h
                          M         MOVE?CB 001h, GOP
                          M         CHK?RP  GOP
                          M     if (((GOP)   & 8000h) != PREV_ALT)
                          M       if ((GOP)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (GOP)   & 8000h
                          M     endif
                          M     if ((((GOP)   & 0fffh) > BANKA_END) & (((GOP)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((GOP)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (GOP)
                          M PREV_BANK = high (GOP)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    GOP
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    GOP
                          M       else
000996 0E01               M         movlw   low (001h)
000998 6E01               M         movwf   GOP
                          M       endif
                          M     endif
                      01003         SHIFTOUT?WC     _Potenciometar, 009h
                          M         MOVE?WN _Potenciometar, R0
                          M         MOVE?BB _Potenciometar, R0
00099A C038 F012          M         movff   _Potenciometar, R0
                          M         MOVE?BB (_Potenciometar) + 1, (R0) + 1
00099E C039 F013          M         movff   (_Potenciometar) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
0009A2 6A14               M         clrf    (R0)   + 2
0009A4 6A15               M         clrf    (R0)   + 3
                          M     if ((009h) == 8)
                          M         L?CALL  SHIFTOUT8
                          M     else
0009A6 0E09               M         movlw   009h
                          M         L?CALL  SHIFTOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTOUT
                          M     else
                          M       if ((SHIFTOUT) < 1)
                          M         call    SHIFTOUT
                          M       else
                          M         if ((SHIFTOUT) > $)
                          M         call    SHIFTOUT
                          M         else
                          M           if ((SHIFTOUT) < ($ - 3ffh))
0009A8 EC77 F000          M         call    SHIFTOUT
                          M           else
                          M         rcall   SHIFTOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      01004 
                      01005 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00170       Potenciometar.9 = 1
                      01006         MOVE?CT 001h, _Potenciometar??9
                          M         CHK?RP  _Potenciometar + 001h
                          M     if (((_Potenciometar + 001h) & 8000h) != PREV_ALT)
                          M       if ((_Potenciometar + 001h) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Potenciometar + 001h) & 8000h
                          M     endif
                          M     if ((((_Potenciometar + 001h) & 0fffh) > BANKA_END) & (((_Potenciometar + 001h) & 0fffh) < (0f01h + 
                            BANKA_END)))
                          M       if (((_Potenciometar + 001h) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Potenciometar + 001h)
                          M PREV_BANK = high (_Potenciometar + 001h)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0009AC 8239               M         bsf     _Potenciometar + 001h, 001h
                          M     else
                          M         bcf     _Potenciometar + 001h, 001h
                          M     endif
                      01007 
                      01008 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00172       SHIFTOUT din,sclk,1,[Potenciometar\9
                            ]
                      01009         SHIFTDATA?T     _DIN
                          M         BIT?R1  PORTB, 006h
0009AE 0E81               M         movlw   low ((PORTB) + ((006h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
0009B0 6E0E               M         movwf   RR1
0009B2 0E0F               M         movlw   high ((PORTB) + ((006h)  >> 3))
0009B4 6E10               M         movwf   RS1
                          M         BIT?W   006h
                          M     if (((006h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((006h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((006h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((006h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((006h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((006h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((006h)  & 7) == 6)
0009B6 0E40               M         movlw   40h
                          M     endif
                          M     if (((006h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0009B8 6E0C               M         movwf   RM1
                      01010         SHIFTCLOCK?T    _SCLK
                          M         BIT?R2  PORTB, 004h
0009BA 0E81               M         movlw   low ((PORTB) + ((004h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
0009BC 6E0F               M         movwf   RR2
0009BE 0E0F               M         movlw   high ((PORTB) + ((004h)  >> 3))
0009C0 6E11               M         movwf   RS2
                          M         BIT?W   004h
                          M     if (((004h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((004h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((004h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((004h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((004h)  & 7) == 4)
0009C2 0E10               M         movlw   10h
                          M     endif
                          M     if (((004h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((004h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((004h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0009C4 6E0D               M         movwf   RM2
                      01011         SHIFTMODE?C     001h
                          M         MOVE?CB 001h, GOP
                          M         CHK?RP  GOP
                          M     if (((GOP)   & 8000h) != PREV_ALT)
                          M       if ((GOP)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (GOP)   & 8000h
                          M     endif
                          M     if ((((GOP)   & 0fffh) > BANKA_END) & (((GOP)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((GOP)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (GOP)
                          M PREV_BANK = high (GOP)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    GOP
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    GOP
                          M       else
0009C6 0E01               M         movlw   low (001h)
0009C8 6E01               M         movwf   GOP
                          M       endif
                          M     endif
                      01012         SHIFTOUT?WC     _Potenciometar, 009h
                          M         MOVE?WN _Potenciometar, R0
                          M         MOVE?BB _Potenciometar, R0
0009CA C038 F012          M         movff   _Potenciometar, R0
                          M         MOVE?BB (_Potenciometar) + 1, (R0) + 1
0009CE C039 F013          M         movff   (_Potenciometar) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
0009D2 6A14               M         clrf    (R0)   + 2
0009D4 6A15               M         clrf    (R0)   + 3
                          M     if ((009h) == 8)
                          M         L?CALL  SHIFTOUT8
                          M     else
0009D6 0E09               M         movlw   009h
                          M         L?CALL  SHIFTOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTOUT
                          M     else
                          M       if ((SHIFTOUT) < 1)
                          M         call    SHIFTOUT
                          M       else
                          M         if ((SHIFTOUT) > $)
                          M         call    SHIFTOUT
                          M         else
                          M           if ((SHIFTOUT) < ($ - 3ffh))
0009D8 EC77 F000          M         call    SHIFTOUT
                          M           else
                          M         rcall   SHIFTOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      01013 
                      01014 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00173       HIGH CS
                      01015         HIGH?T  _CS
                          M         MOVE?CT 1, PORTB, 007h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
0009DC 8E81               M         bsf     PORTB,  007h
                          M     else
                          M         bcf     PORTB,  007h
                          M     endif
                          M         MOVE?CT 0, ((PORTB) + 12h), 007h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 007h
                          M     else
0009DE 9E93               M         bcf     ((PORTB) + 12h), 007h
                          M     endif
                      01016 
                      01017 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00174   return
                      01018         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
0009E0 0012               M         return
                      01019 
                      01020 ; C:\USERS\DAMIR\DESKTOP\DANER\TEST\TESTPROGRAM.PBP     00177   END
                      01021         END?    
  0000                    M     local loop
0009E2 0003               M loop    sleep
0009E4 D7FE               M         bra     loop
                      01022 
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01023         END
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 196


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCMD                             00000000
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CHANNELS                      1
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADD?BCB                           
ADD?BCN                           
ADDEN                             00000003
ADDEN1                            00000003
ADDEN2                            00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AHEN                              00000001
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN13                              00000005
AN14                              00000002
AN15                              00000003
AN16                              00000004
AN17                              00000005
AN18                              00000006
AN19                              00000007
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 197


SYMBOL TABLE
  LABEL                             VALUE 

AN9                               00000003
AND?BCN                           
AND?WCN                           
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA3                             00000003
ANSA5                             00000005
ANSB0                             00000000
ANSB1                             00000001
ANSB2                             00000002
ANSB3                             00000003
ANSB4                             00000004
ANSB5                             00000005
ANSC2                             00000002
ANSC3                             00000003
ANSC4                             00000004
ANSC5                             00000005
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            00000F38
ANSELB                            00000F39
ANSELC                            00000F3A
ASM?                              
BANK0_END                         000000FF
BANK0_START                       00000060
BANK1_END                         000001FF
BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANK3_END                         000003FF
BANK3_START                       00000300
BANK4_END                         000004FF
BANK4_START                       00000400
BANK5_END                         000005FF
BANK5_START                       00000500
BANKA_END                         0000005F
BANKA_START                       00000000
BANKED                            00000001
BAUD1CON                          00000FB8
BAUD2CON                          00000F70
BAUDCON                           00000FB8
BAUDCON1                          00000FB8
BAUDCON2                          00000F70
BAUDCTL                           00000FB8
BCL1IE                            00000003
BCL1IF                            00000003
BCL1IP                            00000003
BCL2IE                            00000006
BCL2IF                            00000006
BCL2IP                            00000006
BCLIE                             00000003
BCLIF                             00000003
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 198


SYMBOL TABLE
  LABEL                             VALUE 

BCLIP                             00000003
BF                                00000000
BGST                              00000005
BGVST                             00000006
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOEN                              00000004
BOR                               00000000
BRANCH?BCL                        
BRG16                             00000003
BRGH                              00000002
BRGH1                             00000002
BRGH2                             00000002
BRGOTO?L                          
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C12IN0M                           00000000
C12IN0N                           00000000
C12IN1M                           00000001
C12IN1N                           00000001
C12IN2M                           00000003
C12IN2N                           00000003
C12IN3M                           00000001
C12IN3N                           00000001
C1CH0                             00000000
C1CH1                             00000001
C1HYS                             00000003
C1IE                              00000006
C1IF                              00000006
C1INP                             00000003
C1IP                              00000006
C1OE                              00000005
C1ON                              00000007
C1OUT_CM1CON                      00000006
C1OUT_CM1CON0                     00000006
C1OUT_PORTA                       00000004
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SP                              00000003
C1SYNC                            00000001
C1TSEL0                           00000000
C1TSEL1                           00000001
C2CH0                             00000000
C2CH1                             00000001
C2HYS                             00000002
C2IE                              00000005
C2IF                              00000005
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 199


SYMBOL TABLE
  LABEL                             VALUE 

C2INP                             00000002
C2IP                              00000005
C2OE                              00000005
C2ON                              00000007
C2OUT_CM2CON                      00000006
C2OUT_CM2CON0                     00000006
C2OUT_PORTA                       00000005
C2POL                             00000004
C2R                               00000002
C2RSEL                            00000004
C2SP                              00000003
C2SYNC                            00000000
C2TSEL0                           00000003
C2TSEL1                           00000004
C3TSEL0                           00000006
C3TSEL1                           00000007
C4TSEL0                           00000000
C4TSEL1                           00000001
C5TSEL0                           00000002
C5TSEL1                           00000003
CCP1                              00000002
CCP1AS0                           00000004
CCP1AS1                           00000005
CCP1AS2                           00000006
CCP1ASE                           00000007
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1MD                            00000000
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2AS                            00000F64
CCP2AS0                           00000004
CCP2AS1                           00000005
CCP2AS2                           00000006
CCP2ASE                           00000007
CCP2CON                           00000F66
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MD                            00000001
CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 200


SYMBOL TABLE
  LABEL                             VALUE 

CCP2_REG                          00000F82
CCP3AS                            00000F5B
CCP3AS0                           00000004
CCP3AS1                           00000005
CCP3AS2                           00000006
CCP3ASE                           00000007
CCP3CON                           00000F5D
CCP3IE                            00000000
CCP3IF                            00000000
CCP3IP                            00000000
CCP3M0                            00000000
CCP3M1                            00000001
CCP3M2                            00000002
CCP3M3                            00000003
CCP3MD                            00000002
CCP3_BIT                          00000000
CCP3_PORTB                        00000005
CCP3_PORTC                        00000006
CCP3_REG                          00000000
CCP4                              00000000
CCP4CON                           00000F57
CCP4IE                            00000001
CCP4IF                            00000001
CCP4IP                            00000001
CCP4M0                            00000000
CCP4M1                            00000001
CCP4M2                            00000002
CCP4M3                            00000003
CCP4MD                            00000003
CCP4_BIT                          00000003
CCP4_REG                          00000000
CCP5                              00000004
CCP5CON                           00000F54
CCP5IE                            00000002
CCP5IF                            00000002
CCP5IP                            00000002
CCP5M0                            00000000
CCP5M1                            00000001
CCP5M2                            00000002
CCP5M3                            00000003
CCP5MD                            00000004
CCP5_BIT                          00000004
CCP5_REG                          00000000
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000F67
CCPR2H                            00000F68
CCPR2L                            00000F67
CCPR3                             00000F5E
CCPR3H                            00000F5F
CCPR3L                            00000F5E
CCPR4                             00000F58
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 201


SYMBOL TABLE
  LABEL                             VALUE 

CCPR4H                            00000F59
CCPR4L                            00000F58
CCPR5                             00000F55
CCPR5H                            00000F56
CCPR5L                            00000F55
CCPTMRS0                          00000F49
CCPTMRS1                          00000F48
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CK                                00000006
CK1                               00000006
CK2                               00000006
CKE                               00000006
CKP                               00000004
CKTXP                             00000004
CLRWDT?                           
CLRWDT?NOP                        
CM12CON                           00000F77
CM1CON                            00000F79
CM1CON0                           00000F79
CM2CON                            00000F78
CM2CON0                           00000F78
CM2CON1                           00000F77
CMP                               00000216
CMP1MD                            00000001
CMP2MD                            00000002
CMPEQ?BBL                         
CMPEQ?TCL                         
CMPEQ?WWL                         
CMPEQW                            000001FA
CMPEQW_USED                       00000001
CMPF?TL                           
CMPLE?WCL                         
CMPLEW                            00000200
CMPLEW_USED                       00000001
CMPLT?WCL                         
CMPLTW                            00000206
CMPLTW_USED                       00000001
CMPNE                             0000020C
CMPNE?NCL                         
CMPNE?TCL                         
CMPNE_USED                        00000001
CMPT?TL                           
CMPW                              00000212
CMPW_USED                         00000001
CMP_USED                          00000001
CREN                              00000004
CREN1                             00000004
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 202


SYMBOL TABLE
  LABEL                             VALUE 

CREN2                             00000004
CSRC                              00000007
CSRC1                             00000007
CSRC2                             00000007
CTED1                             00000002
CTED2                             00000003
CTMUCON0                          00000F45
CTMUCON1                          00000F44
CTMUCONH                          00000F45
CTMUCONL                          00000F44
CTMUEN                            00000007
CTMUICON                          00000F43
CTMUICONH                         00000F43
CTMUIE                            00000003
CTMUIF                            00000003
CTMUIP                            00000003
CTMUMD                            00000003
CTMUSIDL                          00000005
CTPLS                             00000002
CTTRIG                            00000000
CVREF                             00000002
D                                 00000005
DACCON0                           00000F41
DACCON1                           00000F40
DACEN                             00000007
DACLPS                            00000006
DACNSS                            00000000
DACOE                             00000005
DACOUT                            00000002
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DC3B0                             00000004
DC3B1                             00000005
DC4B0                             00000004
DC4B1                             00000005
DC5B0                             00000004
DC5B1                             00000005
DDISABLE?                         
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 203


SYMBOL TABLE
  LABEL                             VALUE 

DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019D
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DHEN                              00000000
DIV                               00000272
DIV?CWW                           
DIV?NCW                           
DIVS                              0000024E
DIVS_USED                         00000001
DIV_USED                          00000001
DONE                              00000001
DT1                               00000007
DT2                               00000007
DTRXP                             00000005
DUNN                              000003FE
DUNN5                             00000400
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP2AS                           00000F64
ECCP3AS                           00000F5B
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EDG1POL                           00000004
EDG1SEL0                          00000002
EDG1SEL1                          00000003
EDG1STAT                          00000000
EDG2POL                           00000007
EDG2SEL0                          00000005
EDG2SEL1                          00000006
EDG2STAT                          00000001
EDGEN                             00000003
EDGSEQEN                          00000002
EEADR                             00000FA9
EEADR0                            00000000
EEADR1                            00000001
EEADR2                            00000002
EEADR3                            00000003
EEADR4                            00000004
EEADR5                            00000005
EEADR6                            00000006
EEADR7                            00000007
EECON1                            00000FA6
EECON2                            00000FA7
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 204


SYMBOL TABLE
  LABEL                             VALUE 

EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
ENDASM?                           
FAST                              00000001
FERR                              00000002
FERR1                             00000002
FERR2                             00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FVRCON                            00000F42
FVREN                             00000007
FVRS0                             00000004
FVRS1                             00000005
FVRST                             00000006
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000001
GOSUB?L                           
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HFIOFS                            00000002
HIGH?T                            
HIGHT                             00000152
HIGHT_USED                        00000001
HLVDCON                           00000F9C
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 205


SYMBOL TABLE
  LABEL                             VALUE 

HLVDL2                            00000002
HLVDL3                            00000003
HPWM10                            
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000067
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000067
HSER_TXSTA                        00000020
I2CCLOCK?T                        
I2CDATA?T                         
I2CFIRSTFLAG                      FLAGS, 2
I2CREAD                           0000000A
I2CREAD?B                         
I2CREADFLAG                       FLAGS, 3
I2CREADS                          00000006
I2CREADS?B                        
I2CREAD_USED                      00000001
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITE                          0000003C
I2CWRITE?B                        
I2CWRITE?C                        
I2CWRITEFLAG                      FLAGS, 4
I2CWRITES                         00000038
I2CWRITES?B                       
I2CWRITES?C                       
I2CWRITE_USED                     00000001
I2C_SCLOUT                        1
IDISSEN                           00000001
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              00000404
INPUT?T                           
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 206


SYMBOL TABLE
  LABEL                             VALUE 

INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOCB                              00000F62
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IPR4                              00000F7C
IPR5                              00000F7F
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRNG0                             00000000
IRNG1                             00000001
IRVST                             00000005
ITRIM0                            00000002
ITRIM1                            00000003
ITRIM2                            00000004
ITRIM3                            00000005
ITRIM4                            00000006
ITRIM5                            00000007
IVRST                             00000005
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L00001                            0000059A
L00002                            000006DA
L00003                            00000458
L00004                            00000494
L00005                            00000446
L00007                            00000452
L00009                            00000462
L00011                            00000488
L00012                            00000494
L00013                            00000482
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 207


SYMBOL TABLE
  LABEL                             VALUE 

L00015                            00000492
L00017                            000004D2
L00019                            000004F0
L00021                            00000502
L00023                            00000712
L00025                            000006AA
L00027                            000006A0
L00028                            000006AA
L00029                            0000071C
L00031                            00000784
L00033                            00000752
L00034                            0000075C
L00035                            00000776
L00037                            00000784
L?CALL                            
L?GOTO                            
LABEL?L                           
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          0
LCD_DREG                          PORTA
LCD_EBIT                          4
LCD_EREG                          PORTA
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 208


SYMBOL TABLE
  LABEL                             VALUE 

LCD_LINE                          2
LCD_LINES                         00000002
LCD_RSBIT                         5
LCD_RSREG                         PORTA
LCD_RWBIT                         00000005
LCD_RWREG                         00000F80
LFIOFS                            00000000
LOW?T                             
LOWT                              00000156
LOWT_USED                         00000001
LVDCON                            00000F9C
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MC1OUT                            00000007
MC2OUT                            00000006
MCLR                              00000003
MFIOFS                            00000001
MFIOSEL                           00000004
MOVE?AB                           
MOVE?AN                           
MOVE?ANN                          
MOVE?ANW                          
MOVE?AT                           
MOVE?AW                           
MOVE?AWN                          
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BN                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CN                           
MOVE?CT                           
MOVE?CW                           
MOVE?NA                           
MOVE?NB                           
MOVE?NN                           
MOVE?NNA                          
MOVE?NT                           
MOVE?NW                           
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 209


SYMBOL TABLE
  LABEL                             VALUE 

MOVE?NWA                          
MOVE?TA                           
MOVE?TB                           
MOVE?TN                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WN                           
MOVE?WNA                          
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MPASMWIN_USED                     00000001
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MSSP1MD                           00000006
MSSP2MD                           00000007
MUL                               000002D6
MUL?WWN                           
MUL_USED                          00000001
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_SS1                           00000005
NOT_SS2                           00000000
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_T5SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
NVCFG0                            00000000
NVCFG1                            00000001
OERR                              00000001
OERR1                             00000001
OERR2                             00000001
OR?CNB                            
OR?NNW                            
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 210


SYMBOL TABLE
  LABEL                             VALUE 

OR?TTN                            
OSC                               16
OSCCON                            00000FD3
OSCCON2                           00000FD2
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSC_VALID                         00000001
OSTS                              00000003
OUTPUT?T                          
OUTPUTI                           0000015E
OUTPUTI_USED                      00000001
OUTPUTT                           0000015C
OUTPUTT_USED                      00000001
OV                                00000003
P                                 00000004
P1A                               00000002
P1B                               00000002
P1C                               00000001
P1D                               00000004
P1DC0                             00000000
P1DC1                             00000001
P1DC2                             00000002
P1DC3                             00000003
P1DC4                             00000004
P1DC5                             00000005
P1DC6                             00000006
P1M0                              00000006
P1M1                              00000007
P1RSEN                            00000007
P1SSAC0                           00000002
P1SSAC1                           00000003
P1SSBD0                           00000000
P1SSBD1                           00000001
P2A_PORTB                         00000003
P2A_PORTC                         00000001
P2B_PORTB                         00000005
P2B_PORTC                         00000000
P2DC0                             00000000
P2DC1                             00000001
P2DC2                             00000002
P2DC3                             00000003
P2DC4                             00000004
P2DC5                             00000005
P2DC6                             00000006
P2M0                              00000006
P2M1                              00000007
P2RSEN                            00000007
P2SSAC0                           00000002
P2SSAC1                           00000003
P2SSBD0                           00000000
P2SSBD1                           00000001
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 211


SYMBOL TABLE
  LABEL                             VALUE 

P3A_PORTB                         00000005
P3A_PORTC                         00000006
P3B                               00000007
P3DC0                             00000000
P3DC1                             00000001
P3DC2                             00000002
P3DC3                             00000003
P3DC4                             00000004
P3DC5                             00000005
P3DC6                             00000006
P3M0                              00000006
P3M1                              00000007
P3RSEN                            00000007
P3SSAC0                           00000002
P3SSAC1                           00000003
P3SSBD0                           00000000
P3SSBD1                           00000001
PAUSE                             0000016E
PAUSE?C                           
PAUSEB                            00000168
PAUSEUS                           0000018C
PAUSEUS?C                         
PAUSEUSB                          0000018A
PAUSEUS_USED                      00000001
PAUSEW                            0000016A
PAUSE_DELAY                       000003E5
PAUSE_USED                        00000001
PBP_HARDWAREDEF                   
PBP_PATH                          C:\PBP3\
PC                                00000FF9
PCIE                              00000006
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIE4                              00000F7A
PIE5                              00000F7D
PIR                               00000F9E
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 212


SYMBOL TABLE
  LABEL                             VALUE 

PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PIR4                              00000F7B
PIR5                              00000F7E
PLLEN                             00000006
PLLRDY                            00000007
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
PMD0                              00000F3F
PMD1                              00000F3E
PMD2                              00000F3D
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FBB
PR2const                          003D0900
PR4                               00000F52
PR6                               00000F4B
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_ALT                          00000000
PREV_BANK                         00000000
PRISD                             00000002
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PS                                00003D09
PSA                               00000003
PSS1AC0                           00000002
PSS1AC1                           00000003
PSS1BD0                           00000000
PSS1BD1                           00000001
PSS2AC0                           00000002
PSS2AC1                           00000003
PSS2BD0                           00000000
PSS2BD1                           00000001
PSS3AC0                           00000002
PSS3AC1                           00000003
PSS3BD0                           00000000
PSS3BD1                           00000001
PSSAC0                            00000002
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 213


SYMBOL TABLE
  LABEL                             VALUE 

PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTR1CON                          00000FB9
PSTR2CON                          00000F63
PSTR3CON                          00000F5A
PSTRCON                           00000FB9
PULSIN_MAX                        0000FFFF
PVCFG0                            00000002
PVCFG1                            00000003
PWM1CON                           00000FB7
PWM2CON                           00000F65
PWM3CON                           00000F5C
PWMCON                            00000FB7
R                                 00000002
R0                                00000012
R1                                00000016
R2                                0000001A
R3                                0000001E
R4                                00000002
R5                                00000004
R6                                00000006
R7                                00000008
R8                                0000000A
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000006
RAM_END                           000005FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1IP                             00000005
RC1REG                            00000FAE
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 214


SYMBOL TABLE
  LABEL                             VALUE 

RC1STA                            00000FAB
RC2                               00000002
RC2IE                             00000005
RC2IF                             00000005
RC2IP                             00000005
RC2REG                            00000F74
RC2STA                            00000F71
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCREG1                            00000FAE
RCREG2                            00000F74
RCSTA                             00000FAB
RCSTA1                            00000FAB
RCSTA2                            00000F71
RD                                00000000
RD16                              00000001
RE3                               00000003
RESET_ORG                         00000000
RETURN?                           
REV                               000001A0
REV_USED                          00000001
RI                                00000004
RM1                               0000000C
RM2                               0000000D
RR1                               0000000E
RR2                               0000000F
RS1                               00000010
RS2                               00000011
RSEN                              00000001
RST?RP                            
RX                                00000007
RX1                               00000007
RX2                               00000007
RX9                               00000006
RX91                              00000006
RX92                              00000006
RX9D                              00000000
RX9D1                             00000000
RX9D2                             00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBCDE                             00000002
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 215


SYMBOL TABLE
  LABEL                             VALUE 

SBOREN                            00000006
SCIE                              00000005
SCK                               00000003
SCK1                              00000003
SCK2                              00000001
SCKP                              00000004
SCL                               00000003
SCL1                              00000003
SCL2                              00000001
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDA1                              00000004
SDA2                              00000002
SDAHT                             00000003
SDI                               00000004
SDI1                              00000004
SDI2                              00000002
SDO                               00000005
SDO1                              00000005
SDO2                              00000003
SEN                               00000000
SENDB                             00000003
SENDB1                            00000003
SENDB2                            00000003
SHIFTCLOCK?T                      
SHIFTDATA?T                       
SHIFTL                            000001DC
SHIFTL?BCN                        
SHIFTL?NCN                        
SHIFTL?NCW                        
SHIFTL_USED                       00000001
SHIFTMODE?C                       
SHIFTOUT                          000000EE
SHIFTOUT8                         000000EC
SHIFTOUT?WC                       
SHIFTOUT_USED                     00000001
SHIFTR                            000001F0
SHIFTR?NCN                        
SHIFTR?WCW                        
SHIFTR_USED                       00000001
SHIFTTOGGLE_USED                  00000001
SLRA                              00000000
SLRB                              00000001
SLRC                              00000002
SLRCON                            00000F60
SMP                               00000007
SOSCGO                            00000003
SOSCRUN                           00000006
SP0                               00000000
SP1                               00000001
SP1BRG                            00000FAF
SP1BRGH                           00000FB0
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 216


SYMBOL TABLE
  LABEL                             VALUE 

SP2                               00000002
SP2BRG                            00000F75
SP2BRGH                           00000F76
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRG1                            00000FAF
SPBRG2                            00000F75
SPBRGH                            00000FB0
SPBRGH1                           00000FB0
SPBRGH2                           00000F76
SPEN                              00000007
SPEN1                             00000007
SPEN2                             00000007
SRCLK0                            00000004
SRCLK1                            00000005
SRCLK2                            00000006
SRCON0                            00000F47
SRCON1                            00000F46
SREN                              00000005
SREN1                             00000005
SREN2                             00000005
SRI                               00000000
SRLEN                             00000007
SRNQ                              00000005
SRNQEN                            00000002
SRPR                              00000000
SRPS                              00000001
SRQ                               00000004
SRQEN                             00000003
SRRC1E                            00000000
SRRC2E                            00000001
SRRCKE                            00000002
SRRPE                             00000003
SRSC1E                            00000004
SRSC2E                            00000005
SRSCKE                            00000006
SRSPE                             00000007
SS                                00000005
SS1                               00000005
SS2                               00000000
SSP1ADD                           00000FC8
SSP1BUF                           00000FC9
SSP1CON1                          00000FC6
SSP1CON2                          00000FC5
SSP1CON3                          00000FCB
SSP1IE                            00000003
SSP1IF                            00000003
SSP1IP                            00000003
SSP1MSK                           00000FCA
SSP1STAT                          00000FC7
SSP2ADD                           00000F6E
SSP2BUF                           00000F6F
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 217


SYMBOL TABLE
  LABEL                             VALUE 

SSP2CON1                          00000F6C
SSP2CON2                          00000F6B
SSP2CON3                          00000F69
SSP2IE                            00000007
SSP2IF                            00000007
SSP2IP                            00000007
SSP2MSK                           00000F6A
SSP2STAT                          00000F6D
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPCON3                           00000FCB
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000FCA
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
STR1A                             00000000
STR1B                             00000001
STR1C                             00000002
STR1D                             00000003
STR1SYNC                          00000004
STR2A                             00000000
STR2B                             00000001
STR2C                             00000002
STR2D                             00000003
STR2SYNC                          00000004
STR3A                             00000000
STR3B                             00000001
STR3C                             00000002
STR3D                             00000003
STR3SYNC                          00000004
SUB?BCB                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 218


SYMBOL TABLE
  LABEL                             VALUE 

SYNC1                             00000004
SYNC2                             00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1                                00000022
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1G                               00000005
T1GCON                            00000FCC
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1G_DONE                          00000003
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RD16                            00000001
T1SOSCEN                          00000003
T1SYNC                            00000002
T2                                00000026
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FBA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CKI_PORTB                       00000005
T3CKI_PORTC                       00000000
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3G                               00000000
T3GCON                            00000FB4
T3GGO                             00000003
T3GGO_NOT_DONE                    00000003
T3GPOL                            00000006
T3GSPM                            00000004
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 219


SYMBOL TABLE
  LABEL                             VALUE 

T3GSS0                            00000000
T3GSS1                            00000001
T3GTM                             00000005
T3GVAL                            00000002
T3G_DONE                          00000003
T3OSCEN                           00000003
T3RD16                            00000001
T3SOSCEN                          00000003
T4CKPS0                           00000000
T4CKPS1                           00000001
T4CON                             00000F51
T4OUTPS0                          00000003
T4OUTPS1                          00000004
T4OUTPS2                          00000005
T4OUTPS3                          00000006
T5CKI                             00000002
T5CKPS0                           00000004
T5CKPS1                           00000005
T5CON                             00000F4E
T5G                               00000004
T5GCON                            00000F4D
T5GGO                             00000003
T5GGO_NOT_DONE                    00000003
T5GPOL                            00000006
T5GSPM                            00000004
T5GSS0                            00000000
T5GSS1                            00000001
T5GTM                             00000005
T5GVAL                            00000002
T5G_DONE                          00000003
T5RD16                            00000001
T5SOSCEN                          00000003
T5SYNC                            00000002
T6CKPS0                           00000000
T6CKPS1                           00000001
T6CON                             00000F4A
T6OUTPS0                          00000003
T6OUTPS1                          00000004
T6OUTPS2                          00000005
T6OUTPS3                          00000006
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TGEN                              00000004
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 220


SYMBOL TABLE
  LABEL                             VALUE 

TMR1                              00000FCE
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000000
TMR1GIF                           00000000
TMR1GIP                           00000000
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1MD                            00000000
TMR1ON                            00000000
TMR2                              00000FBC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2MD                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS0                           00000006
TMR3CS1                           00000007
TMR3GE                            00000007
TMR3GIE                           00000001
TMR3GIF                           00000001
TMR3GIP                           00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3MD                            00000002
TMR3ON                            00000000
TMR4                              00000F53
TMR4IE                            00000000
TMR4IF                            00000000
TMR4IP                            00000000
TMR4MD                            00000003
TMR4ON                            00000002
TMR5                              00000F4F
TMR5CS0                           00000006
TMR5CS1                           00000007
TMR5GE                            00000007
TMR5GIE                           00000002
TMR5GIF                           00000002
TMR5GIP                           00000002
TMR5H                             00000F50
TMR5IE                            00000001
TMR5IF                            00000001
TMR5IP                            00000001
TMR5L                             00000F4F
TMR5MD                            00000004
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 221


SYMBOL TABLE
  LABEL                             VALUE 

TMR5ON                            00000000
TMR6                              00000F4C
TMR6IE                            00000002
TMR6IF                            00000002
TMR6IP                            00000002
TMR6MD                            00000005
TMR6ON                            00000002
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRIGSEL                           00000007
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISE                             00000F96
TRMT                              00000001
TRMT1                             00000001
TRMT2                             00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX                                00000006
TX1                               00000006
TX1IE                             00000004
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 222


SYMBOL TABLE
  LABEL                             VALUE 

TX1IF                             00000004
TX1IP                             00000004
TX1REG                            00000FAD
TX1STA                            00000FAC
TX2                               00000006
TX2IE                             00000004
TX2IF                             00000004
TX2IP                             00000004
TX2REG                            00000F73
TX2STA                            00000F72
TX9                               00000006
TX91                              00000006
TX92                              00000006
TX9D                              00000000
TX9D1                             00000000
TX9D2                             00000000
TXEN                              00000005
TXEN1                             00000005
TXEN2                             00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXREG1                            00000FAD
TXREG2                            00000F73
TXSTA                             00000FAC
TXSTA1                            00000FAC
TXSTA2                            00000F72
UA                                00000001
UART1MD                           00000006
UART2MD                           00000007
VDIRMAG                           00000007
VPP                               00000003
VREFCON0                          00000F42
VREFCON1                          00000F41
VREFCON2                          00000F40
VREFM                             00000002
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WPUB                              00000F61
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WPUE3                             00000007
WR                                00000001
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 223


SYMBOL TABLE
  LABEL                             VALUE 

WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_Adr                              0000002A
_BCKLIGHT                         _PORTE??3
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_190_2L                      000000FF
_BORV_220_2L                      000000F7
_BORV_250_2L                      000000EF
_BORV_285_2L                      000000E7
_BUZZER                           _PORTB??1
_CCP2MX_PORTB3_3H                 000000FE
_CCP2MX_PORTC1_3H                 000000FF
_CCP3MX_PORTB5_3H                 000000FF
_CCP3MX_PORTC6_3H                 000000FB
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_COPER                            _PORTB??2
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_CS                               _PORTB??7
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_DIN                              _PORTB??6
_Days                             0000003A
_Days??6                          _Days, 006h
_Days??7                          _Days, 007h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 224


SYMBOL TABLE
  LABEL                             VALUE 

_DutyCycleL                       0000002C
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_EPROM                            000000A0
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_FOSC_ECHPIO6_1H                  000000F5
_FOSC_ECHP_1H                     000000F4
_FOSC_ECLPIO6_1H                  000000FD
_FOSC_ECLP_1H                     000000FC
_FOSC_ECMPIO6_1H                  000000FB
_FOSC_ECMP_1H                     000000FA
_FOSC_HSHP_1H                     000000F2
_FOSC_HSMP_1H                     000000F3
_FOSC_INTIO67_1H                  000000F8
_FOSC_INTIO7_1H                   000000F9
_FOSC_LP_1H                       000000F0
_FOSC_RCIO6_1H                    000000F7
_FOSC_RC_1H                       000000F6
_FOSC_XT_1H                       000000F1
_Frequency                        0000002E
_GetCH_1                          0000059A
_GetCH_2                          000005A6
_GetCH_3                          000005B2
_GetCH_4                          000005BE
_GetCH_5                          000005CA
_GetCH_Done                       000005D2
_HFOFST_OFF_3H                    000000F7
_HFOFST_ON_3H                     000000FF
_HPWM10_UPD                       00000408
_HP_Channel                       0000003C
_HP_Duty                          00000030
_HP_Flags                         0000003D
_HP_Flags??0                      _HP_Flags, 000h
_HP_Flags??1                      _HP_Flags, 001h
_HP_Flags??2                      _HP_Flags, 002h
_HP_Flags??3                      _HP_Flags, 003h
_HP_Freq                          00000032
_HP_PR2                           0000003E
_HP_Temp                          00000034
_HP_Temp??HIGHBYTE                00000035
_HP_Temp??LOWBYTE                 00000034
_Hours                            0000003B
_Hours??6                         _Hours, 006h
_Hours??7                         _Hours, 007h
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 225


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LM75                             00000090
_LMcnt                            0000003F
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_EXTMCLR_3H                 000000FF
_MCLRE_INTMCLR_3H                 0000007F
_Main                             0000086C
_Merenje                          00000036
_Minutes                          00000040
_Minutes??7                       _Minutes, 007h
_Month                            00000041
_Month??5                         _Month, 005h
_Month??6                         _Month, 006h
_Month??7                         _Month, 007h
_OcitajTemperaturu                00000944
_OverHPWM10                       00000786
_P2BMX_PORTB5_3H                  000000FF
_P2BMX_PORTC0_3H                  000000DF
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PIR1??1                          PIR1, 001h
_PLLCFG_OFF_1H                    000000EF
_PLLCFG_ON_1H                     000000FF
_PORTA??6                         PORTA, 006h
_PORTA??7                         PORTA, 007h
_PORTB??1                         PORTB, 001h
_PORTB??2                         PORTB, 002h
_PORTB??4                         PORTB, 004h
_PORTB??6                         PORTB, 006h
_PORTB??7                         PORTB, 007h
_PORTC??0                         PORTC, 000h
_PORTC??1                         PORTC, 001h
_PORTC??3                         PORTC, 003h
_PORTC??4                         PORTC, 004h
_PORTC??5                         PORTC, 005h
_PORTC??6                         PORTC, 006h
_PORTC??7                         PORTC, 007h
_PORTE??3                         PORTE, 003h
_PORTH                            00000F82
_PORTL                            00000F81
_PR2changed                       _HP_Flags??3
_PRICLKEN_OFF_1H                  000000DF
_PRICLKEN_ON_1H                   000000FF
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 226


SYMBOL TABLE
  LABEL                             VALUE 

_PS0                              _HP_Flags??0
_PS1                              _HP_Flags??1
_PSchanged                        _HP_Flags??2
_PWRTEN_OFF_2L                    000000FF
_PWRTEN_ON_2L                     000000FE
_PostaviPotenciometar             00000972
_Potenciometar                    00000038
_Potenciometar??9                 _Potenciometar + 001h, 001h
_Potenciometar??LOWBYTE           00000038
_PutCH_1                          000006DA
_PutCH_2                          000006E6
_PutCH_3                          000006F2
_PutCH_4                          000006FE
_PutCH_5                          0000070A
_PutCH_Done                       00000712
_RELEJ1                           _PORTC??4
_RELEJ2                           _PORTC??5
_RTC                              000000A2
_RX                               _PORTC??7
_SCL                              _PORTC??1
_SCLK                             _PORTB??4
_SDA                              _PORTC??0
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_Seconds                          00000043
_T2CKPS0                          _T2CON??0
_T2CKPS1                          _T2CON??1
_T2CON??0                         T2CON, 000h
_T2CON??1                         T2CON, 001h
_T2CON??2                         T2CON, 002h
_T3CMX_PORTB5_3H                  000000EF
_T3CMX_PORTC0_3H                  000000FF
_TASTATURA                        _PORTC??3
_TMR2IF                           _PIR1??1
_TMR2ON                           _T2CON??2
_TRISH                            00000F94
_TRISL                            00000F93
_TX                               _PORTC??6
_Temp                             00000044
_Temperatura                      00000045
_UpisiVreme                       0000087C
_UzmiVreme                        000008E4
_WDTEN_NOSLP_2H                   000000FD
_WDTEN_OFF_2H                     000000FC
_WDTEN_ON_2H                      000000FF
_WDTEN_SWON_2H                    000000FE
_WDTPS_1024_2H                    000000EB
_WDTPS_128_2H                     000000DF
_WDTPS_16384_2H                   000000FB
_WDTPS_16_2H                      000000D3
_WDTPS_1_2H                       000000C3
_WDTPS_2048_2H                    000000EF
_WDTPS_256_2H                     000000E3
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 227


SYMBOL TABLE
  LABEL                             VALUE 

_WDTPS_2_2H                       000000C7
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000D7
_WDTPS_4096_2H                    000000F3
_WDTPS_4_2H                       000000CB
_WDTPS_512_2H                     000000E7
_WDTPS_64_2H                      000000DB
_WDTPS_8192_2H                    000000F7
_WDTPS_8_2H                       000000CF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_X                                00000046
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
_Years                            00000047
__18F25K22                        00000001
_poti                             00000042
_tast1                            _PORTA??6
_tast2                            _PORTA??7
cmpb1                             00000230
cmpdiff                           00000248
cmpnoteq                          00000234
cmpw1                             0000022A
divchkr1                          00000260
divdo                             00000274
divdone                           000002D0
divloop                           00000280
divok                             000002AE
i2cckh                            000000D8
i2cckl                            000000CC
i2cdah                            00000072
i2cdal                            00000082
i2cgetbit                         000000BC
i2chigh                           0000007E
i2chl                             00000092
i2clow                            0000008C
i2creaddone                       00000034
i2creadip                         00000016
i2creadloop                       0000001A
i2cstart                          00000094
i2cstop                           00000064
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 228


SYMBOL TABLE
  LABEL                             VALUE 

i2cwrite2                         0000004C
i2cwritec                         000000A2
i2cwritedone                      00000060
i2cwriteip                        0000005A
i2cwriteloop                      000000A8
main                              00000404
muldone                           000003F8
mulsign                           000003E4
pauseloop                         00000170
pauseush                          00000198
pauseusloop                       00000196
revfirst                          000001BA
revloop                           000001AA
shiftlloop                        000001D2
shiftoutdone                      0000013E
shiftoutloop                      00000126
shiftrloop                        000001E6
shifttoggle                       00000142


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.43                   TESTPROGRAM.ASM   11-6-2012  16:33:01         PAGE 229


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXX---------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  2545
Program Memory Bytes Free: 30223


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     3 suppressed

