MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 3.0.4.1, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 MPASMWIN_USED                   EQU     1
                      00004 
                      00005 #define PBP_PATH        C:\PBP3\
                      00006 
                      00007 
                      00008 
                      00009 
                      00016         LIST
                      00017         LIST p = 18F25K22, r = dec, w = -311, w = -230, f = inhx32
                      00018         INCLUDE "P18F25K22.INC" ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F25K22 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      02664         LIST
                      00021         LIST
  00F00000            00022 EEPROM_START    EQU     0F00000h
  00000040            00023 BLOCK_SIZE      EQU     64
                      00024 
                      00025 
                      00026 PBP_HARDWAREDEF  macro
                      00027   endm
                      00028 
                      00029 
28 00 3C 18 81 00 80 000030     CONFIG FOSC = INTIO67
       F E0 0F 40 
                      00031     CONFIG PLLCFG = OFF
                      00032     CONFIG PRICLKEN = ON
                      00033     CONFIG FCMEN = OFF
                      00034     CONFIG IESO = OFF
                      00035     CONFIG PWRTEN = ON
                      00036     CONFIG BOREN = OFF
                      00037     CONFIG BORV = 285
                      00038     CONFIG WDTEN = OFF
                      00039     CONFIG WDTPS = 32768
                      00040     CONFIG CCP2MX = PORTB3
                      00041     CONFIG PBADEN = OFF
                      00042     CONFIG CCP3MX = PORTC6
                      00043     CONFIG HFOFST = ON
                      00044     CONFIG T3CMX = PORTC0
                      00045     CONFIG P2BMX = PORTC0
                      00046     CONFIG MCLRE = INTMCLR
                      00047     CONFIG STVREN = ON
                      00048     CONFIG LVP = OFF
                      00049     CONFIG XINST = OFF
                      00050     CONFIG CP0 = ON
                      00051     CONFIG CP1 = ON
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00052     CONFIG CP2 = ON
                      00053     CONFIG CP3 = ON
                      00054     CONFIG CPB = ON
                      00055     CONFIG CPD = OFF
                      00056     CONFIG WRT0 = OFF
                      00057     CONFIG WRT1 = OFF
                      00058     CONFIG WRT2 = OFF
                      00059     CONFIG WRT3 = OFF
                      00060     CONFIG WRTC = OFF
                      00061     CONFIG WRTB = OFF
                      00062     CONFIG WRTD = OFF
                      00063     CONFIG EBTR0 = OFF
                      00064     CONFIG EBTR1 = OFF
                      00065     CONFIG EBTR2 = OFF
                      00066     CONFIG EBTR3 = OFF
                      00067     CONFIG EBTRB = OFF
                      00068 
                      00069 
                      00070 
                      00071 ; Define statements.
                      00072 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00299   DEFINE  ADC_CHANNELS  1
                      00073 #define         ADC_CHANNELS              1
                      00074 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   define OSC 16
                      00075 #define         OSC              16
                      00076 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00046   DEFINE LCD_DREG PORTA 
                      00077 #define         LCD_DREG                 PORTA 
                      00078 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00047   DEFINE LCD_DBIT 0
                      00079 #define         LCD_DBIT                 0
                      00080 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00048   DEFINE LCD_RSREG PORTA
                      00081 #define         LCD_RSREG                PORTA
                      00082 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00049   DEFINE LCD_RSBIT 5 
                      00083 #define         LCD_RSBIT                5 
                      00084 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00050   DEFINE LCD_EREG PORTA
                      00085 #define         LCD_EREG                 PORTA
                      00086 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00051   DEFINE LCD_EBIT 4 
                      00087 #define         LCD_EBIT                 4 
                      00088 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00052   DEFINE LCD_BITS 4 
                      00089 #define         LCD_BITS                 4 
                      00090 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00053   DEFINE LCD_LINE 2
                      00091 #define         LCD_LINE                 2
                      00092 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00054   DEFINE I2C_SCLOUT 1
                      00093 #define         I2C_SCLOUT               1
                      00094 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00055   DEFINE I2C_SLOW 1
                      00095 #define         I2C_SLOW                 1
                      00096 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00056   define NO_CLRWDT 1
                      00097 #define         NO_CLRWDT                1
                      00098 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00077   DEFINE I2C_SDA PORTC,0 
                      00099 #define         I2C_SDA          PORTC,0 
                      00100 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00078   DEFINE I2C_SCL PORTC,1 
                      00101 #define         I2C_SCL          PORTC,1 
                      00102 
  00000000            00103 RAM_START                       EQU     00000h
  000005FF            00104 RAM_END                         EQU     005FFh
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00105 RAM_BANKS                       EQU     00006h
  00000060            00106 BANK0_START                     EQU     00060h
  000000FF            00107 BANK0_END                       EQU     000FFh
  00000100            00108 BANK1_START                     EQU     00100h
  000001FF            00109 BANK1_END                       EQU     001FFh
  00000200            00110 BANK2_START                     EQU     00200h
  000002FF            00111 BANK2_END                       EQU     002FFh
  00000300            00112 BANK3_START                     EQU     00300h
  000003FF            00113 BANK3_END                       EQU     003FFh
  00000400            00114 BANK4_START                     EQU     00400h
  000004FF            00115 BANK4_END                       EQU     004FFh
  00000500            00116 BANK5_START                     EQU     00500h
  000005FF            00117 BANK5_END                       EQU     005FFh
  00000000            00118 BANKA_START                     EQU     00000h
  0000005F            00119 BANKA_END                       EQU     0005Fh
                      00120 
                      00121 ; C:\PBP3\PBPPI18L.RAM          00028   A00000  FLAGS   VAR     BYTE BANKA SYSTEM       ' Static flags
  00000000            00122 FLAGS                           EQU     RAM_START + 000h
                      00123 ; C:\PBP3\PBPPI18L.RAM          00027   A00001  GOP     VAR     BYTE BANKA SYSTEM       ' Gen Op Paramet
                            er
  00000001            00124 GOP                             EQU     RAM_START + 001h
                      00125 ; C:\PBP3\PBPPI18L.RAM          00016   A00002  R4      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000002            00126 R4                              EQU     RAM_START + 002h
                      00127 ; C:\PBP3\PBPPI18L.RAM          00017   A00004  R5      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000004            00128 R5                              EQU     RAM_START + 004h
                      00129 ; C:\PBP3\PBPPI18L.RAM          00018   A00006  R6      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000006            00130 R6                              EQU     RAM_START + 006h
                      00131 ; C:\PBP3\PBPPI18L.RAM          00019   A00008  R7      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000008            00132 R7                              EQU     RAM_START + 008h
                      00133 ; C:\PBP3\PBPPI18L.RAM          00020   A0000A  R8      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  0000000A            00134 R8                              EQU     RAM_START + 00Ah
                      00135 ; C:\PBP3\PBPPI18L.RAM          00023   A0000C  RM1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Mask
  0000000C            00136 RM1                             EQU     RAM_START + 00Ch
                      00137 ; C:\PBP3\PBPPI18L.RAM          00026   A0000D  RM2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Mask
  0000000D            00138 RM2                             EQU     RAM_START + 00Dh
                      00139 ; C:\PBP3\PBPPI18L.RAM          00021   A0000E  RR1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Register
  0000000E            00140 RR1                             EQU     RAM_START + 00Eh
                      00141 ; C:\PBP3\PBPPI18L.RAM          00024   A0000F  RR2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Register
  0000000F            00142 RR2                             EQU     RAM_START + 00Fh
                      00143 ; C:\PBP3\PBPPI18L.RAM          00022   A00010  RS1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Bank
  00000010            00144 RS1                             EQU     RAM_START + 010h
                      00145 ; C:\PBP3\PBPPI18L.RAM          00025   A00011  RS2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Bank
  00000011            00146 RS2                             EQU     RAM_START + 011h
                      00147 ; C:\PBP3\PBPPI18L.RAM          00012   A00012  R0      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  00000012            00148 R0                              EQU     RAM_START + 012h
                      00149 ; C:\PBP3\PBPPI18L.RAM          00013   A00016  R1      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000016            00150 R1                              EQU     RAM_START + 016h
                      00151 ; C:\PBP3\PBPPI18L.RAM          00014   A0001A  R2      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  0000001A            00152 R2                              EQU     RAM_START + 01Ah
                      00153 ; C:\PBP3\PBPPI18L.RAM          00015   A0001E  R3      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  0000001E            00154 R3                              EQU     RAM_START + 01Eh
                      00155 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   A00022  define OSC 16
  00000022            00156 T1                              EQU     RAM_START + 022h
                      00157 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   A00026  define OSC 16
  00000026            00158 T2                              EQU     RAM_START + 026h
                      00159 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   A0002A  define OSC 16
  0000002A            00160 PB01                            EQU     RAM_START + 02Ah
                      00161 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   A0002B  define OSC 16
  0000002B            00162 PB02                            EQU     RAM_START + 02Bh
                      00163 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   A0002C  define OSC 16
  0000002C            00164 PB03                            EQU     RAM_START + 02Ch
                      00165 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   A0002D  define OSC 16
  0000002D            00166 PB04                            EQU     RAM_START + 02Dh
                      00167 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00202   A0002E  Akvarijum               var word
  0000002E            00168 _Akvarijum                      EQU     RAM_START + 02Eh
                      00169 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00174   A00030  BezTastera              var word
  00000030            00170 _BezTastera                     EQU     RAM_START + 030h
                      00171 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00167   A00032  Frequency               var word
  00000032            00172 _Frequency                      EQU     RAM_START + 032h
                      00173 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00047   A00034  HP_Duty      VAR WORD
  00000034            00174 _HP_Duty                        EQU     RAM_START + 034h
                      00175 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00046   A00036  HP_Freq      VAR Word
  00000036            00176 _HP_Freq                        EQU     RAM_START + 036h
                      00177 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00048   A00038  HP_Temp      VAR WORD
  00000038            00178 _HP_Temp                        EQU     RAM_START + 038h
                      00179 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00179   A0003A  KMinuta                 var word
  0000003A            00180 _KMinuta                        EQU     RAM_START + 03Ah
                      00181 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00178   A0003C  PMinuta                 var word
  0000003C            00182 _PMinuta                        EQU     RAM_START + 03Ch
                      00183 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00188   A0003E  PocetnaAdresaJezika     var word
  0000003E            00184 _PocetnaAdresaJezika            EQU     RAM_START + 03Eh
                      00185 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00209   A00040  smece var word
  00000040            00186 _smece                          EQU     RAM_START + 040h
                      00187 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00201   A00042  Soba                    var word
  00000042            00188 _Soba                           EQU     RAM_START + 042h
                      00189 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00151   A00044  Temp                    VAR word
  00000044            00190 _Temp                           EQU     RAM_START + 044h
                      00191 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00197   A00046  TemperaturaIzEproma     var word
  00000046            00192 _TemperaturaIzEproma            EQU     RAM_START + 046h
                      00193 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00155   A00048  TMinuta                 var word
  00000048            00194 _TMinuta                        EQU     RAM_START + 048h
                      00195 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00193   A0004A  BrojKanala              var byte
  0000004A            00196 _BrojKanala                     EQU     RAM_START + 04Ah
                      00197 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00148   A0004B  Days                    var byte
  0000004B            00198 _Days                           EQU     RAM_START + 04Bh
                      00199 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00132   A0004C  DecMin                  var byte
  0000004C            00200 _DecMin                         EQU     RAM_START + 04Ch
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00139   A0004D  DecMin1                 var byte 
  0000004D            00202 _DecMin1                        EQU     RAM_START + 04Dh
                      00203 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00204   A0004E  DecMinutGlavni          var byte
  0000004E            00204 _DecMinutGlavni                 EQU     RAM_START + 04Eh
                      00205 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00206   A0004F  DecMinutPrikaz          var byte
  0000004F            00206 _DecMinutPrikaz                 EQU     RAM_START + 04Fh
                      00207 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00131   A00050  DecSat                  var byte
  00000050            00208 _DecSat                         EQU     RAM_START + 050h
                      00209 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00138   A00051  DecSat1                 var byte 
  00000051            00210 _DecSat1                        EQU     RAM_START + 051h
                      00211 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00203   A00052  DecSatglavni            var byte
  00000052            00212 _DecSatglavni                   EQU     RAM_START + 052h
                      00213 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00205   A00053  DecSatPrikaz            var byte
  00000053            00214 _DecSatPrikaz                   EQU     RAM_START + 053h
                      00215 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00140   A00054  DecSec                  var byte
  00000054            00216 _DecSec                         EQU     RAM_START + 054h
                      00217 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00208   A00055  DesniBrojac             var byte
  00000055            00218 _DesniBrojac                    EQU     RAM_START + 055h
                      00219 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00176   A00056  DveTacke                var byte
  00000056            00220 _DveTacke                       EQU     RAM_START + 056h
                      00221 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00146   A00057  Hours                   var byte
  00000057            00222 _Hours                          EQU     RAM_START + 057h
                      00223 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00045   A00058  HP_Channel   VAR BYTE
  00000058            00224 _HP_Channel                     EQU     RAM_START + 058h
                      00225 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00039   A00059  HP_Flags  VAR BYTE
  00000059            00226 _HP_Flags                       EQU     RAM_START + 059h
                      00227 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00049   A0005A  HP_PR2       VAR BYTE
  0000005A            00228 _HP_PR2                         EQU     RAM_START + 05Ah
                      00229 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00129   A0005B  i                       var byte 
  0000005B            00230 _i                              EQU     RAM_START + 05Bh
                      00231 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00190   A0005C  JacinaOsvetljenja1      var byte
  0000005C            00232 _JacinaOsvetljenja1             EQU     RAM_START + 05Ch
                      00233 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00191   A0005D  JacinaOsvetljenja2      var byte
  0000005D            00234 _JacinaOsvetljenja2             EQU     RAM_START + 05Dh
                      00235 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00169   A0005E  Kanal1                  var byte
  0000005E            00236 _Kanal1                         EQU     RAM_START + 05Eh
                      00237 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00170   A0005F  Kanal2                  var byte
  0000005F            00238 _Kanal2                         EQU     RAM_START + 05Fh
                      00239 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00171   A00060  Kanal3                  var byte
  00000060            00240 _Kanal3                         EQU     RAM_START + 060h
                      00241 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00172   A00061  Kanal4                  var byte
  00000061            00242 _Kanal4                         EQU     RAM_START + 061h
                      00243 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00207   A00062  LeviBrojac              var byte
  00000062            00244 _LeviBrojac                     EQU     RAM_START + 062h
                      00245 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00145   A00063  Minutes                 var byte
  00000063            00246 _Minutes                        EQU     RAM_START + 063h
                      00247 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00183   A00064  MinutKraj               var byte
  00000064            00248 _MinutKraj                      EQU     RAM_START + 064h
                      00249 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00182   A00065  MinutPocetak            var byte
  00000065            00250 _MinutPocetak                   EQU     RAM_START + 065h
                      00251 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00150   A00066  Month                   var byte
  00000066            00252 _Month                          EQU     RAM_START + 066h
                      00253 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00181   A00067  NoviMinut               var byte
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000067            00254 _NoviMinut                      EQU     RAM_START + 067h
                      00255 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00152   A00068  NovostanjeRTC           var byte
  00000068            00256 _NovostanjeRTC                  EQU     RAM_START + 068h
                      00257 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00147   A00069  OdrzavanjeJacina        var byte 
  00000069            00258 _OdrzavanjeJacina               EQU     RAM_START + 069h
                      00259 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00130   A0006A  OsvetljenjeOdrzavanje   var byte
  0000006A            00260 _OsvetljenjeOdrzavanje          EQU     RAM_START + 06Ah
                      00261 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00187   A0006B  OsvKraj                 var byte
  0000006B            00262 _OsvKraj                        EQU     RAM_START + 06Bh
                      00263 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00186   A0006C  OsvPocetak              var byte
  0000006C            00264 _OsvPocetak                     EQU     RAM_START + 06Ch
                      00265 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00137   A0006D  Pozicija                var byte 
  0000006D            00266 _Pozicija                       EQU     RAM_START + 06Dh
                      00267 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00133   A0006E  Rkanal1                 var byte  
  0000006E            00268 _Rkanal1                        EQU     RAM_START + 06Eh
                      00269 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00134   A0006F  Rkanal2                 var byte  
  0000006F            00270 _Rkanal2                        EQU     RAM_START + 06Fh
                      00271 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00135   A00070  Rkanal3                 var byte  
  00000070            00272 _Rkanal3                        EQU     RAM_START + 070h
                      00273 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00136   A00071  Rkanal4                 var byte 
  00000071            00274 _Rkanal4                        EQU     RAM_START + 071h
                      00275 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00192   A00072  RtcCnt                  var byte
  00000072            00276 _RtcCnt                         EQU     RAM_START + 072h
                      00277 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00185   A00073  SatKraj                 var byte
  00000073            00278 _SatKraj                        EQU     RAM_START + 073h
                      00279 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00184   A00074  SatPocetak              var byte
  00000074            00280 _SatPocetak                     EQU     RAM_START + 074h
                      00281 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00144   A00075  Seconds                 var byte
  00000075            00282 _Seconds                        EQU     RAM_START + 075h
                      00283 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00153   A00076  StarostanjeRTC          var byte
  00000076            00284 _StarostanjeRTC                 EQU     RAM_START + 076h
                      00285 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00143   A00077  Temperatura             var byte
  00000077            00286 _Temperatura                    EQU     RAM_START + 077h
                      00287 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00128   A00078  x                       var byte
  00000078            00288 _x                              EQU     RAM_START + 078h
                      00289 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00189   A00079  y                       var byte
  00000079            00290 _y                              EQU     RAM_START + 079h
                      00291 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00149   A0007A  Years                   var byte
  0000007A            00292 _Years                          EQU     RAM_START + 07Ah
                      00293 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00157   A0007B  DutyCycleL1             var long
  0000007B            00294 _DutyCycleL1                    EQU     RAM_START + 07Bh
                      00295 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00158   A0007F  DutyCycleL2             var long
  0000007F            00296 _DutyCycleL2                    EQU     RAM_START + 07Fh
                      00297 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00159   A00083  DutyCycleL3             var long
  00000083            00298 _DutyCycleL3                    EQU     RAM_START + 083h
                      00299 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00160   A00087  DutyCycleL4             var long
  00000087            00300 _DutyCycleL4                    EQU     RAM_START + 087h
                      00301 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00162   A0008B  STKanal1                var long
  0000008B            00302 _STKanal1                       EQU     RAM_START + 08Bh
                      00303 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00163   A0008F  STKanal2                var long
  0000008F            00304 _STKanal2                       EQU     RAM_START + 08Fh
                      00305 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00164   A00093  STKanal3                var long
  00000093            00306 _STKanal3                       EQU     RAM_START + 093h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00307 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00165   A00097  STKanal4                var long
  00000097            00308 _STKanal4                       EQU     RAM_START + 097h
                      00309 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00106   A0009B  displej                 var byte[7]
  0000009B            00310 _displej                        EQU     RAM_START + 09Bh
                      00311 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00108   A000A2  RelejiMemorija          var byte[17] 
  000000A2            00312 _RelejiMemorija                 EQU     RAM_START + 0A2h
                      00313 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00107   A000B3  Memorija                var byte[75]
  000000B3            00314 _Memorija                       EQU     RAM_START + 0B3h
                      00315 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00300   PORTL   VAR     PORTB
  00000F81            00316 _PORTL                          EQU      PORTB
                      00317 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00301   PORTH   VAR     PORTC
  00000F82            00318 _PORTH                          EQU      PORTC
                      00319 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00302   TRISL   VAR     TRISB
  00000F93            00320 _TRISL                          EQU      TRISB
                      00321 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00303   TRISH   VAR     TRISC
  00000F94            00322 _TRISH                          EQU      TRISC
  00000038            00323 _HP_Temp??LOWBYTE               EQU     _HP_Temp
  00000039            00324 _HP_Temp??HIGHBYTE              EQU     _HP_Temp + 001h
                      00325 #define _PS0                    _HP_Flags??0
                      00326 #define _PS1                    _HP_Flags??1
                      00327 #define _PSchanged              _HP_Flags??2
                      00328 #define _PR2changed             _HP_Flags??3
                      00329 #define _TMR2IF                 _PIR1??1
                      00330 #define _TMR2ON                 _T2CON??2
                      00331 #define _T2CKPS1                _T2CON??1
                      00332 #define _T2CKPS0                _T2CON??0
                      00333 #define _BCKLIGHT               _PORTC??3
                      00334 #define _SDA                    _PORTC??0
                      00335 #define _SCL                    _PORTC??1
                      00336 #define _RELEJ1                 _PORTC??4
                      00337 #define _RELEJ2                 _PORTC??5
                      00338 #define _TASTLEVO               _PORTB??1
                      00339 #define _TASTDESNO              _PORTB??4
                      00340 #define _TASTGORE               _PORTB??6
                      00341 #define _TASTDOLE               _PORTB??5
                      00342 #define _TASTOK                 _PORTB??2
                      00343 #define _TASTODRZAVANJE         _PORTB??7
                      00344 #define _NovoStanjeDesno         PB02, 000h
                      00345 #define _NovoStanjeLevo          PB02, 003h
                      00346 #define _NovoStanjeGore          PB02, 002h
                      00347 #define _NovoStanjeDole          PB02, 001h
                      00348 #define _NovoStanjeOk            PB02, 005h
                      00349 #define _NovoStanjeOdrzavanje    PB02, 004h
                      00350 #define _StaroStanjeDesno        PB03, 004h
                      00351 #define _StaroStanjeLevo         PB03, 007h
                      00352 #define _StaroStanjeGore         PB03, 006h
                      00353 #define _StaroStanjeDole         PB03, 005h
                      00354 #define _StaroStanjeOk           PB04, 001h
                      00355 #define _StaroStanjeOdrzavanje   PB04, 000h
                      00356 #define _gore                    PB01, 004h
                      00357 #define _dole                    PB01, 003h
                      00358 #define _levo                    PB01, 005h
                      00359 #define _desno                   PB01, 002h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00360 #define _ok                      PB03, 000h
                      00361 #define _odrzavanje              PB02, 006h
                      00362 #define _Pritisnuto              PB03, 002h
                      00363 #define _Room                    PB03, 003h
                      00364 #define _ModDanNoc               PB01, 007h
                      00365 #define _Prekidac                PB03, 001h
                      00366 #define _VremePrekidaca          PB04, 002h
                      00367 #define _AutomatskoAkvarijum     PB01, 000h
                      00368 #define _AutomatskoSoba          PB01, 001h
                      00369 #define _OdrzavanjeMod           PB02, 007h
                      00370 #define _MaliBit                 PB01, 006h
                      00371 #define _HP_Flags??0            _HP_Flags, 000h
                      00372 #define _HP_Flags??1            _HP_Flags, 001h
                      00373 #define _HP_Flags??2            _HP_Flags, 002h
                      00374 #define _HP_Flags??3            _HP_Flags, 003h
                      00375 #define _PIR1??1                 PIR1, 001h
                      00376 #define _T2CON??2                T2CON, 002h
                      00377 #define _T2CON??1                T2CON, 001h
                      00378 #define _T2CON??0                T2CON, 000h
                      00379 #define _INTCON2??7              INTCON2, 007h
                      00380 #define _PORTC??3                PORTC, 003h
                      00381 #define _PORTC??0                PORTC, 000h
                      00382 #define _PORTC??1                PORTC, 001h
                      00383 #define _PORTC??4                PORTC, 004h
                      00384 #define _PORTC??5                PORTC, 005h
                      00385 #define _PORTB??1                PORTB, 001h
                      00386 #define _PORTB??4                PORTB, 004h
                      00387 #define _PORTB??6                PORTB, 006h
                      00388 #define _PORTB??5                PORTB, 005h
                      00389 #define _PORTB??2                PORTB, 002h
                      00390 #define _PORTB??7                PORTB, 007h
                      00391 #define _PORTC??6                PORTC, 006h
                      00392 #define _PORTB??3                PORTB, 003h
                      00393 #define _PORTB??0                PORTB, 000h
                      00394 #define _PORTC??2                PORTC, 002h
                      00395 #define _Minutes??7             _Minutes, 007h
                      00396 #define _Hours??7               _Hours, 007h
                      00397 #define _Hours??6               _Hours, 006h
                      00398 
                      00399 ; Constants.
  000000A2            00400 _RTC                            EQU     000A2h
  000000A0            00401 _EPROM                          EQU     000A0h
  00000091            00402 _LM75                           EQU     00091h
  0000007E            00403 _Strelica                       EQU     0007Eh
  00000064            00404 _PauzaZaTaster                  EQU     00064h
                      00405 
                      00406 ; EEPROM data.
                      00407 
                      00408 
                      00409         INCLUDE "PROBA.MAC"
                      00001 
                      00582         LIST
                      00410         INCLUDE "C:\PBP3\PBPPI18L.LIB"
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************************************************
                      00002 ;*  PBPPI18L.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer, Darrel Taylor      *
                      00005 ;*              Charles Leo
                      00006 ;*  Notice    : Copyright (c) 2011 microEngineering Labs, Inc.    *
                      00007 ;*              All Rights Reserved                               *
                      00008 ;*  Date      : 06/23/2011                                        *
                      00009 ;*  Version   : 3.0.0                                             *
                      00010 ;*  Notes     : Longs                                             *
                      00011 ;******************************************************************
                      00087   LIST
                      00088 ; Oscillator is 16MHz
                      01493   LIST
000000                01494     ORG RESET_ORG               ; Reset vector at 0
                      01498   LIST
000000 6A00           01499         clrf    FLAGS           ; Clear all flags on reset
                      01503   LIST
000002 EF69 F002      01504         goto    INIT            ; Finish initialization
                      03232   LIST
000006 8A00           03233 I2CREADS bsf    I2CSTOPFLAG     ; Indicate Stop after this byte
000008 AA00           03234         btfss   I2CSTOPFLAG     ; Skip next always
00000A 9A00           03235 I2CREAD bcf     I2CSTOPFLAG     ; Don't Stop
00000C B600           03236         btfsc   I2CREADFLAG     ; Already reading?
00000E D003           03237         bra     i2creadip       ; Yes
000010 8600           03238         bsf     I2CREADFLAG     ; Indicate read
000012 D844           03239         rcall   i2cstart        ; Send Start condition and command
000014 E227           03240         bc      i2cstop         ; No acknowledge
                      03241 
000016 0E08           03242 i2creadip movlw 8               ; 8 bits to a byte
000018 6E17           03243         movwf   R1 + 1          ; Bit counter
00001A D854           03244 i2creadloop rcall i2cgetbit     ; Get a bit
00001C 3616           03245         rlcf    R1, F           ; Put bit away
00001E 2E17           03246         decfsz  R1 + 1, F       ; Do next, if any
000020 D7FC           03247         bra     i2creadloop
000022 AA00           03248         btfss   I2CSTOPFLAG     ; Send stop?
000024 D82E           03249         rcall   i2cdal          ; No, send acknowledge
000026 D85C           03250         rcall   i2cckh          ; Toggle clock in any case
000028 D855           03251         rcall   i2cckl
00002A BA00           03252         btfsc   I2CSTOPFLAG     ; Send stop?
00002C D81B           03253         rcall   i2cstop         ; Yes, send Stop condition
00002E D821           03254         rcall   i2cdah          ; Make sure data ends up as input
000030 5016           03255         movf    R1, W           ; Get result to W
000032 90D8           03256         bcf     STATUS, C       ; Clear carry for OK return
000034 EF66 F002      03257 i2creaddone goto DUNN
                      03323   LIST
000038 8A00           03324 I2CWRITES bsf   I2CSTOPFLAG     ; Indicate Stop after this byte
00003A AA00           03325         btfss   I2CSTOPFLAG     ; Skip next always
00003C 9A00           03326 I2CWRITE bcf    I2CSTOPFLAG     ; Don't Stop
00003E B400           03327         btfsc   I2CFIRSTFLAG    ; Check for first I2C char (command)
000040 D005           03328         bra     i2cwrite2       ; No
000042 0BFE           03329         andlw   0feh            ; Make sure r/w bit clear
000044 6E01           03330         movwf   GOP             ; Save command
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000046 8400           03331         bsf     I2CFIRSTFLAG    ; Indicate not first anymore
000048 90D8           03332         bcf     STATUS, C       ; Clear carry for OK return
00004A D00A           03333         bra     i2cwritedone    ; That's it for now
                      03334 
00004C B800           03335 i2cwrite2 btfsc I2CWRITEFLAG    ; Already writing?
00004E D005           03336         bra     i2cwriteip      ; Yes
000050 6E1E           03337         movwf   R3              ; Save char
000052 8800           03338         bsf     I2CWRITEFLAG    ; Indicate write
000054 D823           03339         rcall   i2cstart        ; Send Start condition and command
000056 E206           03340         bc      i2cstop         ; No acknowledge
000058 501E           03341         movf    R3, W           ; Get char back
00005A D827           03342 i2cwriteip rcall i2cwritec      ; Write character
00005C E203           03343         bc      i2cstop         ; No acknowledge
00005E AA00           03344         btfss   I2CSTOPFLAG     ; Send stop bit?
000060 EF66 F002      03345 i2cwritedone goto DUNN          ; No
                      03346 
000064 D80E           03347 i2cstop rcall   i2cdal          ; 12 Start data low
000066 D83C           03348         rcall   i2cckh          ; 15 Set clock high (input)
000068 9400           03349         bcf     I2CFIRSTFLAG    ; 1 Reset first char flag
00006A 9800           03350         bcf     I2CWRITEFLAG    ; 1 No longer writing
00006C 9600           03351         bcf     I2CREADFLAG     ; 1 No longer reading either
00006E D801           03352         rcall   i2cdah          ; Set data high (input)
000070 D7F7           03353         bra     i2cwritedone
                      03354 
000072 C010 FFEA      03355 i2cdah  movff   RS1, FSR0H      ; 2 (11) Get pointer to data pin
000076 3C0E           03356         incfsz  RR1, W          ; 1 Point to TRIS (never skip, doesn't change flags)
000078 6EE9           03357         movwf   FSR0L           ; 1
00007A 88E9           03358         bsf     FSR0L, 4        ; 1
00007C 500C           03359         movf    RM1, W          ; 1
00007E 12EC           03360 i2chigh iorwf   PREINC0, F      ; 1 Set high (input)
000080 D008           03361         bra     i2chl           ; 2
                      03362 
000082 C010 FFEA      03363 i2cdal  movff   RS1, FSR0H      ; 2 (10) Get pointer to data pin
000086 C00E FFE9      03364         movff   RR1, FSR0L      ; 2
00008A 1C0C           03365         comf    RM1, W          ; 1
00008C 16EE           03366 i2clow  andwf   POSTINC0, F     ; 1 Set low, start pointing to TRIS
00008E 88E9           03367         bsf     FSR0L, 4        ; 1
000090 16EC           03368         andwf   PREINC0, F      ; 1 Set to output
000092                03369 i2chl
                      03370       ifndef I2C_SLOW
                      03371         return                  ; 2
                      03372       else
                      03373           if (OSC > 12)
000092 0E04           03374         movlw   (OSC) / 4       ; 1 Pause ~5us to slow to 100kHz without wrecking C
000094 6E12           03375         movwf   R0              ; 1
000096 2E12           03376 i2cslowloop decfsz R0, F        ; 1
000098 D7FE           03377         bra     i2cslowloop     ; 2
00009A 0012           03378         return                  ; 2
                      03379           else
                      03380         goto    DUNN            ; 6
                      03381           endif
                      03382       endif
                      03383 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00009C DFEA           03384 i2cstart rcall  i2cdah          ; 13 Make sure bus is idle
00009E D820           03385         rcall   i2cckh          ; 15
0000A0 DFF0           03386         rcall   i2cdal          ; 12 Send Start condition
0000A2 D818           03387         rcall   i2cckl          ; 14
0000A4 5001           03388         movf    GOP, W          ; 1 Get command
0000A6 B600           03389         btfsc   I2CREADFLAG     ; 1 / 2 Read?
0000A8 0901           03390         iorlw   1               ; 1 / 0 Yes, put in read bit
                      03391 
0000AA 6E16           03392 i2cwritec movwf R1              ; 1 Save data
0000AC 0E08           03393         movlw   8               ; 1 8 bits to send
0000AE 6E17           03394         movwf   R1 + 1          ; 1 Bit counter
0000B0 3616           03395 i2cwriteloop rlcf R1, F         ; 1 Get a bit to send
0000B2 B0D8           03396         btfsc   STATUS, C       ; 1 / 2 Skip if no bit
0000B4 DFDE           03397         rcall   i2cdah          ; 13 / 0 Set bit high (input)
0000B6 A0D8           03398         btfss   STATUS, C       ; 1 / 2 Skip if bit
0000B8 DFE4           03399         rcall   i2cdal          ; 12 / 0 Set bit low
0000BA D812           03400         rcall   i2cckh          ; 15 Set clock high (input)
0000BC D80B           03401         rcall   i2cckl          ; 14 Set clock low
0000BE 2E17           03402         decfsz  R1 + 1, F       ; 1 / 2 Do next bit, if any
0000C0 D7F7           03403         bra     i2cwriteloop    ; 2
0000C2 DFD7           03404         rcall   i2cdah          ; 13 Make sure data high (input)
                      03405 ;       bra     i2cgetbit       ; Get acknowledge (fall through)
                      03406 
0000C4 D80D           03407 i2cgetbit rcall i2cckh          ; 15 (34) Set clock high
0000C6 C010 FFEA      03408         movff   RS1, FSR0H      ; 2 Point to data pin
0000CA C00E FFE9      03409         movff   RR1, FSR0L      ; 2
0000CE 500C           03410         movf    RM1, W          ; 1
0000D0 14EF           03411         andwf   INDF0, W        ; 1 Isolate pin
0000D2 0FFF           03412         addlw   -1              ; 1 Move bit to carry
                      03413 ;       bra     i2cckl          ; Set clock low (fall through)
                      03414 
0000D4 C011 FFEA      03415 i2cckl  movff   RS2, FSR0H      ; 2 (12) Get pointer to clock pin
0000D8 C00F FFE9      03416         movff   RR2, FSR0L      ; 2
0000DC 1C0D           03417         comf    RM2, W          ; 1
0000DE D7D6           03418         bra     i2clow          ; 7 Finish it up
                      03419 
                      03420       ifndef I2C_SCLOUT
                      03421 i2cckh  movff   RS2, FSR0H      ; 2 (13) Get pointer to clock pin
                      03422 i2chold incfsz  RR2, W          ; 1 Point to TRIS (never skip)
                      03423         movwf   FSR0L           ; 1
                      03424         bsf     FSR0L, 4        ; 1
                      03425         movf    RM2, W          ; 1
                      03426           ifndef I2C_HOLD
                      03427         bra     i2chigh         ; 7 Finish it up
                      03428           else
                      03429         iorwf   PREINC0, F      ; 1 Set high (input)
                      03430         movff   RR2, FSR0L      ; 2 Point back to port
                      03431         andwf   INDF0, W        ; 1 Isolate pin
                      03432         bz      i2chold         ; 1 / 2 Check for still low
                      03433         bra     i2chl           ; 4
                      03434           endif
                      03435       else
0000E0 C011 FFEA      03436 i2cckh  movff   RS2, FSR0H      ; 2 (13) Get pointer to clock pin
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000E4 C00F FFE9      03437         movff   RR2, FSR0L      ; 2
0000E8 500D           03438         movf    RM2, W          ; 1
0000EA 12EE           03439         iorwf   POSTINC0, F     ; 1 Set high, start pointing to TRIS
0000EC 88E9           03440         bsf     FSR0L, 4        ; 1
0000EE 1C0D           03441         comf    RM2, W          ; 1 Get inverted mask
0000F0 16EC           03442         andwf   PREINC0, F      ; 1 Set to output
0000F2 D7CF           03443         bra     i2chl           ; 4
                      03444       endif
                      03622   LIST
0000F4 50E9           03623 LCDOUTJ movf    FSR0L, W        ; Jumpman entry
                      03629   LIST
0000F6 6E1F           03630 LCDOUT  movwf   R3 + 1          ; Save char
                      03631 
0000F8 9880           03632         bcf     LCD_EREG, LCD_EBIT      ; Set E low
0000FA 9A80           03633         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
0000FC 9A80           03634         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      03635 
0000FE 9892           03636         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
000100 9A92           03637         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
000102 9A92           03638         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      03639     if ((LCD_BITS) == 8)
                      03640         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      03641     else
                      03642       if ((LCD_DBIT) == 0)
000104 0EF0           03643         movlw   0f0h
                      03644       else
                      03645         movlw   0fh
                      03646       endif
000106 1692           03647         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
000108 501F           03648         movf    R3 + 1, W       ; Get back char
                      03649     endif
                      03650 
00010A B200           03651         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
00010C D021           03652         bra     lcdout1         ; Yes
                      03653 
00010E 0E3A           03654         movlw   high 15100      ; Wait at least 15ms
000110 6E13           03655         movwf   R0 + 1
000112 0EFC           03656         movlw   low 15100
000114 EC40 F001      03657         call    PAUSEUS
                      03658 
000118 0E33           03659         movlw   33h             ; Init lcd
00011A 6E1E           03660         movwf   R3              ; Save char
00011C D830           03661         rcall   lcdloop         ; Send init
                      03662 
00011E 0E10           03663         movlw   high 4200       ; Wait at least 4.1ms
000120 6E13           03664         movwf   R0 + 1
000122 0E68           03665         movlw   low 4200
000124 EC40 F001      03666         call    PAUSEUS
                      03667 
000128 D82A           03668         rcall   lcdloop         ; Send init (33) again
                      03669 
00012A 0E64           03670         movlw   100             ; Wait at least 100us
00012C EC3F F001      03671         call    PAUSEUSB
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03672 
000130 D826           03673         rcall   lcdloop         ; Send init (33) more time
                      03674 
                      03675     if ((LCD_BITS) == 8)
                      03676       if ((LCD_LINES) == 1)
                      03677         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      03678       else
                      03679         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      03680       endif
                      03681     else
000132 0E22           03682         movlw   22h             ; Send init to 4-bit mode
000134 6E1E           03683         movwf   R3              ; Save character
000136 D823           03684         rcall   lcdloop         ; Set interface to 4-bit mode
                      03685       if ((LCD_LINES) == 1)
                      03686         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      03687       else
000138 0E28           03688         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      03689       endif
                      03690     endif
00013A D809           03691         rcall   lcdoutcom       ; Send function set
                      03692 
00013C 0E0C           03693         movlw   0ch             ; Display on, no cursor, no blink
00013E D807           03694         rcall   lcdoutcom
                      03695 
000140 0E01           03696         movlw   01h             ; Display clear
000142 D805           03697         rcall   lcdoutcom
                      03698 
000144 0E06           03699         movlw   06h             ; Lcd entry mode set, increment, no shift
000146 D803           03700         rcall   lcdoutcom
                      03701 
000148 8200           03702         bsf     LCDINITFLAG     ; Set to initialized
                      03703 
00014A 501F           03704         movf    R3 + 1, W       ; Get saved char back (again)
00014C D001           03705         bra     lcdout1
                      03706 
00014E 8000           03707 lcdoutcom bsf   LCDCDFLAG       ; Set for command
                      03708 
000150 6E1E           03709 lcdout1 movwf   R3              ; Save char
000152 A000           03710         btfss   LCDCDFLAG       ; Command this time?
000154 D00B           03711         bra     lcdchkcd        ; No
                      03712 
000156 9A80           03713         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
000158 0803           03714         sublw   3               ; Is it a slow command (clear screen or home)?
00015A E30F           03715         bnc     lcdsend         ; Short delay
                      03716 
00015C D80E           03717         rcall   lcdsend         ; Long delay (includes short delay)
00015E 0E07           03718         movlw   high LCD_COMMANDUS      ; Wait for command to complete
000160 6E13           03719         movwf   R0 + 1
000162 0ED0           03720         movlw   low LCD_COMMANDUS
000164 EC40 F001      03721         call    PAUSEUS
000168 80D8           03722         bsf     STATUS, C       ; Set no timeout for Serout2mod
00016A 0012           03723         return
                      03724 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00016C 8000           03725 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
00016E 08FE           03726         sublw   0feh            ; Command next time? (char still in W)
000170 B4D8           03727         btfsc   STATUS, Z
000172 EF66 F002      03728         goto    DUNN            ; Yes - nothing to do this time (C set for no timeout for Serout2mod)
                      03729 
000176 8A80           03730         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
000178 D000           03731         bra     $ + 2  ;
                      03732 
00017A                03733 lcdsend
                      03734     if ((LCD_BITS) == 8)
                      03735 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03736         movf    R3, W           ; Get char back
                      03737         movwf   LCD_DREG        ; Write char to the port
                      03738       if (OSC > 16)
                      03739         nop                     ; Minimum 1us enable time
                      03740       endif
                      03741       if (OSC > 20)
                      03742         nop
                      03743       endif
                      03744       if (OSC > 24)
                      03745         bra     $ + 2
                      03746       endif
                      03747       if (OSC > 32)
                      03748         bra     $ + 2
                      03749       endif
                      03750       if (OSC > 40)
                      03751         bra     $ + 2
                      03752       endif
                      03753       if (OSC > 48)
                      03754         bra     $ + 2
                      03755         bra     $ + 2
                      03756       endif
                      03757         bcf     LCDCDFLAG       ; Indicate data next time
                      03758         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03759     else
                      03760 
                      03761       if ((LCD_DBIT) == 0)
00017A 3A1E           03762         swapf   R3, F           ; Swap top and bottom nibbles
                      03763       endif
                      03764 
00017C A000           03765         btfss   LCDCDFLAG       ; First time through only
00017E 9000           03766 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03767 
000180 8880           03768         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03769 
                      03770       if ((LCD_DBIT) == 0)
000182 0EF0           03771         movlw   0f0h            ; Clear lcd data port
                      03772       else
                      03773         movlw   0fh             ; Clear lcd data port
                      03774       endif
000184 1680           03775         andwf   LCD_DREG, F
                      03776 
000186 501E           03777         movf    R3, W           ; Isolate proper nibble of char
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03778       if ((LCD_DBIT) == 0)
000188 0B0F           03779         andlw   0fh
                      03780       else
                      03781         andlw   0f0h
                      03782       endif
00018A 1280           03783         iorwf   LCD_DREG, F     ; Write char to port
                      03784 
                      03785       if (OSC > 24)
                      03786         bra     $ + 2           ; Minimum 1us enable time
                      03787       endif
                      03788       if (OSC > 32)
                      03789         bra     $ + 2
                      03790       endif
                      03791       if (OSC > 40)
                      03792         bra     $ + 2
                      03793       endif
                      03794       if (OSC > 48)
                      03795         bra     $ + 2
                      03796         bra     $ + 2
                      03797       endif
                      03798 
00018C 9880           03799         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
00018E 3A1E           03800         swapf   R3, F           ; Get to other nibble
                      03801 
                      03802       if (OSC > 24)
                      03803         bra     $ + 2           ; Minimum 1us not enabled time
                      03804       endif
                      03805       if (OSC > 32)
                      03806         bra     $ + 2
                      03807       endif
                      03808       if (OSC > 40)
                      03809         bra     $ + 2
                      03810       endif
                      03811       if (OSC > 48)
                      03812         bra     $ + 2
                      03813         bra     $ + 2
                      03814       endif
                      03815 
000190 B000           03816         btfsc   LCDCDFLAG       ; Need to send 4 more?
000192 D7F5           03817         bra     lcdloop         ; Send lower 4 to lcd
                      03818     endif
                      03819 
000194 0E32           03820         movlw   LCD_DATAUS      ; Wait for data operation to complete
000196 EC3F F001      03821         call    PAUSEUSB
00019A 80D8           03822         bsf     STATUS, C       ; Set no timeout for Serout2mod
00019C 0012           03823         return
                      05841   LIST
00019E 9E01           05842 SEROUT2DEC bcf  GOP, 7          ; Blanking off
0001A0 5003           05843         movf    R4 + 1, W       ; If 0 digits called for then blanking on
0001A2 B4D8           05844         btfsc   STATUS, Z
0001A4 8E01           05845         bsf     GOP, 7          ; Yes, blanking on
0001A6 0E0A           05846         movlw   10              ; 10 digits max to do
0001A8 6E02           05847         movwf   R4
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001AA 0E3B           05848         movlw   1000000000 >> 24        ; Find 1,000,000,000s
0001AC 6E19           05849         movwf   R1 + 3
0001AE 0E9A           05850         movlw   upper 1000000000
0001B0 6E18           05851         movwf   R1 + 2
0001B2 0ECA           05852         movlw   high 1000000000
0001B4 6E17           05853         movwf   R1 + 1
0001B6 0E00           05854         movlw   low 1000000000
0001B8 D835           05855         rcall   serout2ddig     ; Do the work
                      05856       ifdef SEROUT2TO_USED
                      05857         btfss   STATUS, C       ; Timed out?
                      05858         return                  ; Yes
                      05859       endif
0001BA 0E05           05860         movlw   100000000 >> 24 ; Find 100,000,000s
0001BC 6E19           05861         movwf   R1 + 3
0001BE 0EF5           05862         movlw   upper 100000000
0001C0 6E18           05863         movwf   R1 + 2
0001C2 0EE1           05864         movlw   high 100000000
0001C4 6E17           05865         movwf   R1 + 1
0001C6 0E00           05866         movlw   low 100000000
0001C8 D82D           05867         rcall   serout2ddig     ; Do the work
                      05868       ifdef SEROUT2TO_USED
                      05869         btfss   STATUS, C       ; Timed out?
                      05870         return                  ; Yes
                      05871       endif
0001CA 6A19           05872         clrf    R1 + 3
0001CC 0E98           05873         movlw   upper 10000000  ; Find 10,000,000s
0001CE 6E18           05874         movwf   R1 + 2
0001D0 0E96           05875         movlw   high 10000000
0001D2 6E17           05876         movwf   R1 + 1
0001D4 0E80           05877         movlw   low 10000000
0001D6 D826           05878         rcall   serout2ddig     ; Do the work
                      05879       ifdef SEROUT2TO_USED
                      05880         btfss   STATUS, C       ; Timed out?
                      05881         return                  ; Yes
                      05882       endif
0001D8 6A19           05883         clrf    R1 + 3
0001DA 0E0F           05884         movlw   upper 1000000   ; Find 1,000,000s
0001DC 6E18           05885         movwf   R1 + 2
0001DE 0E42           05886         movlw   high 1000000
0001E0 6E17           05887         movwf   R1 + 1
0001E2 0E40           05888         movlw   low 1000000
0001E4 D81F           05889         rcall   serout2ddig     ; Do the work
                      05890       ifdef SEROUT2TO_USED
                      05891         btfss   STATUS, C       ; Timed out?
                      05892         return          ; Yes
                      05893       endif
0001E6 6A19           05894         clrf    R1 + 3
0001E8 0E01           05895         movlw   upper 100000    ; Find 100,000s
0001EA 6E18           05896         movwf   R1 + 2
0001EC 0E86           05897         movlw   high 100000
0001EE 6E17           05898         movwf   R1 + 1
0001F0 0EA0           05899         movlw   low 100000
0001F2 D818           05900         rcall   serout2ddig     ; Do the work
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05901       ifdef SEROUT2TO_USED
                      05902         btfss   STATUS, C       ; Timed out?
                      05903         return          ; Yes
                      05904       endif
0001F4 6A19           05905         clrf    R1 + 3
0001F6 6A18           05906         clrf    R1 + 2
0001F8 0E27           05907         movlw   high 10000      ; Find 10,000s
0001FA 6E17           05908         movwf   R1 + 1
0001FC 0E10           05909         movlw   low 10000
0001FE D812           05910         rcall   serout2ddig     ; Do the work
                      05911       ifdef SEROUT2TO_USED
                      05912         btfss   STATUS, C       ; Timed out?
                      05913         return          ; Yes
                      05914       endif
000200 6A19           05915         clrf    R1 + 3
000202 6A18           05916         clrf    R1 + 2
000204 0E03           05917         movlw   high 1000       ; Find 1,000s
000206 6E17           05918         movwf   R1 + 1
000208 0EE8           05919         movlw   low 1000
00020A D80C           05920         rcall   serout2ddig     ; Do the work
                      05921       ifdef SEROUT2TO_USED
                      05922         btfss   STATUS, C       ; Timed out?
                      05923         return                  ; Yes
                      05924       endif
00020C 6A19           05925         clrf    R1 + 3
00020E 6A18           05926         clrf    R1 + 2
000210 6A17           05927         clrf    R1 + 1          ; Find 100s
000212 0E64           05928         movlw   100
000214 D807           05929         rcall   serout2ddig     ; Do the work
                      05930       ifdef SEROUT2TO_USED
                      05931         btfss   STATUS, C       ; Timed out?
                      05932         return                  ; Yes
                      05933       endif
000216 6A19           05934         clrf    R1 + 3
000218 6A18           05935         clrf    R1 + 2
00021A 6A17           05936         clrf    R1 + 1          ; Find 10s
00021C 0E0A           05937         movlw   10
00021E D802           05938         rcall   serout2ddig     ; Do the work
                      05939       ifdef SEROUT2TO_USED
                      05940         btfss   STATUS, C       ; Timed out?
                      05941         return                  ; Yes
                      05942       endif
000220 501A           05943         movf    R2, W           ; Get the 1s
000222 D00C           05944         bra     SEROUT2SEND     ; Send the 1s and exit
                      05945 
000224 6E16           05946 serout2ddig movwf R1            ; Save last piece
000226 501D           05947         movf    R2 + 3, W       ; Move remainder to dividend
000228 6E15           05948         movwf   R0 + 3
00022A 501C           05949         movf    R2 + 2, W
00022C 6E14           05950         movwf   R0 + 2
00022E 501B           05951         movf    R2 + 1, W
000230 6E13           05952         movwf   R0 + 1
000232 501A           05953         movf    R2, W
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000234 6E12           05954         movwf   R0
000236 EC9A F001      05955         call    DIV             ; Do the math
00023A 5012           05956         movf    R0, W           ; Get the result
                      05957 ;       bra     SEROUT2SEND     ; Fall through
                      05964   LIST
00023C 6E12           05965 SEROUT2SEND movwf R0            ; Save char for a moment
00023E 4E02           05966         dcfsnz  R4, F           ; Bump down count while we're here
000240 9E01           05967         bcf     GOP, 7
000242 5003           05968         movf    R4 + 1, W       ; Get number of digits to send
000244 E003           05969         bz      serout2send1    ; If zero digits skip count compare
000246 5C02           05970         subwf   R4, W           ; Send if within count
000248 B0D8           05971         btfsc   STATUS, C
00024A 0012           05972         return                  ; Carry set for no timeout
00024C 5012           05973 serout2send1 movf R0, W         ; Get char back
                      05974       ifdef SEROUT2TO_USED
                      05975         bsf     STATUS, C       ; Set carry for no timeout in case of blanking
                      05976       endif
00024E A4D8           05977         btfss   STATUS, Z       ; If char zero, goto blank check
000250 9E01           05978         bcf     GOP, 7          ; Not zero so clear blank
000252 BE01           05979         btfsc   GOP, 7          ; If blanking on, don't send
000254 0012           05980         return
000256 0F30           05981         addlw   '0'             ; Add ASCII offset
000258 EF60 F002      05982         goto    JUMPMAN         ; Send it
                      07088   LIST
00025C 6A17           07089 PAUSEB  clrf    R1 + 1
00025E 6A18           07090 PAUSEW  clrf    R1 + 2
000260 6A19           07091         clrf    R1 + 3
000262 6E16           07092 PAUSE   movwf   R1
000264 6AE8           07093 pauseloop clrf  WREG            ; 1 (10) Clear W for subtracts
000266 0616           07094         decf    R1, F           ; 1
000268 5A17           07095         subwfb  R1 + 1, F       ; 1
00026A 5A18           07096         subwfb  R1 + 2, F       ; 1
00026C 5A19           07097         subwfb  R1 + 3, F       ; 1
00026E A0D8           07098         btfss   STATUS, C       ; 2
000270 EF66 F002      07099         goto    DUNN
000274 0E03           07100         movlw   (PAUSE_DELAY) >> 8      ; 1
000276 6E13           07101         movwf   R0 + 1          ; 1
000278 0EE5           07102         movlw   low (PAUSE_DELAY)       ; 1
00027A D802           07103         rcall   PAUSEUS         ; -2 (PAUSEUS gives you 2 less than you ask for)
00027C D7F3           07104         bra     pauseloop       ; 2
                      07272   LIST
00027E 6A13           07273 PAUSEUSB clrf   R0 + 1          ; 1
000280 0FFB           07274 PAUSEUS addlw   -5              ; 1 Subtract overhead
000282 6E12           07275         movwf   R0              ; 1
000284 D000           07276         bra     $ + 2           ; 2
000286 6AE8           07277         clrf    WREG            ; 1
000288 D001           07278         bra     pauseush        ; 2
00028A 0612           07279 pauseusloop decf R0, F          ; 1
00028C 5A13           07280 pauseush subwfb R0 + 1, F       ; 1
00028E E2FD           07281         bc      pauseusloop     ; 1 / 2
                      07282         CLRWDT?NOP              ; 1
                          M     ifndef NO_CLRWDT
                          M         clrwdt
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
000290 0000               M         nop
                          M     endif
000292 0012           07283         return                  ; 2 + 3 (call + setup)
                      08002   LIST
000294 90D8           08003 shiftlloop bcf  STATUS, C       ; Shift in 0 bits
000296 3612           08004         rlcf    R0, F           ; Shift left once
000298 3613           08005         rlcf    R0 + 1, F
00029A 3614           08006         rlcf    R0 + 2, F
00029C 3615           08007         rlcf    R0 + 3, F
00029E 0FFF           08008 SHIFTL  addlw   -1
0002A0 E2F9           08009         bc      shiftlloop      ; Done?
0002A2 5012           08010         movf    R0, W           ; Move low part of result to W
0002A4 EF66 F002      08011         goto    DUNN
                      08027   LIST
0002A8 90D8           08028 shiftrloop bcf  STATUS, C       ; Shift in 0 bits
0002AA 3215           08029         rrcf    R0 + 3, F       ; Shift right once
0002AC 3214           08030         rrcf    R0 + 2, F
0002AE 3213           08031         rrcf    R0 + 1, F
0002B0 3212           08032         rrcf    R0, F
0002B2 0FFF           08033 SHIFTR  addlw   -1
0002B4 E2F9           08034         bc      shiftrloop      ; Done?
0002B6 5012           08035         movf    R0, W           ; Move low part of result to W
0002B8 EF66 F002      08036         goto    DUNN
                      08169   LIST
0002BC 6E16           08170 CMPEQW  movwf   R1
0002BE 0E02           08171         movlw   2               ; Mask for =
0002C0 D009           08172         bra     CMPW
                      08280   LIST
0002C2 6E16           08281 CMPLEW  movwf   R1
0002C4 0E06           08282         movlw   6               ; Mask for < =
0002C6 D006           08283         bra     CMPW
                      08317   LIST
0002C8 6E16           08318 CMPLTW  movwf   R1
0002CA 0E04           08319         movlw   4               ; Mask for <
0002CC D003           08320         bra     CMPW
                      08363   LIST
0002CE 6E16           08364 CMPNE   movwf   R1
0002D0 0E05           08365         movlw   5               ; Mask for < >
0002D2 D002           08366         bra     CMP
                      08390   LIST
0002D4 6E02           08391 CMPW    movwf   R4              ; Save compare state
0002D6 D00A           08392         bra     cmpw1           ; Compare unsigned words
                      08398   LIST
0002D8 6E02           08399 CMP     movwf   R4              ; Save compare state
0002DA 5019           08400         movf    R1 + 3, W       ; Compare signed longs
0002DC 1815           08401         xorwf   R0 + 3, W       ; Check signs
0002DE E615           08402         bn      cmpdiff         ; Different signs
0002E0 5019           08403         movf    R1 + 3, W       ; Flags = MSB(R0) - MSB(R1)
0002E2 5C15           08404         subwf   R0 + 3, W
0002E4 E108           08405         bnz     cmpnoteq        ; If unequal then done
0002E6 5018           08406         movf    R1 + 2, W
0002E8 5C14           08407         subwf   R0 + 2, W
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002EA E105           08408         bnz     cmpnoteq        ; If unequal then done
0002EC 5017           08409 cmpw1   movf    R1 + 1, W
0002EE 5C13           08410         subwf   R0 + 1, W
0002F0 E102           08411         bnz     cmpnoteq        ; If unequal then done
0002F2 5016           08412 cmpb1   movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
0002F4 5C12           08413         subwf   R0, W
0002F6 0E04           08414 cmpnoteq movlw  4               ; W = 4 if R0 < R1
0002F8 B0D8           08415         btfsc   STATUS, C
0002FA 0E01           08416         movlw   1               ; W = 1 if R0 > R1
0002FC B4D8           08417         btfsc   STATUS, Z
0002FE 0E02           08418         movlw   2               ; W = 2 if R0 == R1
000300 1402           08419         andwf   R4, W           ; Mask for compare state
000302 A4D8           08420         btfss   STATUS, Z
000304 0EFF           08421         movlw   -1
000306 EF66 F002      08422         goto    DUNN
                      08423 
00030A 5015           08424 cmpdiff movf    R0 + 3, W       ; Different signs so flip compare to accomodate
00030C 5C19           08425         subwf   R1 + 3, W       ; Flags = MSB(R1) - MSB(R0)
00030E D7F3           08426         bra     cmpnoteq        ; Will always be not equal
                      08598   LIST
000310 6A21           08599 DIVS    clrf    R3 + 3          ; Clear sign difference indicator
000312 AE15           08600         btfss   R0 + 3, 7       ; Check for R0 negative
000314 D006           08601         bra     divchkr1        ; Not negative
000316 7E21           08602         btg     R3 + 3, 7       ; Flip sign indicator
000318 6AE8           08603         clrf    WREG            ; Clear W for subtracts
00031A 6C12           08604         negf    R0              ; Flip value to plus
00031C 5613           08605         subfwb  R0 + 1, F
00031E 5614           08606         subfwb  R0 + 2, F
000320 5615           08607         subfwb  R0 + 3, F
000322 AE19           08608 divchkr1 btfss  R1 + 3, 7       ; Check for R1 negative
000324 D008           08609         bra     divdo           ; Not negative
000326 7E21           08610         btg     R3 + 3, 7       ; Flip sign indicator
000328 6AE8           08611         clrf    WREG            ; Clear W for subtracts
00032A 6C16           08612         negf    R1              ; Flip value to plus
00032C 5617           08613         subfwb  R1 + 1, F
00032E 5618           08614         subfwb  R1 + 2, F
000330 5619           08615         subfwb  R1 + 3, F
000332 D001           08616         bra     divdo           ; Skip unsigned entry
                      08622   LIST
000334                08623 DIV
                      08624       ifdef DIVS_USED
000334 6A21           08625         clrf    R3 + 3          ; Clear sign difference indicator       
                      08626       endif
000336 6A1A           08627 divdo   clrf    R2              ; Do the divide
000338 6A1B           08628         clrf    R2 + 1
00033A 6A1C           08629         clrf    R2 + 2
00033C 6A1D           08630         clrf    R2 + 3
                      08631 
00033E 0E20           08632         movlw   32
000340 6E1E           08633         movwf   R3
                      08634 
000342 3415           08635 divloop rlcf    R0 + 3, W
000344 361A           08636         rlcf    R2, F
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000346 361B           08637         rlcf    R2 + 1, F
000348 361C           08638         rlcf    R2 + 2, F
00034A 361D           08639         rlcf    R2 + 3, F
00034C 5016           08640         movf    R1, W
00034E 5E1A           08641         subwf   R2, F
000350 5017           08642         movf    R1 + 1, W
000352 5A1B           08643         subwfb  R2 + 1, F
000354 5018           08644         movf    R1 + 2, W
000356 5A1C           08645         subwfb  R2 + 2, F
000358 5019           08646         movf    R1 + 3, W
00035A 5A1D           08647         subwfb  R2 + 3, F
                      08648 
00035C E209           08649         bc      divok
00035E 5016           08650         movf    R1, W
000360 261A           08651         addwf   R2, F
000362 5017           08652         movf    R1 + 1, W
000364 221B           08653         addwfc  R2 + 1, F
000366 5018           08654         movf    R1 + 2, W
000368 221C           08655         addwfc  R2 + 2, F
00036A 5019           08656         movf    R1 + 3, W
00036C 221D           08657         addwfc  R2 + 3, F
                      08658 
00036E 90D8           08659         bcf     STATUS, C
                      08660 
000370 3612           08661 divok   rlcf    R0, F
000372 3613           08662         rlcf    R0 + 1, F
000374 3614           08663         rlcf    R0 + 2, F
000376 3615           08664         rlcf    R0 + 3, F
                      08665 
000378 2E1E           08666         decfsz  R3, F
00037A D7E3           08667         bra     divloop
                      08668 
                      08669       ifdef DIVS_USED
00037C AE21           08670         btfss   R3 + 3, 7       ; Should result be negative?
00037E D009           08671         bra     divdone         ; Not negative
000380 6AE8           08672         clrf    WREG            ; Clear W for subtracts
000382 6C12           08673         negf    R0              ; Flip quotient to minus
000384 5613           08674         subfwb  R0 + 1, F
000386 5614           08675         subfwb  R0 + 2, F
000388 5615           08676         subfwb  R0 + 3, F
00038A 6C1A           08677         negf    R2              ; Flip remainder to minus
00038C 561B           08678         subfwb  R2 + 1, F
00038E 561C           08679         subfwb  R2 + 2, F
000390 561D           08680         subfwb  R2 + 3, F
000392                08681 divdone
                      08682     endif
                      08683 
000392 5012           08684         movf    R0, W           ; Get low byte to W
000394 EF66 F002      08685         goto    DUNN
                      08701   LIST
000398 5016           08702 MUL     movf    R1, W
00039A 021E           08703         mulwf   R3              ; AARGB3 * BARGB3 = PRODHL
00039C CFF3 F01A      08704         movff   PRODL, R2
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003A0 CFF4 F01B      08705         movff   PRODH, R2 + 1
                      08706 
0003A4 5017           08707         movf    R1 + 1, W
0003A6 021F           08708         mulwf   R3 + 1          ; AARGB2 * BARGB2 = PRODHL
0003A8 CFF3 F01C      08709         movff   PRODL, R2 + 2
0003AC CFF4 F01D      08710         movff   PRODH, R2 + 3
                      08711 
                      08712 ;       movf    R1 + 1, W       ; W still has R1 + 1 from above
0003B0 021E           08713         mulwf   R3              ; AARGB2 * BARGB3 = PRODHL
0003B2 50F3           08714         movf    PRODL, W        ; Add cross products
0003B4 261B           08715         addwf   R2 + 1, F
0003B6 50F4           08716         movf    PRODH, W
0003B8 221C           08717         addwfc  R2 + 2, F
0003BA 6AE8           08718         clrf    WREG
0003BC 221D           08719         addwfc  R2 + 3, F
                      08720 
0003BE 5016           08721         movf    R1, W
0003C0 021F           08722         mulwf   R3 + 1          ; AARGB3 * BARGB2 = PRODHL
0003C2 50F3           08723         movf    PRODL, W        ; Add cross products
0003C4 261B           08724         addwf   R2 + 1, F
0003C6 50F4           08725         movf    PRODH, W
0003C8 221C           08726         addwfc  R2 + 2, F
0003CA 6AE8           08727         clrf    WREG
0003CC 221D           08728         addwfc  R2 + 3, F
                      08729 
0003CE 5018           08730         movf    R1 + 2, W
0003D0 021E           08731         mulwf   R3              ; AARGB1 * BARGB3 = PRODHL
0003D2 50F3           08732         movf    PRODL, W        ; Add cross products
0003D4 261C           08733         addwf   R2 + 2, F
0003D6 50F4           08734         movf    PRODH, W
0003D8 221D           08735         addwfc  R2 + 3, F
0003DA 5018           08736         movf    R1 + 2, W
0003DC 021F           08737         mulwf   R3 + 1          ; AARGB1 * BARGB2 = PRODHL
0003DE 6AE8           08738         clrf    WREG            ; Add cross products
0003E0 6A12           08739         clrf    R0
0003E2 2212           08740         addwfc  R0, F
0003E4 50F3           08741         movf    PRODL, W
0003E6 261D           08742         addwf   R2 + 3, F
0003E8 50F4           08743         movf    PRODH, W
0003EA 2212           08744         addwfc  R0, F
                      08745 
0003EC 5016           08746         movf    R1, W
0003EE 0220           08747         mulwf   R3 + 2          ; AARGB3 * BARGB1 = PRODHL
0003F0 50F3           08748         movf    PRODL, W        ; Add cross products
0003F2 261C           08749         addwf   R2 + 2, F
0003F4 50F4           08750         movf    PRODH, W
0003F6 221D           08751         addwfc  R2 + 3, F
0003F8 6AE8           08752         clrf    WREG
0003FA 6A13           08753         clrf    R0 + 1
0003FC 2212           08754         addwfc  R0, F
0003FE 2213           08755         addwfc  R0 + 1, F
                      08756 
000400 5017           08757         movf    R1 + 1, W
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000402 0220           08758         mulwf   R3 + 2          ; AARGB2 * BARGB1 = PRODHL
000404 50F3           08759         movf    PRODL, W        ; Add cross products
000406 261D           08760         addwf   R2 + 3, F
000408 50F4           08761         movf    PRODH, W
00040A 2212           08762         addwfc  R0, F
00040C 6AE8           08763         clrf    WREG
00040E 2213           08764         addwfc  R0 + 1, F
                      08765 
000410 5018           08766         movf    R1 + 2, W
000412 0220           08767         mulwf   R3 + 2          ; AARGB1 * BARGB1 = PRODHL
000414 50F3           08768         movf    PRODL, W        ; Add cross products
000416 2612           08769         addwf   R0, F
000418 50F4           08770         movf    PRODH, W
00041A 2213           08771         addwfc  R0 + 1, F
                      08772 
00041C 5019           08773         movf    R1 + 3, W
00041E 021F           08774         mulwf   R3 + 1          ; AARGB0 * BARGB2 = PRODHL
000420 50F3           08775         movf    PRODL, W        ; Add cross products
000422 2612           08776         addwf   R0, F
000424 50F4           08777         movf    PRODH, W
000426 2213           08778         addwfc  R0 + 1, F
000428 5019           08779         movf    R1 + 3, W
00042A 0220           08780         mulwf   R3 + 2          ; AARGB0 * BARGB1 = PRODHL
00042C 6AE8           08781         clrf    WREG            ; Add cross products
00042E 6A14           08782         clrf    R0 + 2
000430 2214           08783         addwfc  R0 + 2, F
000432 50F3           08784         movf    PRODL, W
000434 2613           08785         addwf   R0 + 1, F
000436 50F4           08786         movf    PRODH, W
000438 2214           08787         addwfc  R0 + 2, F
                      08788 
00043A 5019           08789         movf    R1 + 3, W
00043C 021E           08790         mulwf   R3              ; AARGB0 * BARGB3 = PRODHL
00043E 50F3           08791         movf    PRODL, W        ; Add cross products
000440 261D           08792         addwf   R2 + 3, F
000442 50F4           08793         movf    PRODH, W
000444 2212           08794         addwfc  R0, F
000446 6AE8           08795         clrf    WREG
000448 2213           08796         addwfc  R0 + 1, F
00044A 2214           08797         addwfc  R0 + 2, F
                      08798 
00044C 5019           08799         movf    R1 + 3, W
00044E 0221           08800         mulwf   R3 + 3          ; AARGB0 * BARGB0 = PRODHL
000450 CFF4 F015      08801         movff   PRODH, R0 + 3   ; Add cross products
000454 50F3           08802         movf    PRODL, W
000456 2614           08803         addwf   R0 + 2, F
000458 6AE8           08804         clrf    WREG
00045A 2215           08805         addwfc  R0 + 3, F
                      08806 
00045C 5016           08807         movf    R1, W
00045E 0221           08808         mulwf   R3 + 3          ; AARGB3 * BARGB0 = PRODHL
000460 50F3           08809         movf    PRODL, W        ; Add cross products
000462 261D           08810         addwf   R2 + 3, F
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000464 50F4           08811         movf    PRODH, W
000466 2212           08812         addwfc  R0, F
000468 6AE8           08813         clrf    WREG
00046A 2213           08814         addwfc  R0 + 1, F
00046C 2214           08815         addwfc  R0 + 2, F
00046E 2215           08816         addwfc  R0 + 3, F
                      08817 
000470 5017           08818         movf    R1 + 1, W
000472 0221           08819         mulwf   R3 + 3          ; AARGB2 * BARGB0 = PRODHL
000474 50F3           08820         movf    PRODL, W        ; Add cross products
000476 2612           08821         addwf   R0, F
000478 50F4           08822         movf    PRODH, W
00047A 2213           08823         addwfc  R0 + 1, F
00047C 6AE8           08824         clrf    WREG
00047E 2214           08825         addwfc  R0 + 2, F
000480 2215           08826         addwfc  R0 + 3, F
                      08827 
000482 5018           08828         movf    R1 + 2, W
000484 0221           08829         mulwf   R3 + 3          ; AARGB1 * BARGB0 = PRODHL
000486 50F3           08830         movf    PRODL, W        ; Add cross products
000488 2613           08831         addwf   R0 + 1, F
00048A 50F4           08832         movf    PRODH, W
00048C 2214           08833         addwfc  R0 + 2, F
00048E 6AE8           08834         clrf    WREG
000490 2215           08835         addwfc  R0 + 3, F
                      08836 
000492 AE21           08837         btfss   R3 + 3, 7
000494 D008           08838         bra     mulsign
000496 5016           08839         movf    R1, W
000498 5E12           08840         subwf   R0, F
00049A 5017           08841         movf    R1 + 1, W
00049C 5A13           08842         subwfb  R0 + 1, F
00049E 5018           08843         movf    R1 + 2, W
0004A0 5A14           08844         subwfb  R0 + 2, F
0004A2 5019           08845         movf    R1 + 3, W
0004A4 5A15           08846         subwfb  R0 + 3, F
                      08847 
0004A6 AE19           08848 mulsign btfss   R1 + 3, 7
0004A8 D008           08849         bra     muldone
0004AA 501E           08850         movf    R3, W
0004AC 5E12           08851         subwf   R0, F
0004AE 501F           08852         movf    R3 + 1, W
0004B0 5A13           08853         subwfb  R0 + 1, F
0004B2 5020           08854         movf    R3 + 2, W
0004B4 5A14           08855         subwfb  R0 + 2, F
0004B6 5021           08856         movf    R3 + 3, W
0004B8 5A15           08857         subwfb  R0 + 3, F
                      08858 
0004BA 501A           08859 muldone movf    R2, W           ; Get low byte to W
0004BC EF66 F002      08860         goto    DUNN
                      08876   LIST
0004C0 6EE9           08877 JUMPMAN movwf   FSR0L
0004C2 6AFB           08878         clrf    PCLATU
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004C4 500B           08879         movf    R8 + 1, W
0004C6 6EFA           08880         movwf   PCLATH
0004C8 500A           08881         movf    R8, W
0004CA 6EF9           08882         movwf   PCL
                      08896   LIST
0004CC 0100           08897 DUNN    movlb   0               ; 1 Reset banks to 0
                      08898 DUNN5   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     else
0004CE 0000               M         nop
                          M     endif
0004D0 0012           08899         return                  ; 2 Done
                      08912   LIST
0004D2                08913 INIT
                      08949   LIST
0004D2                08950 main
                      00411 
                      00412 
                      00413 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00036   #HEADER
                      00414 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00062   #CONFIG
                      00415 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00282   BANKA   $0000, $005F
                      00416 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00283   BANK0   $0060, $00FF
                      00417 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00284   BANK1   $0100, $01FF
                      00418 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00285   BANK2   $0200, $02FF
                      00419 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00286   BANK3   $0300, $03FF
                      00420 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00287   BANK4   $0400, $04FF
                      00421 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00288   BANK5   $0500, $05FF
                      00422 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00290   'EEPROM  $F00000, $F000FF
                      00423 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00292       #MSG "LONG Variables enabled (PBPL used)"
                      00424 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00293       LIBRARY  "PBPPI18L"
                      00425 
                      00426 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00294       INCLUDE "PBPPI18L.RAM"
                      00427 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00297       INCLUDE "PBPPIC18.RAM"
                      00428 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00298   #ENDIF
                      00429 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00299   DEFINE  ADC_CHANNELS  1
                      00430 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00307   #HEADER
                      00431 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00001   define OSC 16
                      00432 
                      00433 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00002   include "HPWM10_L.pbp"
                      00434 
                      00435 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00018   disable debug
                      00436         DDISABLE?       
                      00437 
                      00438 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00019   asm
                      00439 
                      00440         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00441 
                      00442   if (R1 - R0 == 4)
                      00443   else
                      00444     messg You must use PBPL
                      00445   endif
                      00446 ;____[ HPWM10: 10-bit HPWM, with up to 5 CCP modules ]_____________
                      00447 
                      00448 HPWM10 macro  Channel, Duty, Freq   
                      00449     if Channel < 6 
                      00450       MOVE?CB Channel, _HP_Channel      ; Save channel from constant
                      00451     else
                      00452       MOVE?BB Channel, _HP_Channel      ; Save channel from BYTE var
                      00453     endif
                      00454     MOVE?WW   Duty, _HP_Duty
                      00455     MOVE?WW   Freq, _HP_Freq
                      00456     L?CALL    _HPWM10_UPD    
                      00457     endm
                      00458 
                      00459 
                      00460         ENDASM?
                      00461 
                      00462 
                      00463 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00056   goto OverHPWM10
                      00464         GOTO?L  _OverHPWM10
                          M         L?GOTO  _OverHPWM10
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_OverHPWM10))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _OverHPWM10
                          M     else
                          M       if ((_OverHPWM10) < 1)
                          M         goto    _OverHPWM10
                          M       else
                          M         if ((_OverHPWM10) > $)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004D2 EF1B F004          M         goto    _OverHPWM10
                          M         else
                          M           if ((_OverHPWM10) < ($ - 3ffh))
                          M         goto    _OverHPWM10
                          M           else
                          M         bra     _OverHPWM10
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00465 
                      00466 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00058   @PS = ((OSC * 1000000) / 1024)
                      00467 
                      00468         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
  00003D09            00469 PS = ((OSC * 1000000) / 1024)
                      00470 
                      00471         ENDASM?
                      00472 
                      00473 
                      00474 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00059   @PR2const = ((OSC * 1000000) / 4)  ;<---
                            -Added
                      00475 
                      00476         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
  003D0900            00477 PR2const = ((OSC * 1000000) / 4)  ;<----Added
                      00478 
                      00479         ENDASM?
                      00480 
                      00481 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00060   PS  CON EXT                        ;<---
                            -Added
                      00482 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00061   PR2const CON EXT
                      00483 
                      00484 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00062   HPWM10_UPD:  
                      00485 
                      00486         LABEL?L _HPWM10_UPD     
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _HPWM10_UPD
                          M         XALL
                          M     else
0004D6                    M _HPWM10_UPD
                          M     endif
                      00487 
                      00488 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00064       HP_Temp = PS / HP_Freq
                      00489         DIV?CWW PS, _HP_Freq, _HP_Temp
                          M         MOVE?CN PS,  R0
                          M     ifdef USE_LINKER
                          M         CHK?RP  R0
                          M         movlw   low (PS)
                          M         movwf   R0
                          M         movlw   high (PS)
                          M         movwf   (R0)   + 1
                          M         movlw   upper (PS)
                          M         movwf   (R0)   + 2
                          M         movlw   (PS)  >> 24
                          M         movwf   (R0)   + 3
                          M     else
                          M         MOVE?CB low (PS),  R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     if (low (low (PS)) == 0)
                          M         clrf    R0
                          M     else
                          M       if (low (low (PS)) == 255)
                          M         setf    R0
                          M       else
0004D6 0E09               M         movlw   low (low (PS))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004D8 6E12               M         movwf   R0
                          M       endif
                          M     endif
                          M         MOVE?CB high (PS),  (R0)   + 1
                          M         CHK?RP  (R0) + 1
                          M     if ((((R0) + 1) & 8000h) != PREV_ALT)
                          M       if (((R0) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 1) & 8000h
                          M     endif
                          M     if (((((R0) + 1) & 0fffh) > BANKA_END) & ((((R0) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 1)
                          M PREV_BANK = high ((R0) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (PS)) == 0)
                          M         clrf    (R0) + 1
                          M     else
                          M       if (low (high (PS)) == 255)
                          M         setf    (R0) + 1
                          M       else
0004DA 0E3D               M         movlw   low (high (PS))
0004DC 6E13               M         movwf   (R0) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (PS),  (R0)   + 2
                          M         CHK?RP  (R0) + 2
                          M     if ((((R0) + 2) & 8000h) != PREV_ALT)
                          M       if (((R0) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 2) & 8000h
                          M     endif
                          M     if (((((R0) + 2) & 0fffh) > BANKA_END) & ((((R0) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 2)
                          M PREV_BANK = high ((R0) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (PS)) == 0)
0004DE 6A14               M         clrf    (R0) + 2
                          M     else
                          M       if (low (upper (PS)) == 255)
                          M         setf    (R0) + 2
                          M       else
                          M         movlw   low (upper (PS))
                          M         movwf   (R0) + 2
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M         MOVE?CB (PS)  >> 24, (R0)   + 3
                          M         CHK?RP  (R0) + 3
                          M     if ((((R0) + 3) & 8000h) != PREV_ALT)
                          M       if (((R0) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 3) & 8000h
                          M     endif
                          M     if (((((R0) + 3) & 0fffh) > BANKA_END) & ((((R0) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 3)
                          M PREV_BANK = high ((R0) + 3)
                          M       endif
                          M     endif
                          M     if (low ((PS) >> 24) == 0)
0004E0 6A15               M         clrf    (R0) + 3
                          M     else
                          M       if (low ((PS) >> 24) == 255)
                          M         setf    (R0) + 3
                          M       else
                          M         movlw   low ((PS) >> 24)
                          M         movwf   (R0) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         MOVE?WN _HP_Freq, R1
                          M         MOVE?BB _HP_Freq, R1
0004E2 C036 F016          M         movff   _HP_Freq, R1
                          M         MOVE?BB (_HP_Freq) + 1, (R1) + 1
0004E6 C037 F017          M         movff   (_HP_Freq) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
0004EA 6A18               M         clrf    (R1)   + 2
0004EC 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  DIVS
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
0004EE DF10               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0004F0 6E38               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0004F2 C013 F039          M         movff   (R0) + 1, (_HP_Temp) + 1
                      00490 
                      00491 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00065       if HP_Temp >= 4 then
                      00492         CMPLT?WCL       _HP_Temp, 004h, L00003
                          M     if ((004h) >= 10000h)
                          M         L?GOTO  L00003
                          M     else
                          M       if ((004h) > 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
0004F6 C038 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
0004FA C039 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?CB (004h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((004h) >> 8) == 0)
0004FE 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low ((004h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low ((004h) >> 8)
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (004h)
000500 0E04               M         movlw   low (low (004h))
                          M         L?CALL  CMPLTW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLTW
                          M     else
                          M       if ((CMPLTW) < 1)
                          M         call    CMPLTW
                          M       else
                          M         if ((CMPLTW) > $)
                          M         call    CMPLTW
                          M         else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((CMPLTW) < ($ - 3ffh))
                          M         call    CMPLTW
                          M           else
000502 DEE2               M         rcall   CMPLTW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000504 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
000506 EF91 F002          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
                          M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       endif
                          M     endif
                      00493 
                      00494 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00066           if PS1 <> 1 then PSchanged = 1 
                      00495         CMPEQ?TCL       _PS1, 001h, L00005
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 001h, L00005
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
00050A B259               M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
00050C EF89 F002          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
                          M             else
                          M         bra     L00005
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00496         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000510 8459               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00497         LABEL?L L00005  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
000512                    M L00005
                          M     endif
                      00498 
                      00499 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00067           PS1 = 1
                      00500         MOVE?CT 001h, _PS1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000512 8259               M         bsf     _HP_Flags, 001h
                          M     else
                          M         bcf     _HP_Flags, 001h
                          M     endif
                      00501 
                      00502 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00068           if PS0 <> 1 then PSchanged = 1 
                      00503         CMPEQ?TCL       _PS0, 001h, L00007
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 000h, L00007
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00007))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M           else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if ((L00007) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M             else
                          M         bov     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
000514 B059               M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
000516 EF8E F002          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 3ffh))
                          M         goto    L00007
                          M             else
                          M         bra     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00504         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00051A 8459               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00505         LABEL?L L00007  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00007
                          M         XALL
                          M     else
00051C                    M L00007
                          M     endif
                      00506 
                      00507 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00069           PS0 = 1
                      00508         MOVE?CT 001h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00051C 8059               M         bsf     _HP_Flags, 000h
                          M     else
                          M         bcf     _HP_Flags, 000h
                          M     endif
                      00509 
                      00510 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00070       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00511         GOTO?L  L00004
                          M         L?GOTO  L00004
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00004
                          M     else
                          M       if ((L00004) < 1)
                          M         goto    L00004
                          M       else
                          M         if ((L00004) > $)
00051E EFAC F002          M         goto    L00004
                          M         else
                          M           if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M           else
                          M         bra     L00004
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00512         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00003
                          M         XALL
                          M     else
000522                    M L00003
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00513 
                      00514 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00071           if PS1 <> 0 then PSchanged = 1 
                      00515         CMPEQ?TCL       _PS1, 000h, L00009
                          M     if (((000h) == 0) | ((000h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 000h, _HP_Flags, 001h, L00009
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00009))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((000h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M             else
                          M         bov     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((000h)   == 0)
000522 A259               M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
000524 EF95 F002          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 3ffh))
                          M         goto    L00009
                          M             else
                          M         bra     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00516         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000528 8459               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00517         LABEL?L L00009  
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00009
                          M         XALL
                          M     else
00052A                    M L00009
                          M     endif
                      00518 
                      00519 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00072           PS1 = 0
                      00520         MOVE?CT 000h, _PS1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 001h
                          M     else
00052A 9259               M         bcf     _HP_Flags, 001h
                          M     endif
                      00521 
                      00522 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00073           if HP_Temp > 0 then 
                      00523         CMPLE?WCL       _HP_Temp, 000h, L00011
                          M     if ((000h) >= 0ffffh)
                          M         L?GOTO  L00011
                          M     else
                          M       if ((000h) >= 0)
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
00052C C038 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
000530 C039 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?CB (000h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((000h) >> 8) == 0)
000534 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low ((000h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low ((000h) >> 8)
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (000h)
000536 0E00               M         movlw   low (low (000h))
                          M         L?CALL  CMPLEW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLEW
                          M     else
                          M       if ((CMPLEW) < 1)
                          M         call    CMPLEW
                          M       else
                          M         if ((CMPLEW) > $)
                          M         call    CMPLEW
                          M         else
                          M           if ((CMPLEW) < ($ - 3ffh))
                          M         call    CMPLEW
                          M           else
000538 DEC4               M         rcall   CMPLEW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         BIT?GOTO 0, STATUS, Z, L00011
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00011))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M             else
                          M         bov     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00053A A4D8               M         btfss   STATUS, Z
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
00053C EFA7 F002          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 3ffh))
                          M         goto    L00011
                          M             else
                          M         bra     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       endif
                          M     endif
                      00524 
                      00525 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00074               if PS0 <> 1 then PSchanged =
                             1 
                      00526         CMPEQ?TCL       _PS0, 001h, L00013
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 000h, L00013
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00013))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00013
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((L00013) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M             else
                          M         bov     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
000540 B059               M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
000542 EFA4 F002          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 3ffh))
                          M         goto    L00013
                          M             else
                          M         bra     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00527         MOVE?CT 001h, _PSchanged
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000546 8459               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00528         LABEL?L L00013  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00013
                          M         XALL
                          M     else
000548                    M L00013
                          M     endif
                      00529 
                      00530 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00075               PS0 = 1
                      00531         MOVE?CT 001h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000548 8059               M         bsf     _HP_Flags, 000h
                          M     else
                          M         bcf     _HP_Flags, 000h
                          M     endif
                      00532 
                      00533 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00076           else
                      00534         GOTO?L  L00012
                          M         L?GOTO  L00012
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00012))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00012
                          M     else
                          M       if ((L00012) < 1)
                          M         goto    L00012
                          M       else
                          M         if ((L00012) > $)
00054A EFAC F002          M         goto    L00012
                          M         else
                          M           if ((L00012) < ($ - 3ffh))
                          M         goto    L00012
                          M           else
                          M         bra     L00012
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00535         LABEL?L L00011  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00011
                          M         XALL
                          M     else
00054E                    M L00011
                          M     endif
                      00536 
                      00537 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00077               if PS0 <> 0 then PSchanged =
                             1 
                      00538         CMPEQ?TCL       _PS0, 000h, L00015
                          M     if (((000h) == 0) | ((000h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 000h, _HP_Flags, 000h, L00015
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00015))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((000h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00015
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             else
                          M         bov     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((000h)   == 0)
00054E A059               M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
000550 EFAB F002          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 3ffh))
                          M         goto    L00015
                          M             else
                          M         bra     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00539         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000554 8459               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00540         LABEL?L L00015  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00015
                          M         XALL
                          M     else
000556                    M L00015
                          M     endif
                      00541 
                      00542 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00078               PS0 = 0
                      00543         MOVE?CT 000h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 000h
                          M     else
000556 9059               M         bcf     _HP_Flags, 000h
                          M     endif
                      00544 
                      00545 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00079           endif
                      00546         LABEL?L L00012  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00012
                          M         XALL
                          M     else
000558                    M L00012
                          M     endif
                      00547 
                      00548 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00080       endif
                      00549         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
000558                    M L00004
                          M     endif
                      00550 
                      00551 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00091       HP_Temp =PR2const/HP_Freq 'DIV32 HP_
                            Freq <-------------------changed
                      00552         DIV?CWW PR2const, _HP_Freq, _HP_Temp
                          M         MOVE?CN PR2const, R0
                          M     ifdef USE_LINKER
                          M         CHK?RP  R0
                          M         movlw   low (PR2const)
                          M         movwf   R0
                          M         movlw   high (PR2const)
                          M         movwf   (R0)   + 1
                          M         movlw   upper (PR2const)
                          M         movwf   (R0)   + 2
                          M         movlw   (PR2const) >> 24
                          M         movwf   (R0)   + 3
                          M     else
                          M         MOVE?CB low (PR2const), R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     if (low (low (PR2const)) == 0)
000558 6A12               M         clrf    R0
                          M     else
                          M       if (low (low (PR2const)) == 255)
                          M         setf    R0
                          M       else
                          M         movlw   low (low (PR2const))
                          M         movwf   R0
                          M       endif
                          M     endif
                          M         MOVE?CB high (PR2const), (R0) + 1
                          M         CHK?RP  (R0) + 1
                          M     if ((((R0) + 1) & 8000h) != PREV_ALT)
                          M       if (((R0) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 1) & 8000h
                          M     endif
                          M     if (((((R0) + 1) & 0fffh) > BANKA_END) & ((((R0) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 1)
                          M PREV_BANK = high ((R0) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (PR2const)) == 0)
                          M         clrf    (R0) + 1
                          M     else
                          M       if (low (high (PR2const)) == 255)
                          M         setf    (R0) + 1
                          M       else
00055A 0E09               M         movlw   low (high (PR2const))
00055C 6E13               M         movwf   (R0) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (PR2const), (R0) + 2
                          M         CHK?RP  (R0) + 2
                          M     if ((((R0) + 2) & 8000h) != PREV_ALT)
                          M       if (((R0) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 2) & 8000h
                          M     endif
                          M     if (((((R0) + 2) & 0fffh) > BANKA_END) & ((((R0) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 2)
                          M PREV_BANK = high ((R0) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (PR2const)) == 0)
                          M         clrf    (R0) + 2
                          M     else
                          M       if (low (upper (PR2const)) == 255)
                          M         setf    (R0) + 2
                          M       else
00055E 0E3D               M         movlw   low (upper (PR2const))
000560 6E14               M         movwf   (R0) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (PR2const) >> 24, (R0) + 3
                          M         CHK?RP  (R0) + 3
                          M     if ((((R0) + 3) & 8000h) != PREV_ALT)
                          M       if (((R0) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 3) & 8000h
                          M     endif
                          M     if (((((R0) + 3) & 0fffh) > BANKA_END) & ((((R0) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 3)
                          M PREV_BANK = high ((R0) + 3)
                          M       endif
                          M     endif
                          M     if (low ((PR2const) >> 24) == 0)
000562 6A15               M         clrf    (R0) + 3
                          M     else
                          M       if (low ((PR2const) >> 24) == 255)
                          M         setf    (R0) + 3
                          M       else
                          M         movlw   low ((PR2const) >> 24)
                          M         movwf   (R0) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         MOVE?WN _HP_Freq, R1
                          M         MOVE?BB _HP_Freq, R1
000564 C036 F016          M         movff   _HP_Freq, R1
                          M         MOVE?BB (_HP_Freq) + 1, (R1) + 1
000568 C037 F017          M         movff   (_HP_Freq) + 1, (R1) + 1
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
00056C 6A18               M         clrf    (R1)   + 2
00056E 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
000570 DECF               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000572 6E38               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000574 C013 F039          M         movff   (R0) + 1, (_HP_Temp) + 1
                      00553 
                      00554 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00093       if PS0 then HP_Temp = HP_Temp >> 2  
                            ; /4
                      00555         CMPF?TL _PS0, L00017
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 000h, L00017
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00017))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 7fh))
                          M         btfsc   STATUS, OV
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00017
                          M             else
                          M         bov     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000578 A059               M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
00057A EFCA F002          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 3ffh))
                          M         goto    L00017
                          M             else
                          M         bra     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00556         SHIFTR?WCW      _HP_Temp, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Temp))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Temp
                          M         rrcf    (_HP_Temp) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp, W
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
00057E C038 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
000582 C039 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000586 6A14               M         clrf    (R0)   + 2
000588 6A15               M         clrf    (R0)   + 3
00058A 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
00058C DE92               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
00058E 6E38               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000590 C013 F039          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00557         LABEL?L L00017  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00017
                          M         XALL
                          M     else
000594                    M L00017
                          M     endif
                      00558 
                      00559 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00094       if PS1 then HP_Temp = HP_Temp >> 2  
                            ; /4 or 16
                      00560         CMPF?TL _PS1, L00019
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 001h, L00019
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00019))
                          M         CLRWDT?
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M             else
                          M         bov     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000594 A259               M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
000596 EFD8 F002          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 3ffh))
                          M         goto    L00019
                          M             else
                          M         bra     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00561         SHIFTR?WCW      _HP_Temp, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Temp))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Temp
                          M         rrcf    (_HP_Temp) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
00059A C038 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
00059E C039 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
0005A2 6A14               M         clrf    (R0)   + 2
0005A4 6A15               M         clrf    (R0)   + 3
0005A6 0E02               M         movlw   002h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
0005A8 DE84               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0005AA 6E38               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0005AC C013 F039          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00562         LABEL?L L00019  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00019
                          M         XALL
                          M     else
0005B0                    M L00019
                          M     endif
                      00563 
                      00564 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00095       HP_PR2 = HP_Temp.lowbyte - 1
                      00565         SUB?BCB _HP_Temp??LOWBYTE, 001h, _HP_PR2
                          M     if ((_HP_PR2) == (_HP_Temp??LOWBYTE))
                          M       if ((001h) == 1)
                          M         CHK?RP  _HP_PR2
                          M         decf    _HP_PR2, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _HP_PR2
                          M         subwf   _HP_PR2, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M     if (((_HP_Temp??LOWBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??LOWBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??LOWBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??LOWBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??LOWBYTE) & 0fffh) < (0f01h + BANKA_EN
                            D)))
                          M       if (((_HP_Temp??LOWBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??LOWBYTE)
                          M PREV_BANK = high (_HP_Temp??LOWBYTE)
                          M       endif
                          M     endif
0005B0 0438               M         decf    _HP_Temp??LOWBYTE, W
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M         subwf   _HP_Temp??LOWBYTE, W
                          M       endif
                          M         MOVE?AB _HP_PR2
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
0005B2 6E5A               M         movwf   _HP_PR2
                          M     endif
                      00566 
                      00567 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00096       if HP_PR2 <> PR2 then PR2changed = 1
                      00568         CMPEQ?BBL       _HP_PR2, PR2, L00021
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         MOVE?BA _HP_PR2
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
0005B4 505A               M         movf    _HP_PR2, W
                          M         CHK?RP  PR2
                          M     if (((PR2)   & 8000h) != PREV_ALT)
                          M       if ((PR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PR2)   & 8000h
                          M     endif
                          M     if ((((PR2)   & 0fffh) > BANKA_END) & (((PR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PR2)
                          M PREV_BANK = high (PR2)
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005B6 5CBB               M         subwf   PR2,  W
                          M         BIT?GOTO 1, STATUS, Z, L00021
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00021))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((1)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M             else
                          M         bov     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   STATUS, Z
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
0005B8 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
0005BA EFE0 F002          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 3ffh))
                          M         goto    L00021
                          M             else
                          M         bra     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00569         MOVE?CT 001h, _PR2changed
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0005BE 8659               M         bsf     _HP_Flags, 003h
                          M     else
                          M         bcf     _HP_Flags, 003h
                          M     endif
                      00570         LABEL?L L00021  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         LALL
                          M L00021
                          M         XALL
                          M     else
0005C0                    M L00021
                          M     endif
                      00571 
                      00572 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00100       HP_Temp = (HP_PR2 + 1) << 2  ; * 4
                      00573         ADD?BCN _HP_PR2, 001h, T1
                          M     if ((001h) == 1)
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
0005C0 285A               M         incf    _HP_PR2, W
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005C2 6E22               M         movwf   T1
0005C4 6A23               M         clrf    (T1)   + 1
0005C6 6A24               M         clrf    (T1)   + 2
0005C8 6A25               M         clrf    (T1)   + 3
0005CA 3623               M         rlcf    (T1)   + 1, F
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _HP_PR2
                          M         addwf   _HP_PR2, W
                          M         MOVE?AN T1
                          M         movlw   high (001h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         addwfc  (T1)   + 1, F
                          M         movlw   upper (001h)
                          M         addwfc  (T1)   + 2, F
                          M         movlw   (001h) >> 24
                          M         addwfc  (T1)   + 3, F
                          M     endif
                      00574         SHIFTL?NCW      T1, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M         CHK?RP  T1
                          M         rlcf    T1,  W
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M     else
                          M         MOVE?NW T1,  R0
                          M         MOVE?BB T1,  R0
0005CC C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0005D0 C023 F013          M         movff   (T1) + 1, (R0) + 1
0005D4 0E02               M         movlw   002h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
                          M         call    SHIFTL
                          M           else
0005D6 DE63               M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0005D8 6E38               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0005DA C013 F039          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00575 
                      00576 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00102       HP_Duty = (HP_Temp * HP_Duty)/1023 '
                            DIV32 1023 <-------------------changed
                      00577         MUL?WWN _HP_Temp, _HP_Duty, T1
                          M         MOVE?WN _HP_Temp, R3
                          M         MOVE?BB _HP_Temp, R3
0005DE C038 F01E          M         movff   _HP_Temp, R3
                          M         MOVE?BB (_HP_Temp) + 1, (R3) + 1
0005E2 C039 F01F          M         movff   (_HP_Temp) + 1, (R3) + 1
                          M         CHK?RP  R3
                          M     if (((R3)    & 8000h) != PREV_ALT)
                          M       if ((R3)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R3)    & 8000h
                          M     endif
                          M     if ((((R3)    & 0fffh) > BANKA_END) & (((R3)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R3)
                          M PREV_BANK = high (R3)
                          M       endif
                          M     endif
0005E6 6A20               M         clrf    (R3)   + 2
0005E8 6A21               M         clrf    (R3)   + 3
                          M         MOVE?WN _HP_Duty, R1
                          M         MOVE?BB _HP_Duty, R1
0005EA C034 F016          M         movff   _HP_Duty, R1
                          M         MOVE?BB (_HP_Duty) + 1, (R1) + 1
0005EE C035 F017          M         movff   (_HP_Duty) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
0005F2 6A18               M         clrf    (R1)   + 2
0005F4 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
0005F6 DED0               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0005F8 6E22               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
0005FA C01B F023          M         movff   (R2) + 1, (T1) + 1
                          M         MOVE?BB (R2)  + 2, (T1)   + 2
0005FE C01C F024          M         movff   (R2) + 2, (T1) + 2
                          M         MOVE?BB (R2)  + 3, (T1)   + 3
000602 C01D F025          M         movff   (R2) + 3, (T1) + 3
                      00578         DIV?NCW T1, 0000003FFh, _HP_Duty
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000606 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00060A C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
00060E C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000612 C025 F015          M         movff   (T1) + 3, (R0) + 3
                          M         MOVE?CN 0000003FFh, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (0000003FFh)
                          M         movwf   R1
                          M         movlw   high (0000003FFh)
                          M         movwf   (R1)   + 1
                          M         movlw   upper (0000003FFh)
                          M         movwf   (R1)   + 2
                          M         movlw   (0000003FFh) >> 24
                          M         movwf   (R1)   + 3
                          M     else
                          M         MOVE?CB low (0000003FFh), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (0000003FFh)) == 0)
                          M         clrf    R1
                          M     else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (low (0000003FFh)) == 255)
000616 6816               M         setf    R1
                          M       else
                          M         movlw   low (low (0000003FFh))
                          M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (0000003FFh), (R1) + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (0000003FFh)) == 0)
                          M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (0000003FFh)) == 255)
                          M         setf    (R1) + 1
                          M       else
000618 0E03               M         movlw   low (high (0000003FFh))
00061A 6E17               M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (0000003FFh), (R1) + 2
                          M         CHK?RP  (R1) + 2
                          M     if ((((R1) + 2) & 8000h) != PREV_ALT)
                          M       if (((R1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 2) & 8000h
                          M     endif
                          M     if (((((R1) + 2) & 0fffh) > BANKA_END) & ((((R1) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 2)
                          M PREV_BANK = high ((R1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (0000003FFh)) == 0)
00061C 6A18               M         clrf    (R1) + 2
                          M     else
                          M       if (low (upper (0000003FFh)) == 255)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         setf    (R1) + 2
                          M       else
                          M         movlw   low (upper (0000003FFh))
                          M         movwf   (R1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (0000003FFh) >> 24, (R1) + 3
                          M         CHK?RP  (R1) + 3
                          M     if ((((R1) + 3) & 8000h) != PREV_ALT)
                          M       if (((R1) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 3) & 8000h
                          M     endif
                          M     if (((((R1) + 3) & 0fffh) > BANKA_END) & ((((R1) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 3)
                          M PREV_BANK = high ((R1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((0000003FFh) >> 24) == 0)
00061E 6A19               M         clrf    (R1) + 3
                          M     else
                          M       if (low ((0000003FFh) >> 24) == 255)
                          M         setf    (R1) + 3
                          M       else
                          M         movlw   low ((0000003FFh) >> 24)
                          M         movwf   (R1) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
000620 DE77               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Duty
                          M         MOVE?AB _HP_Duty
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
000622 6E34               M         movwf   _HP_Duty
                          M         MOVE?BB (R0)  + 1, (_HP_Duty) + 1
000624 C013 F035          M         movff   (R0) + 1, (_HP_Duty) + 1
                      00579 
                      00580 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00107       Branch HP_Channel,[GetCH_Done,GetCH_
                            1,GetCH_2,GetCH_3,GetCH_4,GetCH_5]
                      00581         BRANCH?BCL      _HP_Channel, 006h, L00001
  0000                    M     local jmptbl
                          M         MOVE?BA _HP_Channel
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
000628 5058               M         movf    _HP_Channel, W
00062A 6E12               M         movwf   R0
00062C 0805               M         sublw   (006h) - 1
                          M         BIT?GOTO 0, STATUS, C, L00001
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00062E A0D8               M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
000630 EF2C F003          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000634 6AFA               M         clrf    PCLATH
000636 6AFB               M         clrf    PCLATU
000638 3612               M         rlcf    R0, F
00063A 36FA               M         rlcf    PCLATH, F
00063C 0E4C               M         movlw   low (jmptbl)
00063E 2612               M         addwf   R0, F
000640 0E06               M         movlw   high (jmptbl)
000642 22FA               M         addwfc  PCLATH, F
000644 0E00               M         movlw   upper (jmptbl)
000646 22FB               M         addwfc  PCLATU, F
000648 5012               M         movf    R0, W
00064A 6EF9               M         movwf   PCL
00064C                    M jmptbl
                      00582         BRGOTO?L        _GetCH_Done
00064C D021               M         bra     _GetCH_Done
                      00583         BRGOTO?L        _GetCH_1
00064E D004               M         bra     _GetCH_1
                      00584         BRGOTO?L        _GetCH_2
000650 D009               M         bra     _GetCH_2
                      00585         BRGOTO?L        _GetCH_3
000652 D00E               M         bra     _GetCH_3
                      00586         BRGOTO?L        _GetCH_4
000654 D013               M         bra     _GetCH_4
                      00587         BRGOTO?L        _GetCH_5
000656 D018               M         bra     _GetCH_5
                      00588 
                      00589         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
000658                    M L00001
                          M     endif
                      00590 
                      00591 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00109       GetCH_1:
                      00592 
                      00593         LABEL?L _GetCH_1        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_1
                          M         XALL
                          M     else
000658                    M _GetCH_1
                          M     endif
                      00594 
                      00595 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00110               ASM
                      00596 
                      00597         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00598 
                      00599               ifdef CCP1CON  
                      00600                 MOVE?BB  CCPR1L,  _HP_Temp
000658 CFBE F038          M         movff   CCPR1L, _HP_Temp
                      00601                 MOVE?BB  CCP1CON, _HP_Temp + 1
00065C CFBD F039          M         movff   CCP1CON, _HP_Temp + 1
000660 EF48 F003      00602                 goto _GetCH_Done        
                      00603               endif  
                      00604             
                      00605 
                      00606         ENDASM?
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00607 
                      00608 
                      00609 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00117       GetCH_2:  
                      00610 
                      00611         LABEL?L _GetCH_2        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_2
                          M         XALL
                          M     else
000664                    M _GetCH_2
                          M     endif
                      00612 
                      00613 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00118               ASM
                      00614 
                      00615         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00616 
                      00617               ifdef CCP2CON  
                      00618                 MOVE?BB  CCPR2L,  _HP_Temp
000664 CF67 F038          M         movff   CCPR2L, _HP_Temp
                      00619                 MOVE?BB  CCP2CON, _HP_Temp + 1
000668 CF66 F039          M         movff   CCP2CON, _HP_Temp + 1
00066C EF48 F003      00620                 goto _GetCH_Done        
                      00621               endif  
                      00622             
                      00623 
                      00624         ENDASM?
                      00625 
                      00626 
                      00627 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00125       GetCH_3:  
                      00628 
                      00629         LABEL?L _GetCH_3        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_3
                          M         XALL
                          M     else
000670                    M _GetCH_3
                          M     endif
                      00630 
                      00631 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00126               ASM
                      00632 
                      00633         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00634 
                      00635               ifdef CCP3CON  
                      00636                 MOVE?BB  CCPR3L,  _HP_Temp
000670 CF5E F038          M         movff   CCPR3L, _HP_Temp
                      00637                 MOVE?BB  CCP3CON, _HP_Temp + 1
000674 CF5D F039          M         movff   CCP3CON, _HP_Temp + 1
000678 EF48 F003      00638                 goto _GetCH_Done        
                      00639               endif  
                      00640             
                      00641 
                      00642         ENDASM?
                      00643 
                      00644 
                      00645 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00133       GetCH_4:  
                      00646 
                      00647         LABEL?L _GetCH_4        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M _GetCH_4
                          M         XALL
                          M     else
00067C                    M _GetCH_4
                          M     endif
                      00648 
                      00649 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00134               ASM
                      00650 
                      00651         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00652 
                      00653               ifdef CCP4CON  
                      00654                 MOVE?BB  CCPR4L,  _HP_Temp
00067C CF58 F038          M         movff   CCPR4L, _HP_Temp
                      00655                 MOVE?BB  CCP4CON, _HP_Temp + 1
000680 CF57 F039          M         movff   CCP4CON, _HP_Temp + 1
000684 EF48 F003      00656                 goto _GetCH_Done        
                      00657               endif  
                      00658             
                      00659 
                      00660         ENDASM?
                      00661 
                      00662 
                      00663 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00141       GetCH_5:  
                      00664 
                      00665         LABEL?L _GetCH_5        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_5
                          M         XALL
                          M     else
000688                    M _GetCH_5
                          M     endif
                      00666 
                      00667 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00142               ASM
                      00668 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00669         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00670 
                      00671               ifdef CCP5CON  
                      00672                 MOVE?BB  CCPR5L,  _HP_Temp
000688 CF55 F038          M         movff   CCPR5L, _HP_Temp
                      00673                 MOVE?BB  CCP5CON, _HP_Temp + 1
00068C CF54 F039          M         movff   CCP5CON, _HP_Temp + 1
                      00674               endif  
                      00675             
                      00676 
                      00677         ENDASM?
                      00678 
                      00679 
                      00680 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00149   GetCH_Done:
                      00681 
                      00682         LABEL?L _GetCH_Done     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_Done
                          M         XALL
                          M     else
000690                    M _GetCH_Done
                          M     endif
                      00683 
                      00684 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00150       HP_Temp = (HP_Temp.lowbyte << 2) | (
                            (HP_Temp.highbyte & %110000) >> 4)
                      00685         SHIFTL?BCN      _HP_Temp??LOWBYTE, 002h, T1
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M         rlcf    _HP_Temp??LOWBYTE, W
                          M         MOVE?AN T1
                          M         rlcf    (T1)   + 1, F
                          M     else
                          M         MOVE?BN _HP_Temp??LOWBYTE, R0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB _HP_Temp??LOWBYTE, R0
000690 C038 F012          M         movff   _HP_Temp??LOWBYTE, R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000694 6A13               M         clrf    (R0)   + 1
000696 6A14               M         clrf    (R0)   + 2
000698 6A15               M         clrf    (R0)   + 3
00069A 0E02               M         movlw   002h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
                          M         call    SHIFTL
                          M           else
00069C DE00               M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00069E 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
0006A0 C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
0006A4 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
0006A8 C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      00686         AND?BCN _HP_Temp??HIGHBYTE, 030h, T2
0006AC 0E30               M         movlw   030h
                          M         CHK?RP  _HP_Temp??HIGHBYTE
                          M     if (((_HP_Temp??HIGHBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??HIGHBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??HIGHBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??HIGHBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??HIGHBYTE) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if (((_HP_Temp??HIGHBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??HIGHBYTE)
                          M PREV_BANK = high (_HP_Temp??HIGHBYTE)
                          M       endif
                          M     endif
0006AE 1439               M         andwf   _HP_Temp??HIGHBYTE, W
                          M         MOVE?AN T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0006B0 6E26               M         movwf   T2
0006B2 6A27               M         clrf    (T2)   + 1
0006B4 6A28               M         clrf    (T2)   + 2
0006B6 6A29               M         clrf    (T2)   + 3
                      00687         SHIFTR?NCN      T2, 004h, T2
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T2)   == (T2))
                          M         CHK?RP  T2
                          M         rrcf    (T2)   + 3, F
                          M         rrcf    (T2)   + 2, F
                          M         rrcf    (T2)   + 1, F
                          M         rrcf    T2,   F
                          M       else
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 3, W
                          M         MOVE?AB (T2)   + 3
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 2, W
                          M         MOVE?AB (T2)   + 2
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 1, W
                          M         MOVE?AB (T2)   + 1
                          M         CHK?RP  T2
                          M         rrcf    T2,  W
                          M         MOVE?AB T2
                          M       endif
                          M     else
                          M         MOVE?NN T2,  R0
                          M         MOVE?BB T2,  R0
0006B8 C026 F012          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
0006BC C027 F013          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?BB (T2)  + 2, (R0)   + 2
0006C0 C028 F014          M         movff   (T2) + 2, (R0) + 2
                          M         MOVE?BB (T2)  + 3, (R0)   + 3
0006C4 C029 F015          M         movff   (T2) + 3, (R0) + 3
0006C8 0E04               M         movlw   004h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
0006CA EC59 F001          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0006CE 6E26               M         movwf   T2
                          M         MOVE?BB (R0)  + 1, (T2)   + 1
0006D0 C013 F027          M         movff   (R0) + 1, (T2) + 1
                          M         MOVE?BB (R0)  + 2, (T2)   + 2
0006D4 C014 F028          M         movff   (R0) + 2, (T2) + 2
                          M         MOVE?BB (R0)  + 3, (T2)   + 3
0006D8 C015 F029          M         movff   (R0) + 3, (T2) + 3
                          M     endif
                      00688         OR?NNW  T1, T2, _HP_Temp
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0006DC 5022               M         movf    T1,  W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0006DE 1026               M         iorwf   T2,   W
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
0006E0 6E38               M         movwf   _HP_Temp
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) & 8000h) != PREV_ALT)
                          M       if ((T1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1 + 1) & 8000h
                          M     endif
                          M     if ((((T1 + 1) & 0fffh) > BANKA_END) & (((T1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
0006E2 5023               M         movf    T1 + 1, W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
0006E4 1027               M         iorwf   T2   + 1, W
                          M         MOVE?AB _HP_Temp + 1
                          M         CHK?RP  _HP_Temp + 1
                          M     if (((_HP_Temp + 1) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp + 1) & 8000h
                          M     endif
                          M     if ((((_HP_Temp + 1) & 0fffh) > BANKA_END) & (((_HP_Temp + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp + 1)
                          M PREV_BANK = high (_HP_Temp + 1)
                          M       endif
                          M     endif
0006E6 6E39               M         movwf   _HP_Temp + 1
                      00689 
                      00690 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00154       if HP_Temp <> HP_Duty then  ; if Dut
                            yCycle Changed
                      00691         CMPEQ?WWL       _HP_Temp, _HP_Duty, L00023
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
0006E8 C038 F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
0006EC C039 F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?WWA _HP_Duty, R1
                          M         MOVE?BB (_HP_Duty) + 1, (R1) + 1
0006F0 C035 F017          M         movff   (_HP_Duty) + 1, (R1) + 1
                          M         MOVE?BA _HP_Duty
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
0006F4 5034               M         movf    _HP_Duty, W
                          M         L?CALL  CMPEQW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPEQW
                          M     else
                          M       if ((CMPEQW) < 1)
                          M         call    CMPEQW
                          M       else
                          M         if ((CMPEQW) > $)
                          M         call    CMPEQW
                          M         else
                          M           if ((CMPEQW) < ($ - 3ffh))
0006F6 EC5E F001          M         call    CMPEQW
                          M           else
                          M         rcall   CMPEQW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00023
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00023))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M             else
                          M         bov     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0006FA A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
0006FC EFE5 F003          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 3ffh))
                          M         goto    L00023
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             else
                          M         bra     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00692 
                      00693 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00156           HP_Temp = HP_Duty >> 2        ; 
                            for CCP?CON
                      00694         SHIFTR?WCW      _HP_Duty, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Duty))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Duty
                          M         rrcf    (_HP_Duty) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Duty
                          M         rrcf    _HP_Duty, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Duty, R0
                          M         MOVE?BB _HP_Duty, R0
000700 C034 F012          M         movff   _HP_Duty, R0
                          M         MOVE?BB (_HP_Duty) + 1, (R0) + 1
000704 C035 F013          M         movff   (_HP_Duty) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000708 6A14               M         clrf    (R0)   + 2
00070A 6A15               M         clrf    (R0)   + 3
00070C 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
00070E EC59 F001          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000712 6E38               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000714 C013 F039          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00695 
                      00696 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00157           HP_Temp.highbyte =  %1100 | ((HP
                            _Duty & %11) << 4)
                      00697         AND?WCN _HP_Duty, 003h, T1
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
000718 0E03               M         movlw   low (003h)
00071A 1434               M         andwf   _HP_Duty, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00071C 6E22               M         movwf   T1
00071E 0E00               M         movlw   (003h) >> 8
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
000720 1435               M         andwf   _HP_Duty + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) & 8000h) != PREV_ALT)
                          M       if ((T1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1 + 1) & 8000h
                          M     endif
                          M     if ((((T1 + 1) & 0fffh) > BANKA_END) & (((T1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000722 6E23               M         movwf   T1 + 1
000724 6A24               M         clrf    T1   + 2
000726 6A25               M         clrf    T1   + 3
                      00698         SHIFTL?NCN      T1, 004h, T1
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T1)   == (T1))
                          M         CHK?RP  T1
                          M         rlcf    T1,   F
                          M         rlcf    (T1)   + 1, F
                          M         rlcf    (T1)   + 2, F
                          M         rlcf    (T1)   + 3, F
                          M       else
                          M         CHK?RP  T1
                          M         rlcf    T1,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 1, W
                          M         MOVE?AB (T1)   + 1
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M       endif
                          M     else
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000728 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00072C C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000730 C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000734 C025 F015          M         movff   (T1) + 3, (R0) + 3
000738 0E04               M         movlw   004h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
00073A EC4F F001          M         call    SHIFTL
                          M           else
                          M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00073E 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000740 C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
000744 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
000748 C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      00699         OR?CNB  00Ch, T1, _HP_Temp??HIGHBYTE
00074C 0E0C               M         movlw   00Ch
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00074E 1022               M         iorwf   T1,  W
                          M         MOVE?AB _HP_Temp??HIGHBYTE
                          M         CHK?RP  _HP_Temp??HIGHBYTE
                          M     if (((_HP_Temp??HIGHBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??HIGHBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??HIGHBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??HIGHBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??HIGHBYTE) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if (((_HP_Temp??HIGHBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??HIGHBYTE)
                          M PREV_BANK = high (_HP_Temp??HIGHBYTE)
                          M       endif
                          M     endif
000750 6E39               M         movwf   _HP_Temp??HIGHBYTE
                      00700 
                      00701 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00159           if TMR2ON then              ; if
                             Timer2 is running
                      00702         CMPF?TL _TMR2ON, L00025
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, T2CON, 002h,  L00025
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00025))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  T2CON
                          M       if ((0)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   T2CON, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M             else
                          M         bov     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000752 A4BA               M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
000754 EFB1 F003          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 3ffh))
                          M         goto    L00025
                          M             else
                          M         bra     L00025
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00703 
                      00704 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00160               TMR2IF = 0
                      00705         MOVE?CT 000h, _TMR2IF
                          M         CHK?RP  PIR1
                          M     if (((PIR1)  & 8000h) != PREV_ALT)
                          M       if ((PIR1)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PIR1)  & 8000h
                          M     endif
                          M     if ((((PIR1)  & 0fffh) > BANKA_END) & (((PIR1)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PIR1)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PIR1)
                          M PREV_BANK = high (PIR1)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PIR1,   001h
                          M     else
000758 929E               M         bcf     PIR1,   001h
                          M     endif
                      00706 
                      00707 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00161               while TMR2IF = 0 : wend ; le
                            t current cycle complete
                      00708         LABEL?L L00027  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00027
                          M         XALL
                          M     else
00075A                    M L00027
                          M     endif
                      00709         CMPNE?TCL       _TMR2IF, 000h, L00028
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         BIT?GOTO 1, PIR1,  001h,  L00028
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00028))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PIR1)  > BANKA_END) & ((PIR1)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PIR1
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
                          M         btfsc   PIR1,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M       else
                          M         if ((L00028) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M         else
                          M           if ((L00028) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M           else
                          M             if ((L00028) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M             else
                          M         bov     L00028
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
00075A B29E               M         btfsc   PIR1,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00028
                          M       else
                          M         if ((L00028) < 1)
                          M         goto    L00028
                          M         else
                          M           if ((L00028) > $)
00075C EFB1 F003          M         goto    L00028
                          M           else
                          M             if ((L00028) < ($ - 3ffh))
                          M         goto    L00028
                          M             else
                          M         bra     L00028
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
                          M         BIT?GOTO 0, PIR1,  001h,  L00028
                          M       else
                          M         L?GOTO  L00028
                          M       endif
                          M     endif
                      00710 
                      00711 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00161               while TMR2IF = 0 : wend ; le
                            t current cycle complete
                      00712         GOTO?L  L00027
                          M         L?GOTO  L00027
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00027))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00027
                          M     else
                          M       if ((L00027) < 1)
                          M         goto    L00027
                          M       else
                          M         if ((L00027) > $)
                          M         goto    L00027
                          M         else
                          M           if ((L00027) < ($ - 3ffh))
                          M         goto    L00027
                          M           else
000760 D7FC               M         bra     L00027
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00713         LABEL?L L00028  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00028
                          M         XALL
                          M     else
000762                    M L00028
                          M     endif
                      00714 
                      00715 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00162           endif
                      00716         LABEL?L L00025  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00025
                          M         XALL
                          M     else
000762                    M L00025
                          M     endif
                      00717 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00718 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00164           Branch HP_Channel,[PutCH_Done,Pu
                            tCH_1,PutCH_2,PutCH_3,PutCH_4,PutCH_5]
                      00719         BRANCH?BCL      _HP_Channel, 006h, L00002
  0000                    M     local jmptbl
                          M         MOVE?BA _HP_Channel
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
000762 5058               M         movf    _HP_Channel, W
000764 6E12               M         movwf   R0
000766 0805               M         sublw   (006h) - 1
                          M         BIT?GOTO 0, STATUS, C, L00002
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00002))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M       else
                          M         if ((L00002) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M         else
                          M           if ((L00002) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00002
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00002) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M             else
                          M         bov     L00002
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000768 A0D8               M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00002
                          M       else
                          M         if ((L00002) < 1)
                          M         goto    L00002
                          M         else
                          M           if ((L00002) > $)
00076A EFC9 F003          M         goto    L00002
                          M           else
                          M             if ((L00002) < ($ - 3ffh))
                          M         goto    L00002
                          M             else
                          M         bra     L00002
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
00076E 6AFA               M         clrf    PCLATH
000770 6AFB               M         clrf    PCLATU
000772 3612               M         rlcf    R0, F
000774 36FA               M         rlcf    PCLATH, F
000776 0E86               M         movlw   low (jmptbl)
000778 2612               M         addwf   R0, F
00077A 0E07               M         movlw   high (jmptbl)
00077C 22FA               M         addwfc  PCLATH, F
00077E 0E00               M         movlw   upper (jmptbl)
000780 22FB               M         addwfc  PCLATU, F
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000782 5012               M         movf    R0, W
000784 6EF9               M         movwf   PCL
000786                    M jmptbl
                      00720         BRGOTO?L        _PutCH_Done
000786 D021               M         bra     _PutCH_Done
                      00721         BRGOTO?L        _PutCH_1
000788 D004               M         bra     _PutCH_1
                      00722         BRGOTO?L        _PutCH_2
00078A D009               M         bra     _PutCH_2
                      00723         BRGOTO?L        _PutCH_3
00078C D00E               M         bra     _PutCH_3
                      00724         BRGOTO?L        _PutCH_4
00078E D013               M         bra     _PutCH_4
                      00725         BRGOTO?L        _PutCH_5
000790 D018               M         bra     _PutCH_5
                      00726 
                      00727         LABEL?L L00002  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00002
                          M         XALL
                          M     else
000792                    M L00002
                          M     endif
                      00728 
                      00729 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00166           PutCH_1:  
                      00730 
                      00731         LABEL?L _PutCH_1        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_1
                          M         XALL
                          M     else
000792                    M _PutCH_1
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00732 
                      00733 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00167                   ASM
                      00734 
                      00735         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00736 
                      00737                   ifdef CCP1CON
                      00738                     MOVE?BB  _HP_Temp, CCPR1L
000792 C038 FFBE          M         movff   _HP_Temp, CCPR1L
                      00739                     MOVE?BB  _HP_Temp + 1, CCP1CON
000796 C039 FFBD          M         movff   _HP_Temp + 1, CCP1CON
00079A EFE5 F003      00740                     goto _PutCH_Done
                      00741                   endif  
                      00742                 
                      00743 
                      00744         ENDASM?
                      00745 
                      00746 
                      00747 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00174           PutCH_2:  
                      00748 
                      00749         LABEL?L _PutCH_2        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_2
                          M         XALL
                          M     else
00079E                    M _PutCH_2
                          M     endif
                      00750 
                      00751 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00175                   ASM
                      00752 
                      00753         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00754 
                      00755                   ifdef CCP2CON  
                      00756                     MOVE?BB  _HP_Temp, CCPR2L
00079E C038 FF67          M         movff   _HP_Temp, CCPR2L
                      00757                     MOVE?BB  _HP_Temp + 1, CCP2CON
0007A2 C039 FF66          M         movff   _HP_Temp + 1, CCP2CON
0007A6 EFE5 F003      00758                     goto _PutCH_Done
                      00759                   endif  
                      00760                 
                      00761 
                      00762         ENDASM?
                      00763 
                      00764 
                      00765 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00182           PutCH_3:  
                      00766 
                      00767         LABEL?L _PutCH_3        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_3
                          M         XALL
                          M     else
0007AA                    M _PutCH_3
                          M     endif
                      00768 
                      00769 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00183                   ASM
                      00770 
                      00771         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00772 
                      00773                   ifdef CCP3CON  
                      00774                     MOVE?BB  _HP_Temp, CCPR3L
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007AA C038 FF5E          M         movff   _HP_Temp, CCPR3L
                      00775                     MOVE?BB  _HP_Temp + 1, CCP3CON
0007AE C039 FF5D          M         movff   _HP_Temp + 1, CCP3CON
0007B2 EFE5 F003      00776                     goto _PutCH_Done
                      00777                   endif  
                      00778                 
                      00779 
                      00780         ENDASM?
                      00781 
                      00782 
                      00783 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00190           PutCH_4:  
                      00784 
                      00785         LABEL?L _PutCH_4        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_4
                          M         XALL
                          M     else
0007B6                    M _PutCH_4
                          M     endif
                      00786 
                      00787 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00191                   ASM
                      00788 
                      00789         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00790 
                      00791                   ifdef CCP4CON  
                      00792                     MOVE?BB  _HP_Temp, CCPR4L
0007B6 C038 FF58          M         movff   _HP_Temp, CCPR4L
                      00793                     MOVE?BB  _HP_Temp + 1, CCP4CON
0007BA C039 FF57          M         movff   _HP_Temp + 1, CCP4CON
0007BE EFE5 F003      00794                     goto _PutCH_Done
                      00795                   endif  
                      00796                 
                      00797 
                      00798         ENDASM?
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00799 
                      00800 
                      00801 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00198           PutCH_5:
                      00802 
                      00803         LABEL?L _PutCH_5        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_5
                          M         XALL
                          M     else
0007C2                    M _PutCH_5
                          M     endif
                      00804 
                      00805 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00199                   ASM
                      00806 
                      00807         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00808 
                      00809                   ifdef CCP5CON  
                      00810                     MOVE?BB  _HP_Temp, CCPR5L
0007C2 C038 FF55          M         movff   _HP_Temp, CCPR5L
                      00811                     MOVE?BB  _HP_Temp + 1, CCP5CON
0007C6 C039 FF54          M         movff   _HP_Temp + 1, CCP5CON
                      00812                   endif  
                      00813                 
                      00814 
                      00815         ENDASM?
                      00816 
                      00817 
                      00818 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00206       PutCH_Done:
                      00819 
                      00820         LABEL?L _PutCH_Done     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_Done
                          M         XALL
                          M     else
0007CA                    M _PutCH_Done
                          M     endif
                      00821 
                      00822 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00207       endif
                      00823         LABEL?L L00023  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00023
                          M         XALL
                          M     else
0007CA                    M L00023
                          M     endif
                      00824 
                      00825 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00211       if TMR2ON = 0 then TMR2ON = 1     ; 
                            Start Timer2 if not already running
                      00826         CMPNE?TCL       _TMR2ON, 000h, L00029
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, T2CON, 002h,  L00029
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00029))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  T2CON
                          M       if ((1)      == 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M             else
                          M         bov     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
0007CA B4BA               M         btfsc   T2CON, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
0007CC EFE9 F003          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 3ffh))
                          M         goto    L00029
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             else
                          M         bra     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
                          M         BIT?GOTO 0, T2CON, 002h,  L00029
                          M       else
                          M         L?GOTO  L00029
                          M       endif
                          M     endif
                      00827         MOVE?CT 001h, _TMR2ON
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0007D0 84BA               M         bsf     T2CON,  002h
                          M     else
                          M         bcf     T2CON,  002h
                          M     endif
                      00828         LABEL?L L00029  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00029
                          M         XALL
                          M     else
0007D2                    M L00029
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00829 
                      00830 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00213       if (PSchanged | PR2changed) = 1 then
                      00831         OR?TTN  _PSchanged, _PR2changed, T1
0007D2 6AE8               M         clrf    WREG
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
0007D4 B459               M         btfsc   _HP_Flags, 002h
0007D6 0F01               M         addlw   1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
0007D8 B659               M         btfsc   _HP_Flags, 003h
0007DA 0901               M         iorlw   1
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0007DC 6E22               M         movwf   T1
0007DE 6A23               M         clrf    (T1)   + 1
0007E0 6A24               M         clrf    (T1)   + 2
0007E2 6A25               M         clrf    (T1)   + 3
                      00832         CMPNE?NCL       T1, 001h, L00031
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
0007E4 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0007E8 C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
0007EC C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
0007F0 C025 F015          M         movff   (T1) + 3, (R0) + 3
                          M         MOVE?CB (001h) >> 24, R1 + 3
                          M         CHK?RP  R1 + 3
                          M     if (((R1 + 3) & 8000h) != PREV_ALT)
                          M       if ((R1 + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 3) & 8000h
                          M     endif
                          M     if ((((R1 + 3) & 0fffh) > BANKA_END) & (((R1 + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 3)
                          M PREV_BANK = high (R1 + 3)
                          M       endif
                          M     endif
                          M     if (low ((001h) >> 24) == 0)
0007F4 6A19               M         clrf    R1 + 3
                          M     else
                          M       if (low ((001h) >> 24) == 255)
                          M         setf    R1 + 3
                          M       else
                          M         movlw   low ((001h) >> 24)
                          M         movwf   R1 + 3
                          M       endif
                          M     endif
                          M         MOVE?CB upper (001h), R1 + 2
                          M         CHK?RP  R1 + 2
                          M     if (((R1 + 2) & 8000h) != PREV_ALT)
                          M       if ((R1 + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 2) & 8000h
                          M     endif
                          M     if ((((R1 + 2) & 0fffh) > BANKA_END) & (((R1 + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 2) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (R1 + 2)
                          M PREV_BANK = high (R1 + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (001h)) == 0)
0007F6 6A18               M         clrf    R1 + 2
                          M     else
                          M       if (low (upper (001h)) == 255)
                          M         setf    R1 + 2
                          M       else
                          M         movlw   low (upper (001h))
                          M         movwf   R1 + 2
                          M       endif
                          M     endif
                          M         MOVE?CB high (001h), R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low (high (001h)) == 0)
0007F8 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low (high (001h)) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low (high (001h))
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (001h)
0007FA 0E01               M         movlw   low (low (001h))
                          M         L?CALL  CMPNE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    CMPNE
                          M     else
                          M       if ((CMPNE) < 1)
                          M         call    CMPNE
                          M       else
                          M         if ((CMPNE) > $)
                          M         call    CMPNE
                          M         else
                          M           if ((CMPNE) < ($ - 3ffh))
0007FC EC67 F001          M         call    CMPNE
                          M           else
                          M         rcall   CMPNE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00031
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00031))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M             else
                          M         bov     L00031
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000800 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
000802 EF1A F004          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 3ffh))
                          M         goto    L00031
                          M             else
                          M         bra     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00833 
                      00834 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00214           TMR2IF = 0
                      00835         MOVE?CT 000h, _TMR2IF
                          M         CHK?RP  PIR1
                          M     if (((PIR1)  & 8000h) != PREV_ALT)
                          M       if ((PIR1)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PIR1)  & 8000h
                          M     endif
                          M     if ((((PIR1)  & 0fffh) > BANKA_END) & (((PIR1)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PIR1)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PIR1)
                          M PREV_BANK = high (PIR1)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PIR1,   001h
                          M     else
000806 929E               M         bcf     PIR1,   001h
                          M     endif
                      00836 
                      00837 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00215           while !TMR2IF : wend          ; 
                            let current cycle complete
                      00838         LABEL?L L00033  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00033
                          M         XALL
                          M     else
000808                    M L00033
                          M     endif
                      00839         CMPT?TL _TMR2IF, L00034
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PIR1,  001h,  L00034
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00034))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PIR1)  > BANKA_END) & ((PIR1)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PIR1
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
                          M         btfsc   PIR1,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00034
                          M       else
                          M         if ((L00034) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M         else
                          M           if ((L00034) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M           else
                          M             if ((L00034) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M             else
                          M         bov     L00034
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
000808 B29E               M         btfsc   PIR1,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00034
                          M       else
                          M         if ((L00034) < 1)
                          M         goto    L00034
                          M         else
                          M           if ((L00034) > $)
00080A EF08 F004          M         goto    L00034
                          M           else
                          M             if ((L00034) < ($ - 3ffh))
                          M         goto    L00034
                          M             else
                          M         bra     L00034
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00840 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00841 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00215           while !TMR2IF : wend          ; 
                            let current cycle complete
                      00842         GOTO?L  L00033
                          M         L?GOTO  L00033
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00033))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00033
                          M     else
                          M       if ((L00033) < 1)
                          M         goto    L00033
                          M       else
                          M         if ((L00033) > $)
                          M         goto    L00033
                          M         else
                          M           if ((L00033) < ($ - 3ffh))
                          M         goto    L00033
                          M           else
00080E D7FC               M         bra     L00033
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00843         LABEL?L L00034  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00034
                          M         XALL
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
000810                    M L00034
                          M     endif
                      00844 
                      00845 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00217           if PSchanged then             ; 
                            set T2 prescaler
                      00846         CMPF?TL _PSchanged, L00035
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 002h, L00035
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00035))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 002h
                          M       else
                          M         btfsc   _HP_Flags, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M             else
                          M         bov     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000810 A459               M         btfss   _HP_Flags, 002h
                          M       else
                          M         btfsc   _HP_Flags, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
000812 EF14 F004          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 3ffh))
                          M         goto    L00035
                          M             else
                          M         bra     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00847 
                      00848 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00218               PSchanged = 0
                      00849         MOVE?CT 000h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 002h
                          M     else
000816 9459               M         bcf     _HP_Flags, 002h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00850 
                      00851 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00219               T2CKPS0 = PS0
                      00852         MOVE?TT _PS0, _T2CKPS0
                          M     if (((_HP_Flags) <= BANKA_END) | ((_HP_Flags) >= (0f01h + BANKA_END)))
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
000818 B059               M         btfsc   _HP_Flags, 000h
00081A 80BA               M         bsf     T2CON,  000h
00081C A059               M         btfss   _HP_Flags, 000h
00081E 90BA               M         bcf     T2CON,  000h
                          M     else
                          M       if (((_HP_Flags) & 0f00h) == ((T2CON) & 0f00h))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 000h
                          M         bsf     T2CON,  000h
                          M         btfss   _HP_Flags, 000h
                          M         bcf     T2CON,  000h
                          M       else
                          M           if (((T2CON)  <= BANKA_END) | ((T2CON)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 000h
                          M         bsf     T2CON,  000h
                          M         btfss   _HP_Flags, 000h
                          M         bcf     T2CON,  000h
                          M           else
                          M         MOVE?TA _HP_Flags, 000h
                          M         MOVE?AT T2CON,  000h
                          M           endif
                          M       endif
                          M     endif
                      00853 
                      00854 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00220               T2CKPS1 = PS1
                      00855         MOVE?TT _PS1, _T2CKPS1
                          M     if (((_HP_Flags) <= BANKA_END) | ((_HP_Flags) >= (0f01h + BANKA_END)))
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
000820 B259               M         btfsc   _HP_Flags, 001h
000822 82BA               M         bsf     T2CON,  001h
000824 A259               M         btfss   _HP_Flags, 001h
000826 92BA               M         bcf     T2CON,  001h
                          M     else
                          M       if (((_HP_Flags) & 0f00h) == ((T2CON) & 0f00h))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 001h
                          M         bsf     T2CON,  001h
                          M         btfss   _HP_Flags, 001h
                          M         bcf     T2CON,  001h
                          M       else
                          M           if (((T2CON)  <= BANKA_END) | ((T2CON)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 001h
                          M         bsf     T2CON,  001h
                          M         btfss   _HP_Flags, 001h
                          M         bcf     T2CON,  001h
                          M           else
                          M         MOVE?TA _HP_Flags, 001h
                          M         MOVE?AT T2CON,  001h
                          M           endif
                          M       endif
                          M     endif
                      00856 
                      00857 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00221           endif
                      00858         LABEL?L L00035  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00035
                          M         XALL
                          M     else
000828                    M L00035
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00859 
                      00860 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00223           if PR2changed then            ; 
                            set PR2
                      00861         CMPF?TL _PR2changed, L00037
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 003h, L00037
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00037))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 003h
                          M       else
                          M         btfsc   _HP_Flags, 003h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M             else
                          M         bov     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000828 A659               M         btfss   _HP_Flags, 003h
                          M       else
                          M         btfsc   _HP_Flags, 003h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
00082A EF1A F004          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 3ffh))
                          M         goto    L00037
                          M             else
                          M         bra     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00862 
                      00863 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00224               PR2changed = 0
                      00864         MOVE?CT 000h, _PR2changed
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 003h
                          M     else
00082E 9659               M         bcf     _HP_Flags, 003h
                          M     endif
                      00865 
                      00866 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00225               PR2 = HP_PR2
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00867         MOVE?BB _HP_PR2, PR2
000830 C05A FFBB          M         movff   _HP_PR2, PR2
                      00868 
                      00869 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00226           endif
                      00870         LABEL?L L00037  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00037
                          M         XALL
                          M     else
000834                    M L00037
                          M     endif
                      00871 
                      00872 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00227       endif
                      00873         LABEL?L L00031  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00031
                          M         XALL
                          M     else
000834                    M L00031
                          M     endif
                      00874 
                      00875 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00228   return
                      00876         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000834 0012               M         return
                      00877 
                      00878 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\HPWM10_L.PBP      00231   OverHPWM10:
                      00879 
                      00880         LABEL?L _OverHPWM10     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _OverHPWM10
                          M         XALL
                          M     else
000836                    M _OverHPWM10
                          M     endif
                      00881 
                      00882 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00003   include "ALLDIGITAL.pbp"
                      00883 
                      00884 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\ALLDIGITAL.PBP    00026   ASM
                      00885 
                      00886         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00887 
                      00888 ;----[Module defaults]------------------------------------------------------
                      00889   #define SHOWDIGITALDEFAULT  0
                      00890   ifdef SHOWDIGITAL
                      00891 SHOWDIGITALRESULT = SHOWDIGITAL
                      00892   else
  00000000            00893 SHOWDIGITALRESULT = SHOWDIGITALDEFAULT
                      00894   endif
                      00895   ifndef PM_USED
                      00896     ifndef ADLISTALL
                          M         list
                          M       endif
                          M       MOVE?CB  0,   ANSELA
                          M         CHK?RP  ANSELA
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((ANSELA) & 8000h) != PREV_ALT)
                          M       if ((ANSELA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELA) & 8000h
                          M     endif
                          M     if ((((ANSELA) & 0fffh) > BANKA_END) & (((ANSELA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELA) & 0f00h) != (PREV_BANK << 8))
000836 010F               M         movlb   high (ANSELA)
  0000000F                M PREV_BANK = high (ANSELA)
                          M       endif
                          M     endif
                          M     if (low (0)   == 0)
000838 6B38               M         clrf    ANSELA
                          M     else
                          M       if (low (0)   == 255)
                          M         setf    ANSELA
                          M       else
                          M         movlw   low (0)
                          M         movwf   ANSELA
                          M       endif
                          M     endif
                          M       if (SHOWDIGITALRESULT == 1)
                          M         ifndef PM_USED
                          M           messg ANSELA = 0
                          M         endif
                          M       endif
                          M       ifndef PM_USED
                          M         ifndef ADLISTALL
                          M         list
                          M       endif
                          M       MOVE?CB  0,   ANSELB
                          M         CHK?RP  ANSELB
                          M     if (((ANSELB) & 8000h) != PREV_ALT)
                          M       if ((ANSELB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELB) & 8000h
                          M     endif
                          M     if ((((ANSELB) & 0fffh) > BANKA_END) & (((ANSELB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELB)
                          M PREV_BANK = high (ANSELB)
                          M       endif
                          M     endif
                          M     if (low (0)   == 0)
00083A 6B39               M         clrf    ANSELB
                          M     else
                          M       if (low (0)   == 255)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         setf    ANSELB
                          M       else
                          M         movlw   low (0)
                          M         movwf   ANSELB
                          M       endif
                          M     endif
                          M       if (SHOWDIGITALRESULT == 1)
                          M         ifndef PM_USED
                          M           messg ANSELB = 0
                          M         endif
                          M       endif
                          M       ifndef PM_USED
                          M         ifndef ADLISTALL
                      01057     list
                      01058   endif
                      01059 
                      01060 
                      01061         ENDASM?
                      01062 
                      01063 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00005   #CONFIG
                      01064 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00046   DEFINE LCD_DREG PORTA 
                      01065 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00047   DEFINE LCD_DBIT 0
                      01066 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00048   DEFINE LCD_RSREG PORTA
                      01067 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00049   DEFINE LCD_RSBIT 5 
                      01068 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00050   DEFINE LCD_EREG PORTA
                      01069 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00051   DEFINE LCD_EBIT 4 
                      01070 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00052   DEFINE LCD_BITS 4 
                      01071 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00053   DEFINE LCD_LINE 2
                      01072 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00054   DEFINE I2C_SCLOUT 1
                      01073 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00055   DEFINE I2C_SLOW 1
                      01074 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00056   define NO_CLRWDT 1
                      01075 
                      01076 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00058   INTCON2.7 = 0 
                      01077         MOVE?CT 000h, _INTCON2??7
                          M         CHK?RP  INTCON2
                          M     if (((INTCON2) & 8000h) != PREV_ALT)
                          M       if ((INTCON2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (INTCON2) & 8000h
                          M     endif
                          M     if ((((INTCON2) & 0fffh) > BANKA_END) & (((INTCON2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((INTCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (INTCON2)
                          M PREV_BANK = high (INTCON2)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     INTCON2, 007h
                          M     else
00083C 9EF1               M         bcf     INTCON2, 007h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01078 
                      01079 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00059   WPUB = %11110111
                      01080         MOVE?CB 0F7h, WPUB
                          M         CHK?RP  WPUB
                          M     if (((WPUB)  & 8000h) != PREV_ALT)
                          M       if ((WPUB)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (WPUB)  & 8000h
                          M     endif
                          M     if ((((WPUB)  & 0fffh) > BANKA_END) & (((WPUB)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((WPUB)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (WPUB)
                          M PREV_BANK = high (WPUB)
                          M       endif
                          M     endif
                          M     if (low (0F7h) == 0)
                          M         clrf    WPUB
                          M     else
                          M       if (low (0F7h) == 255)
                          M         setf    WPUB
                          M       else
00083E 0EF7               M         movlw   low (0F7h)
000840 6E61               M         movwf   WPUB
                          M       endif
                          M     endif
                      01081 
                      01082 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00060   OSCCON  = %1111000
                      01083         MOVE?CB 078h, OSCCON
                          M         CHK?RP  OSCCON
                          M     if (((OSCCON) & 8000h) != PREV_ALT)
                          M       if ((OSCCON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON) & 8000h
                          M     endif
                          M     if ((((OSCCON) & 0fffh) > BANKA_END) & (((OSCCON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (078h) == 0)
                          M         clrf    OSCCON
                          M     else
                          M       if (low (078h) == 255)
                          M         setf    OSCCON
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000842 0E78               M         movlw   low (078h)
000844 6ED3               M         movwf   OSCCON
                          M       endif
                          M     endif
                      01084 
                      01085 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00061   OSCCON2 = %0000000
                      01086         MOVE?CB 000h, OSCCON2
                          M         CHK?RP  OSCCON2
                          M     if (((OSCCON2) & 8000h) != PREV_ALT)
                          M       if ((OSCCON2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON2) & 8000h
                          M     endif
                          M     if ((((OSCCON2) & 0fffh) > BANKA_END) & (((OSCCON2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON2)
                          M PREV_BANK = high (OSCCON2)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000846 6AD2               M         clrf    OSCCON2
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    OSCCON2
                          M       else
                          M         movlw   low (000h)
                          M         movwf   OSCCON2
                          M       endif
                          M     endif
                      01087 
                      01088 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00062   OSCTUNE = %10000000
                      01089         MOVE?CB 080h, OSCTUNE
                          M         CHK?RP  OSCTUNE
                          M     if (((OSCTUNE) & 8000h) != PREV_ALT)
                          M       if ((OSCTUNE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCTUNE) & 8000h
                          M     endif
                          M     if ((((OSCTUNE) & 0fffh) > BANKA_END) & (((OSCTUNE) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCTUNE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCTUNE)
                          M PREV_BANK = high (OSCTUNE)
                          M       endif
                          M     endif
                          M     if (low (080h) == 0)
                          M         clrf    OSCTUNE
                          M     else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (080h) == 255)
                          M         setf    OSCTUNE
                          M       else
000848 0E80               M         movlw   low (080h)
00084A 6E9B               M         movwf   OSCTUNE
                          M       endif
                          M     endif
                      01090 
                      01091 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00063   T1CON = %00000111
                      01092         MOVE?CB 007h, T1CON
                          M         CHK?RP  T1CON
                          M     if (((T1CON) & 8000h) != PREV_ALT)
                          M       if ((T1CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1CON) & 8000h
                          M     endif
                          M     if ((((T1CON) & 0fffh) > BANKA_END) & (((T1CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1CON)
                          M PREV_BANK = high (T1CON)
                          M       endif
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    T1CON
                          M     else
                          M       if (low (007h) == 255)
                          M         setf    T1CON
                          M       else
00084C 0E07               M         movlw   low (007h)
00084E 6ECD               M         movwf   T1CON
                          M       endif
                          M     endif
                      01093 
                      01094 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00064   ANSELA = 0
                      01095         MOVE?CB 000h, ANSELA
                          M         CHK?RP  ANSELA
                          M     if (((ANSELA) & 8000h) != PREV_ALT)
                          M       if ((ANSELA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELA) & 8000h
                          M     endif
                          M     if ((((ANSELA) & 0fffh) > BANKA_END) & (((ANSELA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELA)
                          M PREV_BANK = high (ANSELA)
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (low (000h) == 0)
000850 6B38               M         clrf    ANSELA
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ANSELA
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ANSELA
                          M       endif
                          M     endif
                      01096 
                      01097 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00065   ANSELB = 0
                      01098         MOVE?CB 000h, ANSELB
                          M         CHK?RP  ANSELB
                          M     if (((ANSELB) & 8000h) != PREV_ALT)
                          M       if ((ANSELB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELB) & 8000h
                          M     endif
                          M     if ((((ANSELB) & 0fffh) > BANKA_END) & (((ANSELB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELB)
                          M PREV_BANK = high (ANSELB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000852 6B39               M         clrf    ANSELB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ANSELB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ANSELB
                          M       endif
                          M     endif
                      01099 
                      01100 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00066   ANSELC = %000010
                      01101         MOVE?CB 002h, ANSELC
                          M         CHK?RP  ANSELC
                          M     if (((ANSELC) & 8000h) != PREV_ALT)
                          M       if ((ANSELC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELC) & 8000h
                          M     endif
                          M     if ((((ANSELC) & 0fffh) > BANKA_END) & (((ANSELC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELC)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (ANSELC)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    ANSELC
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    ANSELC
                          M       else
000854 0E02               M         movlw   low (002h)
000856 6F3A               M         movwf   ANSELC
                          M       endif
                          M     endif
                      01102 
                      01103 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00067   TRISC = 255
                      01104         MOVE?CB 0FFh, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) & 8000h) != PREV_ALT)
                          M       if ((TRISC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISC) & 8000h
                          M     endif
                          M     if ((((TRISC) & 0fffh) > BANKA_END) & (((TRISC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISC
                          M     else
                          M       if (low (0FFh) == 255)
000858 6894               M         setf    TRISC
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   TRISC
                          M       endif
                          M     endif
                      01105 
                      01106 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00068   TRISA = 255
                      01107         MOVE?CB 0FFh, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) & 8000h) != PREV_ALT)
                          M       if ((TRISA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISA) & 8000h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((TRISA) & 0fffh) > BANKA_END) & (((TRISA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISA
                          M     else
                          M       if (low (0FFh) == 255)
00085A 6892               M         setf    TRISA
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   TRISA
                          M       endif
                          M     endif
                      01108 
                      01109 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00069   TRISB = 255
                      01110         MOVE?CB 0FFh, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) & 8000h) != PREV_ALT)
                          M       if ((TRISB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISB) & 8000h
                          M     endif
                          M     if ((((TRISB) & 0fffh) > BANKA_END) & (((TRISB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISB)
                          M PREV_BANK = high (TRISB)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISB
                          M     else
                          M       if (low (0FFh) == 255)
00085C 6893               M         setf    TRISB
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   TRISB
                          M       endif
                          M     endif
                      01111 
                      01112 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00070   pause 200
                      01113         PAUSE?C 0C8h
                          M     if (((0C8h) >> 8) == 0)
                          M         MOVE?CA 0C8h
00085E 0EC8               M         movlw   low (0C8h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
000860 0100               M         movlb   0
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000862 EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((0C8h) >> 16) == 0)
                          M         MOVE?CB high (0C8h), R1 + 1
                          M         MOVE?CA low (0C8h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (0C8h) >> 24, R1 + 3
                          M         MOVE?CB upper (0C8h), R1 + 2
                          M         MOVE?CB high (0C8h), R1 + 1
                          M         MOVE?CA low (0C8h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01114 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00071   RTC             con %10100010
                      01115 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00072   EPROM           CON %10100000
                      01116 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00073   LM75            CON %10010001
                      01117 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00074   Strelica        con 126 
                      01118 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00075   PauzaZaTaster   con 100
                      01119 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00077   DEFINE I2C_SDA PORTC,0 
                      01120 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00078   DEFINE I2C_SCL PORTC,1 
                      01121 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00080   symbol BCKLIGHT        = PORTC.3
                      01122 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00081   symbol SDA             = PORTC.0
                      01123 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00082   symbol SCL             = PORTC.1
                      01124 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00083   symbol RELEJ1          = PORTC.4
                      01125 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00084   symbol RELEJ2          = PORTC.5
                      01126 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00085   symbol TASTLEVO        = PORTB.1
                      01127 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00086   symbol TASTDESNO       = PORTB.4
                      01128 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00087   symbol TASTGORE        = PORTB.6
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01129 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00088   symbol TASTDOLE        = PORTB.5
                      01130 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00089   symbol TASTOK          = PORTB.2
                      01131 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00090   symbol TASTODRZAVANJE  = PORTB.7
                      01132 
                      01133 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00092   low bcklight
                      01134         LOW?T   _BCKLIGHT
                          M         MOVE?CT 0, PORTC, 003h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  003h
                          M     else
000866 9682               M         bcf     PORTC,  003h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 003h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 003h
                          M     else
000868 9694               M         bcf     ((PORTC) + 12h), 003h
                          M     endif
                      01135 
                      01136 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00093   low relej1
                      01137         LOW?T   _RELEJ1
                          M         MOVE?CT 0, PORTC, 004h
                          M         CHK?RP  PORTC
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  004h
                          M     else
00086A 9882               M         bcf     PORTC,  004h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 004h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 004h
                          M     else
00086C 9894               M         bcf     ((PORTC) + 12h), 004h
                          M     endif
                      01138 
                      01139 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00094   low relej2
                      01140         LOW?T   _RELEJ2
                          M         MOVE?CT 0, PORTC, 005h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  005h
                          M     else
00086E 9A82               M         bcf     PORTC,  005h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 005h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 005h
                          M     else
000870 9A94               M         bcf     ((PORTC) + 12h), 005h
                          M     endif
                      01141 
                      01142 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00095   LOW portc.6
                      01143         LOW?T   _PORTC??6
                          M         MOVE?CT 0, PORTC, 006h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  006h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
000872 9C82               M         bcf     PORTC,  006h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 006h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 006h
                          M     else
000874 9C94               M         bcf     ((PORTC) + 12h), 006h
                          M     endif
                      01144 
                      01145 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00096   low portb.3
                      01146         LOW?T   _PORTB??3
                          M         MOVE?CT 0, PORTB, 003h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTB,  003h
                          M     else
000876 9681               M         bcf     PORTB,  003h
                          M     endif
                          M         MOVE?CT 0, ((PORTB) + 12h), 003h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 003h
                          M     else
000878 9693               M         bcf     ((PORTB) + 12h), 003h
                          M     endif
                      01147 
                      01148 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00097   low portb.0
                      01149         LOW?T   _PORTB??0
                          M         MOVE?CT 0, PORTB, 000h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTB,  000h
                          M     else
00087A 9081               M         bcf     PORTB,  000h
                          M     endif
                          M         MOVE?CT 0, ((PORTB) + 12h), 000h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 000h
                          M     else
00087C 9093               M         bcf     ((PORTB) + 12h), 000h
                          M     endif
                      01150 
                      01151 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00098   low portc.2
                      01152         LOW?T   _PORTC??2
                          M         MOVE?CT 0, PORTC, 002h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  002h
                          M     else
00087E 9482               M         bcf     PORTC,  002h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 002h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 002h
                          M     else
000880 9494               M         bcf     ((PORTC) + 12h), 002h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01153 
                      01154 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00099   input tastlevo
                      01155         INPUT?T _TASTLEVO
                          M         MOVE?CT 1, ((PORTB) + 12h), 001h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000882 8293               M         bsf     ((PORTB) + 12h), 001h
                          M     else
                          M         bcf     ((PORTB) + 12h), 001h
                          M     endif
                      01156 
                      01157 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00100   input tastdesno
                      01158         INPUT?T _TASTDESNO
                          M         MOVE?CT 1, ((PORTB) + 12h), 004h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000884 8893               M         bsf     ((PORTB) + 12h), 004h
                          M     else
                          M         bcf     ((PORTB) + 12h), 004h
                          M     endif
                      01159 
                      01160 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00101   input tastdole
                      01161         INPUT?T _TASTDOLE
                          M         MOVE?CT 1, ((PORTB) + 12h), 005h
                          M         CHK?RP  ((PORTB) + 12h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000886 8A93               M         bsf     ((PORTB) + 12h), 005h
                          M     else
                          M         bcf     ((PORTB) + 12h), 005h
                          M     endif
                      01162 
                      01163 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00102   input tastgore
                      01164         INPUT?T _TASTGORE
                          M         MOVE?CT 1, ((PORTB) + 12h), 006h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000888 8C93               M         bsf     ((PORTB) + 12h), 006h
                          M     else
                          M         bcf     ((PORTB) + 12h), 006h
                          M     endif
                      01165 
                      01166 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00103   input tastodrzavanje
                      01167         INPUT?T _TASTODRZAVANJE
                          M         MOVE?CT 1, ((PORTB) + 12h), 007h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
00088A 8E93               M         bsf     ((PORTB) + 12h), 007h
                          M     else
                          M         bcf     ((PORTB) + 12h), 007h
                          M     endif
                      01168 
                      01169 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00104   input tastok
                      01170         INPUT?T _TASTOK
                          M         MOVE?CT 1, ((PORTB) + 12h), 002h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
00088C 8493               M         bsf     ((PORTB) + 12h), 002h
                          M     else
                          M         bcf     ((PORTB) + 12h), 002h
                          M     endif
                      01171 
                      01172 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00211   CLEAR
                      01173         CLEAR?  
  0000                    M     local loop
                          M       ifdef USE_LFSR
                          M         lfsr    0, RAM_END
                          M       else
                          M         MOVE?CW RAM_END, FSR0L
                          M     ifdef USE_LINKER
                          M         CHK?RP  FSR0L
                          M         movlw   low (RAM_END)
                          M         movwf   FSR0L
                          M         movlw   high (RAM_END)
                          M         movwf   (FSR0L) + 1
                          M     else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CB low (RAM_END), FSR0L
                          M         CHK?RP  FSR0L
                          M     if (((FSR0L) & 8000h) != PREV_ALT)
                          M       if ((FSR0L) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (FSR0L) & 8000h
                          M     endif
                          M     if ((((FSR0L) & 0fffh) > BANKA_END) & (((FSR0L) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((FSR0L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (FSR0L)
                          M PREV_BANK = high (FSR0L)
                          M       endif
                          M     endif
                          M     if (low (low (RAM_END)) == 0)
                          M         clrf    FSR0L
                          M     else
                          M       if (low (low (RAM_END)) == 255)
00088E 68E9               M         setf    FSR0L
                          M       else
                          M         movlw   low (low (RAM_END))
                          M         movwf   FSR0L
                          M       endif
                          M     endif
                          M         MOVE?CB high (RAM_END), (FSR0L) + 1
                          M         CHK?RP  (FSR0L) + 1
                          M     if ((((FSR0L) + 1) & 8000h) != PREV_ALT)
                          M       if (((FSR0L) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((FSR0L) + 1) & 8000h
                          M     endif
                          M     if (((((FSR0L) + 1) & 0fffh) > BANKA_END) & ((((FSR0L) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((FSR0L) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((FSR0L) + 1)
                          M PREV_BANK = high ((FSR0L) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (RAM_END)) == 0)
                          M         clrf    (FSR0L) + 1
                          M     else
                          M       if (low (high (RAM_END)) == 255)
                          M         setf    (FSR0L) + 1
                          M       else
000890 0E05               M         movlw   low (high (RAM_END))
000892 6EEA               M         movwf   (FSR0L) + 1
                          M       endif
                          M     endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
000894 6AED               M loop    clrf    POSTDEC0
000896 50E9               M         movf    FSR0L, W
000898 10EA               M         iorwf   FSR0H, W
00089A E1FC               M         bnz     loop
00089C 6AEF               M         clrf    INDF0
                      01174 
                      01175 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00212   Frequency               = 30000
                      01176         MOVE?CW 000007530h, _Frequency
                          M     ifdef USE_LINKER
                          M         CHK?RP  _Frequency
                          M         movlw   low (000007530h)
                          M         movwf   _Frequency
                          M         movlw   high (000007530h)
                          M         movwf   (_Frequency) + 1
                          M     else
                          M         MOVE?CB low (000007530h), _Frequency
                          M         CHK?RP  _Frequency
                          M     if (((_Frequency) & 8000h) != PREV_ALT)
                          M       if ((_Frequency) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Frequency) & 8000h
                          M     endif
                          M     if ((((_Frequency) & 0fffh) > BANKA_END) & (((_Frequency) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Frequency)
                          M PREV_BANK = high (_Frequency)
                          M       endif
                          M     endif
                          M     if (low (low (000007530h)) == 0)
                          M         clrf    _Frequency
                          M     else
                          M       if (low (low (000007530h)) == 255)
                          M         setf    _Frequency
                          M       else
00089E 0E30               M         movlw   low (low (000007530h))
0008A0 6E32               M         movwf   _Frequency
                          M       endif
                          M     endif
                          M         MOVE?CB high (000007530h), (_Frequency) + 1
                          M         CHK?RP  (_Frequency) + 1
                          M     if ((((_Frequency) + 1) & 8000h) != PREV_ALT)
                          M       if (((_Frequency) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_Frequency) + 1) & 8000h
                          M     endif
                          M     if (((((_Frequency) + 1) & 0fffh) > BANKA_END) & ((((_Frequency) + 1) & 0fffh) < (0f01h + BANKA_END)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ))
                          M       if ((((_Frequency) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_Frequency) + 1)
                          M PREV_BANK = high ((_Frequency) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000007530h)) == 0)
                          M         clrf    (_Frequency) + 1
                          M     else
                          M       if (low (high (000007530h)) == 255)
                          M         setf    (_Frequency) + 1
                          M       else
0008A2 0E75               M         movlw   low (high (000007530h))
0008A4 6E33               M         movwf   (_Frequency) + 1
                          M       endif
                          M     endif
                          M     endif
                      01177 
                      01178 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00213   starostanjeDesno        = 1
                      01179         MOVE?CT 001h, _StaroStanjeDesno
                          M         CHK?RP  PB03
                          M     if (((PB03)  & 8000h) != PREV_ALT)
                          M       if ((PB03)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB03)  & 8000h
                          M     endif
                          M     if ((((PB03)  & 0fffh) > BANKA_END) & (((PB03)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB03)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB03)
                          M PREV_BANK = high (PB03)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008A6 882C               M         bsf     PB03,   004h
                          M     else
                          M         bcf     PB03,   004h
                          M     endif
                      01180 
                      01181 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00214   starostanjelevo         = 1 
                      01182         MOVE?CT 001h, _StaroStanjeLevo
                          M         CHK?RP  PB03
                          M     if (((PB03)  & 8000h) != PREV_ALT)
                          M       if ((PB03)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB03)  & 8000h
                          M     endif
                          M     if ((((PB03)  & 0fffh) > BANKA_END) & (((PB03)  & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((PB03)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB03)
                          M PREV_BANK = high (PB03)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008A8 8E2C               M         bsf     PB03,   007h
                          M     else
                          M         bcf     PB03,   007h
                          M     endif
                      01183 
                      01184 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00215   starostanjegore         = 1 
                      01185         MOVE?CT 001h, _StaroStanjeGore
                          M         CHK?RP  PB03
                          M     if (((PB03)  & 8000h) != PREV_ALT)
                          M       if ((PB03)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB03)  & 8000h
                          M     endif
                          M     if ((((PB03)  & 0fffh) > BANKA_END) & (((PB03)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB03)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB03)
                          M PREV_BANK = high (PB03)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008AA 8C2C               M         bsf     PB03,   006h
                          M     else
                          M         bcf     PB03,   006h
                          M     endif
                      01186 
                      01187 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00216   starostanjedole         = 1 
                      01188         MOVE?CT 001h, _StaroStanjeDole
                          M         CHK?RP  PB03
                          M     if (((PB03)  & 8000h) != PREV_ALT)
                          M       if ((PB03)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB03)  & 8000h
                          M     endif
                          M     if ((((PB03)  & 0fffh) > BANKA_END) & (((PB03)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB03)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB03)
                          M PREV_BANK = high (PB03)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008AC 8A2C               M         bsf     PB03,   005h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         bcf     PB03,   005h
                          M     endif
                      01189 
                      01190 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00217   StaroStanjeOk           = 1         
                      01191         MOVE?CT 001h, _StaroStanjeOk
                          M         CHK?RP  PB04
                          M     if (((PB04)  & 8000h) != PREV_ALT)
                          M       if ((PB04)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB04)  & 8000h
                          M     endif
                          M     if ((((PB04)  & 0fffh) > BANKA_END) & (((PB04)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB04)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB04)
                          M PREV_BANK = high (PB04)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008AE 822D               M         bsf     PB04,   001h
                          M     else
                          M         bcf     PB04,   001h
                          M     endif
                      01192 
                      01193 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00218   StaroStanjeOdrzavanje   = 1  
                      01194         MOVE?CT 001h, _StaroStanjeOdrzavanje
                          M         CHK?RP  PB04
                          M     if (((PB04)  & 8000h) != PREV_ALT)
                          M       if ((PB04)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB04)  & 8000h
                          M     endif
                          M     if ((((PB04)  & 0fffh) > BANKA_END) & (((PB04)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB04)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB04)
                          M PREV_BANK = high (PB04)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008B0 802D               M         bsf     PB04,   000h
                          M     else
                          M         bcf     PB04,   000h
                          M     endif
                      01195 
                      01196 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00219   odrzavanjemod = 0 
                      01197         MOVE?CT 000h, _OdrzavanjeMod
                          M         CHK?RP  PB02
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB02,   007h
                          M     else
0008B2 9E2B               M         bcf     PB02,   007h
                          M     endif
                      01198 
                      01199 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00220   desnibrojac = 1
                      01200         MOVE?CB 001h, _DesniBrojac
                          M         CHK?RP  _DesniBrojac
                          M     if (((_DesniBrojac) & 8000h) != PREV_ALT)
                          M       if ((_DesniBrojac) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DesniBrojac) & 8000h
                          M     endif
                          M     if ((((_DesniBrojac) & 0fffh) > BANKA_END) & (((_DesniBrojac) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DesniBrojac) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DesniBrojac)
                          M PREV_BANK = high (_DesniBrojac)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _DesniBrojac
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _DesniBrojac
                          M       else
0008B4 0E01               M         movlw   low (001h)
0008B6 6E55               M         movwf   _DesniBrojac
                          M       endif
                          M     endif
                      01201 
                      01202 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00221   BCKLIGHT = 1 
                      01203         MOVE?CT 001h, _BCKLIGHT
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008B8 8682               M         bsf     PORTC,  003h
                          M     else
                          M         bcf     PORTC,  003h
                          M     endif
                      01204 
                      01205 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00222   malibit = 1
                      01206         MOVE?CT 001h, _MaliBit
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0008BA 8C2A               M         bsf     PB01,   006h
                          M     else
                          M         bcf     PB01,   006h
                          M     endif
                      01207 
                      01208 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00223   I2Cwrite  sda, scl, lm75,1,[%00000000]
                      01209         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
0008BC 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
0008BE 6E0E               M         movwf   RR1
0008C0 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
0008C2 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
0008C4 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0008C6 6E0C               M         movwf   RM1
                      01210         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
0008C8 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0008CA 6E0F               M         movwf   RR2
0008CC 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
0008CE 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
0008D0 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
0008D2 6E0D               M         movwf   RM2
                      01211         I2CWRITE?C      _LM75
                          M     if ((high (_LM75)) != 0)
                          M         movlw   (_LM75) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_LM75)
0008D4 0E91               M         movlw   low (low (_LM75))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008D6 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01212         I2CWRITE?C      001h
                          M     if ((high (001h)) != 0)
                          M         movlw   (001h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (001h)
0008DA 0E01               M         movlw   low (low (001h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
0008DC EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01213         I2CWRITES?C     000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008E0 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITES
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITES
                          M     else
                          M       if ((I2CWRITES) < 1)
                          M         call    I2CWRITES
                          M       else
                          M         if ((I2CWRITES) > $)
                          M         call    I2CWRITES
                          M         else
                          M           if ((I2CWRITES) < ($ - 3ffh))
0008E2 EC1C F000          M         call    I2CWRITES
                          M           else
                          M         rcall   I2CWRITES
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01214 
                      01215 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00224   pause 20
                      01216         PAUSE?C 014h
                          M     if (((014h) >> 8) == 0)
                          M         MOVE?CA 014h
0008E6 0E14               M         movlw   low (014h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
0008E8 EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((014h) >> 16) == 0)
                          M         MOVE?CB high (014h), R1 + 1
                          M         MOVE?CA low (014h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (014h) >> 24, R1 + 3
                          M         MOVE?CB upper (014h), R1 + 2
                          M         MOVE?CB high (014h), R1 + 1
                          M         MOVE?CA low (014h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01217 
                      01218 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00225   gosub UpisiVreme
                      01219         GOSUB?L _UpisiVreme
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _UpisiVreme
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         call    _UpisiVreme
                          M     else
                          M       if ((_UpisiVreme) < 1)
                          M         call    _UpisiVreme
                          M       else
                          M         if ((_UpisiVreme) > $)
0008EC EC9A F005          M         call    _UpisiVreme
                          M         else
                          M           if ((_UpisiVreme) < ($ - 3ffh))
                          M         call    _UpisiVreme
                          M           else
                          M         rcall   _UpisiVreme
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0008F0                    M dlabel
                      01220 
                      01221 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00226    Frequency = 30000
                      01222         MOVE?CW 000007530h, _Frequency
                          M     ifdef USE_LINKER
                          M         CHK?RP  _Frequency
                          M         movlw   low (000007530h)
                          M         movwf   _Frequency
                          M         movlw   high (000007530h)
                          M         movwf   (_Frequency) + 1
                          M     else
                          M         MOVE?CB low (000007530h), _Frequency
                          M         CHK?RP  _Frequency
                          M     if (((_Frequency) & 8000h) != PREV_ALT)
                          M       if ((_Frequency) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Frequency) & 8000h
                          M     endif
                          M     if ((((_Frequency) & 0fffh) > BANKA_END) & (((_Frequency) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Frequency)
                          M PREV_BANK = high (_Frequency)
                          M       endif
                          M     endif
                          M     if (low (low (000007530h)) == 0)
                          M         clrf    _Frequency
                          M     else
                          M       if (low (low (000007530h)) == 255)
                          M         setf    _Frequency
                          M       else
0008F0 0E30               M         movlw   low (low (000007530h))
0008F2 6E32               M         movwf   _Frequency
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         MOVE?CB high (000007530h), (_Frequency) + 1
                          M         CHK?RP  (_Frequency) + 1
                          M     if ((((_Frequency) + 1) & 8000h) != PREV_ALT)
                          M       if (((_Frequency) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_Frequency) + 1) & 8000h
                          M     endif
                          M     if (((((_Frequency) + 1) & 0fffh) > BANKA_END) & ((((_Frequency) + 1) & 0fffh) < (0f01h + BANKA_END)
                            ))
                          M       if ((((_Frequency) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_Frequency) + 1)
                          M PREV_BANK = high ((_Frequency) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000007530h)) == 0)
                          M         clrf    (_Frequency) + 1
                          M     else
                          M       if (low (high (000007530h)) == 255)
                          M         setf    (_Frequency) + 1
                          M       else
0008F4 0E75               M         movlw   low (high (000007530h))
0008F6 6E33               M         movwf   (_Frequency) + 1
                          M       endif
                          M     endif
                          M     endif
                      01223 
                      01224 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00228       DutyCycleL1 = 512
                      01225         MOVE?CN 000000200h, _DutyCycleL1
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL1
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL1
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL1) + 1
                          M         movlw   upper (000000200h)
                          M         movwf   (_DutyCycleL1) + 2
                          M         movlw   (000000200h) >> 24
                          M         movwf   (_DutyCycleL1) + 3
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL1
                          M         CHK?RP  _DutyCycleL1
                          M     if (((_DutyCycleL1) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL1) & 8000h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((_DutyCycleL1) & 0fffh) > BANKA_END) & (((_DutyCycleL1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL1)
                          M PREV_BANK = high (_DutyCycleL1)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
0008F8 6B7B               M         clrf    _DutyCycleL1
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL1
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL1
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL1) + 1
                          M         CHK?RP  (_DutyCycleL1) + 1
                          M     if ((((_DutyCycleL1) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL1) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL1) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL1) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL1) + 1)
                          M PREV_BANK = high ((_DutyCycleL1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL1) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL1) + 1
                          M       else
0008FA 0E02               M         movlw   low (high (000000200h))
0008FC 6F7C               M         movwf   (_DutyCycleL1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (000000200h), (_DutyCycleL1) + 2
                          M         CHK?RP  (_DutyCycleL1) + 2
                          M     if ((((_DutyCycleL1) + 2) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL1) + 2) & 8000h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((((_DutyCycleL1) + 2) & 0fffh) > BANKA_END) & ((((_DutyCycleL1) + 2) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL1) + 2)
                          M PREV_BANK = high ((_DutyCycleL1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (000000200h)) == 0)
0008FE 6B7D               M         clrf    (_DutyCycleL1) + 2
                          M     else
                          M       if (low (upper (000000200h)) == 255)
                          M         setf    (_DutyCycleL1) + 2
                          M       else
                          M         movlw   low (upper (000000200h))
                          M         movwf   (_DutyCycleL1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (000000200h) >> 24, (_DutyCycleL1) + 3
                          M         CHK?RP  (_DutyCycleL1) + 3
                          M     if ((((_DutyCycleL1) + 3) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL1) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL1) + 3) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL1) + 3) & 0fffh) > BANKA_END) & ((((_DutyCycleL1) + 3) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL1) + 3)
                          M PREV_BANK = high ((_DutyCycleL1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((000000200h) >> 24) == 0)
000900 6B7E               M         clrf    (_DutyCycleL1) + 3
                          M     else
                          M       if (low ((000000200h) >> 24) == 255)
                          M         setf    (_DutyCycleL1) + 3
                          M       else
                          M         movlw   low ((000000200h) >> 24)
                          M         movwf   (_DutyCycleL1) + 3
                          M       endif
                          M     endif
                          M     endif
                      01226 
                      01227 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00229       DutyCycleL2 = 512
                      01228         MOVE?CN 000000200h, _DutyCycleL2
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL2
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL2
                          M         movlw   high (000000200h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (_DutyCycleL2) + 1
                          M         movlw   upper (000000200h)
                          M         movwf   (_DutyCycleL2) + 2
                          M         movlw   (000000200h) >> 24
                          M         movwf   (_DutyCycleL2) + 3
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL2
                          M         CHK?RP  _DutyCycleL2
                          M     if (((_DutyCycleL2) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL2) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL2) & 0fffh) > BANKA_END) & (((_DutyCycleL2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL2)
                          M PREV_BANK = high (_DutyCycleL2)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
000902 6B7F               M         clrf    _DutyCycleL2
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL2
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL2
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL2) + 1
                          M         CHK?RP  (_DutyCycleL2) + 1
                          M     if ((((_DutyCycleL2) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL2) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL2) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL2) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL2) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL2) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL2) + 1)
                          M PREV_BANK = high ((_DutyCycleL2) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL2) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         setf    (_DutyCycleL2) + 1
                          M       else
000904 0E02               M         movlw   low (high (000000200h))
000906 6F80               M         movwf   (_DutyCycleL2) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (000000200h), (_DutyCycleL2) + 2
                          M         CHK?RP  (_DutyCycleL2) + 2
                          M     if ((((_DutyCycleL2) + 2) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL2) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL2) + 2) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL2) + 2) & 0fffh) > BANKA_END) & ((((_DutyCycleL2) + 2) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL2) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL2) + 2)
                          M PREV_BANK = high ((_DutyCycleL2) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (000000200h)) == 0)
000908 6B81               M         clrf    (_DutyCycleL2) + 2
                          M     else
                          M       if (low (upper (000000200h)) == 255)
                          M         setf    (_DutyCycleL2) + 2
                          M       else
                          M         movlw   low (upper (000000200h))
                          M         movwf   (_DutyCycleL2) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (000000200h) >> 24, (_DutyCycleL2) + 3
                          M         CHK?RP  (_DutyCycleL2) + 3
                          M     if ((((_DutyCycleL2) + 3) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL2) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL2) + 3) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL2) + 3) & 0fffh) > BANKA_END) & ((((_DutyCycleL2) + 3) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL2) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL2) + 3)
                          M PREV_BANK = high ((_DutyCycleL2) + 3)
                          M       endif
                          M     endif
                          M     if (low ((000000200h) >> 24) == 0)
00090A 6B82               M         clrf    (_DutyCycleL2) + 3
                          M     else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low ((000000200h) >> 24) == 255)
                          M         setf    (_DutyCycleL2) + 3
                          M       else
                          M         movlw   low ((000000200h) >> 24)
                          M         movwf   (_DutyCycleL2) + 3
                          M       endif
                          M     endif
                          M     endif
                      01229 
                      01230 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00230       DutyCycleL3 = 512
                      01231         MOVE?CN 000000200h, _DutyCycleL3
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL3
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL3
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL3) + 1
                          M         movlw   upper (000000200h)
                          M         movwf   (_DutyCycleL3) + 2
                          M         movlw   (000000200h) >> 24
                          M         movwf   (_DutyCycleL3) + 3
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL3
                          M         CHK?RP  _DutyCycleL3
                          M     if (((_DutyCycleL3) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL3) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL3) & 0fffh) > BANKA_END) & (((_DutyCycleL3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL3)
                          M PREV_BANK = high (_DutyCycleL3)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
00090C 6B83               M         clrf    _DutyCycleL3
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL3
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL3
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL3) + 1
                          M         CHK?RP  (_DutyCycleL3) + 1
                          M     if ((((_DutyCycleL3) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL3) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL3) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL3) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL3) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL3) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL3) + 1)
                          M PREV_BANK = high ((_DutyCycleL3) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL3) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL3) + 1
                          M       else
00090E 0E02               M         movlw   low (high (000000200h))
000910 6F84               M         movwf   (_DutyCycleL3) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (000000200h), (_DutyCycleL3) + 2
                          M         CHK?RP  (_DutyCycleL3) + 2
                          M     if ((((_DutyCycleL3) + 2) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL3) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL3) + 2) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL3) + 2) & 0fffh) > BANKA_END) & ((((_DutyCycleL3) + 2) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL3) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL3) + 2)
                          M PREV_BANK = high ((_DutyCycleL3) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (000000200h)) == 0)
000912 6B85               M         clrf    (_DutyCycleL3) + 2
                          M     else
                          M       if (low (upper (000000200h)) == 255)
                          M         setf    (_DutyCycleL3) + 2
                          M       else
                          M         movlw   low (upper (000000200h))
                          M         movwf   (_DutyCycleL3) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (000000200h) >> 24, (_DutyCycleL3) + 3
                          M         CHK?RP  (_DutyCycleL3) + 3
                          M     if ((((_DutyCycleL3) + 3) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL3) + 3) & 8000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL3) + 3) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL3) + 3) & 0fffh) > BANKA_END) & ((((_DutyCycleL3) + 3) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL3) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL3) + 3)
                          M PREV_BANK = high ((_DutyCycleL3) + 3)
                          M       endif
                          M     endif
                          M     if (low ((000000200h) >> 24) == 0)
000914 6B86               M         clrf    (_DutyCycleL3) + 3
                          M     else
                          M       if (low ((000000200h) >> 24) == 255)
                          M         setf    (_DutyCycleL3) + 3
                          M       else
                          M         movlw   low ((000000200h) >> 24)
                          M         movwf   (_DutyCycleL3) + 3
                          M       endif
                          M     endif
                          M     endif
                      01232 
                      01233 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00231       DutyCycleL4 = 512
                      01234         MOVE?CN 000000200h, _DutyCycleL4
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL4
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL4
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL4) + 1
                          M         movlw   upper (000000200h)
                          M         movwf   (_DutyCycleL4) + 2
                          M         movlw   (000000200h) >> 24
                          M         movwf   (_DutyCycleL4) + 3
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL4
                          M         CHK?RP  _DutyCycleL4
                          M     if (((_DutyCycleL4) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL4) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL4) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL4) & 0fffh) > BANKA_END) & (((_DutyCycleL4) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL4) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL4)
                          M PREV_BANK = high (_DutyCycleL4)
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (low (low (000000200h)) == 0)
000916 6B87               M         clrf    _DutyCycleL4
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL4
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL4
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL4) + 1
                          M         CHK?RP  (_DutyCycleL4) + 1
                          M     if ((((_DutyCycleL4) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL4) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL4) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL4) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL4) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL4) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL4) + 1)
                          M PREV_BANK = high ((_DutyCycleL4) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL4) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL4) + 1
                          M       else
000918 0E02               M         movlw   low (high (000000200h))
00091A 6F88               M         movwf   (_DutyCycleL4) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (000000200h), (_DutyCycleL4) + 2
                          M         CHK?RP  (_DutyCycleL4) + 2
                          M     if ((((_DutyCycleL4) + 2) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL4) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL4) + 2) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL4) + 2) & 0fffh) > BANKA_END) & ((((_DutyCycleL4) + 2) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL4) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL4) + 2)
                          M PREV_BANK = high ((_DutyCycleL4) + 2)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (low (upper (000000200h)) == 0)
00091C 6B89               M         clrf    (_DutyCycleL4) + 2
                          M     else
                          M       if (low (upper (000000200h)) == 255)
                          M         setf    (_DutyCycleL4) + 2
                          M       else
                          M         movlw   low (upper (000000200h))
                          M         movwf   (_DutyCycleL4) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (000000200h) >> 24, (_DutyCycleL4) + 3
                          M         CHK?RP  (_DutyCycleL4) + 3
                          M     if ((((_DutyCycleL4) + 3) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL4) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL4) + 3) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL4) + 3) & 0fffh) > BANKA_END) & ((((_DutyCycleL4) + 3) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL4) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL4) + 3)
                          M PREV_BANK = high ((_DutyCycleL4) + 3)
                          M       endif
                          M     endif
                          M     if (low ((000000200h) >> 24) == 0)
00091E 6B8A               M         clrf    (_DutyCycleL4) + 3
                          M     else
                          M       if (low ((000000200h) >> 24) == 255)
                          M         setf    (_DutyCycleL4) + 3
                          M       else
                          M         movlw   low ((000000200h) >> 24)
                          M         movwf   (_DutyCycleL4) + 3
                          M       endif
                          M     endif
                          M     endif
                      01235 
                      01236 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00233       @ HPWM10 4, _DutyCycleL4, _Frequency
                      01237 
                      01238         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01239  HPWM10 4, _DutyCycleL4, _Frequency
                          M     if 4       < 6 
                          M       MOVE?CB 4,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (4)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (4)   == 255)
                          M         setf    _HP_Channel
                          M       else
000920 0E04               M         movlw   low (4)
000922 6E58               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 4,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL4, _HP_Duty
                          M         MOVE?BB _DutyCycleL4, _HP_Duty
000924 C087 F034          M         movff   _DutyCycleL4, _HP_Duty
                          M         MOVE?BB (_DutyCycleL4) + 1, (_HP_Duty) + 1
000928 C088 F035          M         movff   (_DutyCycleL4) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
00092C C032 F036          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000930 C033 F037          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000934 EC6B F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01240 
                      01241         ENDASM?
                      01242 
                      01243 
                      01244 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00234       @ HPWM10 3, _DutyCycleL3, _Frequency
                      01245 
                      01246         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      01247  HPWM10 3, _DutyCycleL3, _Frequency
                          M     if 3       < 6 
                          M       MOVE?CB 3,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (3)   == 0)
                          M         clrf    _HP_Channel
                          M     else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (3)   == 255)
                          M         setf    _HP_Channel
                          M       else
000938 0E03               M         movlw   low (3)
00093A 6E58               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 3,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL3, _HP_Duty
                          M         MOVE?BB _DutyCycleL3, _HP_Duty
00093C C083 F034          M         movff   _DutyCycleL3, _HP_Duty
                          M         MOVE?BB (_DutyCycleL3) + 1, (_HP_Duty) + 1
000940 C084 F035          M         movff   (_DutyCycleL3) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000944 C032 F036          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000948 C033 F037          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
00094C EC6B F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01248 
                      01249         ENDASM?
                      01250 
                      01251 
                      01252 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00235       @ HPWM10 2, _DutyCycleL2, _Frequency
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01253 
                      01254         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      01255  HPWM10 2, _DutyCycleL2, _Frequency
                          M     if 2       < 6 
                          M       MOVE?CB 2,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (2)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (2)   == 255)
                          M         setf    _HP_Channel
                          M       else
000950 0E02               M         movlw   low (2)
000952 6E58               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 2,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL2, _HP_Duty
                          M         MOVE?BB _DutyCycleL2, _HP_Duty
000954 C07F F034          M         movff   _DutyCycleL2, _HP_Duty
                          M         MOVE?BB (_DutyCycleL2) + 1, (_HP_Duty) + 1
000958 C080 F035          M         movff   (_DutyCycleL2) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
00095C C032 F036          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000960 C033 F037          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000964 EC6B F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01256 
                      01257         ENDASM?
                      01258 
                      01259 
                      01260 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00236       @ HPWM10 1, _DutyCycleL1, _Frequency
                      01261 
                      01262         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      01263  HPWM10 1, _DutyCycleL1, _Frequency
                          M     if 1       < 6 
                          M       MOVE?CB 1,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (1)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (1)   == 255)
                          M         setf    _HP_Channel
                          M       else
000968 0E01               M         movlw   low (1)
00096A 6E58               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 1,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL1, _HP_Duty
                          M         MOVE?BB _DutyCycleL1, _HP_Duty
00096C C07B F034          M         movff   _DutyCycleL1, _HP_Duty
                          M         MOVE?BB (_DutyCycleL1) + 1, (_HP_Duty) + 1
000970 C07C F035          M         movff   (_DutyCycleL1) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000974 C032 F036          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000978 C033 F037          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
00097C EC6B F002          M         call    _HPWM10_UPD
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01264 
                      01265         ENDASM?
                      01266 
                      01267 
                      01268 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00237   Main:
                      01269 
                      01270         LABEL?L _Main   
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _Main
                          M         XALL
                          M     else
000980                    M _Main
                          M     endif
                      01271 
                      01272 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00238        if  tastlevo = 0 then 
                      01273         CMPNE?TCL       _TASTLEVO, 000h, L00039
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PORTB, 001h,  L00039
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00039))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PORTB) > BANKA_END) & ((PORTB) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PORTB
                          M       if ((1)      == 0)
                          M         btfss   PORTB, 001h
                          M       else
                          M         btfsc   PORTB, 001h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M       else
                          M         if ((L00039) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M         else
                          M           if ((L00039) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M           else
                          M             if ((L00039) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M             else
                          M         bov     L00039
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PORTB, 001h
                          M       else
000980 B281               M         btfsc   PORTB, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00039
                          M       else
                          M         if ((L00039) < 1)
                          M         goto    L00039
                          M         else
                          M           if ((L00039) > $)
000982 EFC7 F004          M         goto    L00039
                          M           else
                          M             if ((L00039) < ($ - 3ffh))
                          M         goto    L00039
                          M             else
                          M         bra     L00039
                          M             endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
                          M         BIT?GOTO 0, PORTB, 001h,  L00039
                          M       else
                          M         L?GOTO  L00039
                          M       endif
                          M     endif
                      01274 
                      01275 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00239           pause 100
                      01276         PAUSE?C 064h
                          M     if (((064h) >> 8) == 0)
                          M         MOVE?CA 064h
000986 0E64               M         movlw   low (064h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000988 EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((064h) >> 16) == 0)
                          M         MOVE?CB high (064h), R1 + 1
                          M         MOVE?CA low (064h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (064h) >> 24, R1 + 3
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CB upper (064h), R1 + 2
                          M         MOVE?CB high (064h), R1 + 1
                          M         MOVE?CA low (064h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01277 
                      01278 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00240           desnibrojac = desnibrojac + 1 
                      01279         ADD?BCB _DesniBrojac, 001h, _DesniBrojac
                          M     if ((_DesniBrojac) == (_DesniBrojac))
                          M       if ((001h) == 1)
                          M         CHK?RP  _DesniBrojac
                          M     if (((_DesniBrojac) & 8000h) != PREV_ALT)
                          M       if ((_DesniBrojac) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DesniBrojac) & 8000h
                          M     endif
                          M     if ((((_DesniBrojac) & 0fffh) > BANKA_END) & (((_DesniBrojac) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DesniBrojac) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DesniBrojac)
                          M PREV_BANK = high (_DesniBrojac)
                          M       endif
                          M     endif
00098C 2A55               M         incf    _DesniBrojac, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _DesniBrojac
                          M         addwf   _DesniBrojac, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _DesniBrojac
                          M         incf    _DesniBrojac, W
                          M         MOVE?AB _DesniBrojac
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _DesniBrojac
                          M         addwf   _DesniBrojac, W
                          M         MOVE?AB _DesniBrojac
                          M       endif
                          M     endif
                      01280 
                      01281 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00241        endif
                      01282         LABEL?L L00039  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00039
                          M         XALL
                          M     else
00098E                    M L00039
                          M     endif
                      01283 
                      01284 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00242       Gosub UzmiVreme
                      01285         GOSUB?L _UzmiVreme
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _UzmiVreme
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _UzmiVreme
                          M     else
                          M       if ((_UzmiVreme) < 1)
                          M         call    _UzmiVreme
                          M       else
                          M         if ((_UzmiVreme) > $)
00098E ECCE F005          M         call    _UzmiVreme
                          M         else
                          M           if ((_UzmiVreme) < ($ - 3ffh))
                          M         call    _UzmiVreme
                          M           else
                          M         rcall   _UzmiVreme
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
000992                    M dlabel
                      01286 
                      01287 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00243       Lcdout $fe, 2 ,"Vreme > ",dec2 DecSatglavni,
                            ":",dec2 DecMinutGlavni,":",dec2 Decsec
                      01288         LCDOUT?C        0FEh
000992 0EFE               M         movlw   0FEh
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000994 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01289         LCDOUT?C        002h
000998 0E02               M         movlw   002h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
00099A EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01290         LCDOUT?C        056h
00099E 0E56               M         movlw   056h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009A0 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01291         LCDOUT?C        072h
0009A4 0E72               M         movlw   072h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009A6 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01292         LCDOUT?C        065h
0009AA 0E65               M         movlw   065h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009AC EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01293         LCDOUT?C        06Dh
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009B0 0E6D               M         movlw   06Dh
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009B2 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01294         LCDOUT?C        065h
0009B6 0E65               M         movlw   065h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009B8 EC7B F000          M         call    LCDOUT
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01295         LCDOUT?C        020h
0009BC 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009BE EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01296         LCDOUT?C        03Eh
0009C2 0E3E               M         movlw   03Eh
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009C4 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01297         LCDOUT?C        020h
0009C8 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009CA EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01298         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
0009CE 0E02               M         movlw   low (002h)
0009D0 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01299         LCDOUTNUM?B     _DecSatglavni
                          M         MOVE?BN _DecSatglavni, R2
                          M         MOVE?BB _DecSatglavni, R2
0009D2 C052 F01A          M         movff   _DecSatglavni, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
0009D6 6A1B               M         clrf    (R2)   + 1
0009D8 6A1C               M         clrf    (R2)   + 2
0009DA 6A1D               M         clrf    (R2)   + 3
                      01300         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
0009DC 0EF4               M         movlw   low (low (LCDOUTJ))
0009DE 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
0009E0 6A0B               M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
                          M         movlw   low (high (LCDOUTJ))
                          M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
0009E2 ECCF F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01301         LCDOUT?C        03Ah
0009E6 0E3A               M         movlw   03Ah
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009E8 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01302         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
0009EC 0E02               M         movlw   low (002h)
0009EE 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01303         LCDOUTNUM?B     _DecMinutGlavni
                          M         MOVE?BN _DecMinutGlavni, R2
                          M         MOVE?BB _DecMinutGlavni, R2
0009F0 C04E F01A          M         movff   _DecMinutGlavni, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
0009F4 6A1B               M         clrf    (R2)   + 1
0009F6 6A1C               M         clrf    (R2)   + 2
0009F8 6A1D               M         clrf    (R2)   + 3
                      01304         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
0009FA 0EF4               M         movlw   low (low (LCDOUTJ))
0009FC 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
0009FE 6A0B               M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (high (LCDOUTJ))
                          M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A00 ECCF F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01305         LCDOUT?C        03Ah
000A04 0E3A               M         movlw   03Ah
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A06 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01306         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000A0A 0E02               M         movlw   low (002h)
000A0C 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01307         LCDOUTNUM?B     _DecSec
                          M         MOVE?BN _DecSec, R2
                          M         MOVE?BB _DecSec, R2
000A0E C054 F01A          M         movff   _DecSec, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A12 6A1B               M         clrf    (R2)   + 1
000A14 6A1C               M         clrf    (R2)   + 2
000A16 6A1D               M         clrf    (R2)   + 3
                      01308         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A18 0EF4               M         movlw   low (low (LCDOUTJ))
000A1A 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
000A1C 6A0B               M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
                          M         movlw   low (high (LCDOUTJ))
                          M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A1E ECCF F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01309 
                      01310 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00244       lcdout $fe,$c0,dec3 temperatura, " ",desnibr
                            ojac," ",dec3 desnibrojac, "              "
                      01311         LCDOUT?C        0FEh
000A22 0EFE               M         movlw   0FEh
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A24 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01312         LCDOUT?C        0C0h
000A28 0EC0               M         movlw   0C0h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A2A EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01313         LCDOUTCOUNT?C   003h
                          M         MOVE?CB 003h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (003h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (003h) == 255)
                          M         setf    R4 + 1
                          M       else
000A2E 0E03               M         movlw   low (003h)
000A30 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01314         LCDOUTNUM?B     _Temperatura
                          M         MOVE?BN _Temperatura, R2
                          M         MOVE?BB _Temperatura, R2
000A32 C077 F01A          M         movff   _Temperatura, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A36 6A1B               M         clrf    (R2)   + 1
000A38 6A1C               M         clrf    (R2)   + 2
000A3A 6A1D               M         clrf    (R2)   + 3
                      01315         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A3C 0EF4               M         movlw   low (low (LCDOUTJ))
000A3E 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
000A40 6A0B               M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (high (LCDOUTJ))
                          M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A42 ECCF F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01316         LCDOUT?C        020h
000A46 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A48 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01317         LCDOUT?B        _DesniBrojac
                          M         MOVE?BA _DesniBrojac
                          M         CHK?RP  _DesniBrojac
                          M     if (((_DesniBrojac) & 8000h) != PREV_ALT)
                          M       if ((_DesniBrojac) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DesniBrojac) & 8000h
                          M     endif
                          M     if ((((_DesniBrojac) & 0fffh) > BANKA_END) & (((_DesniBrojac) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DesniBrojac) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DesniBrojac)
                          M PREV_BANK = high (_DesniBrojac)
                          M       endif
                          M     endif
000A4C 5055               M         movf    _DesniBrojac, W
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A4E EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                      01318         LCDOUT?C        020h
000A52 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A54 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01319         LCDOUTCOUNT?C   003h
                          M         MOVE?CB 003h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (003h) == 0)
                          M         clrf    R4 + 1
                          M     else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (003h) == 255)
                          M         setf    R4 + 1
                          M       else
000A58 0E03               M         movlw   low (003h)
000A5A 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01320         LCDOUTNUM?B     _DesniBrojac
                          M         MOVE?BN _DesniBrojac, R2
                          M         MOVE?BB _DesniBrojac, R2
000A5C C055 F01A          M         movff   _DesniBrojac, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A60 6A1B               M         clrf    (R2)   + 1
000A62 6A1C               M         clrf    (R2)   + 2
000A64 6A1D               M         clrf    (R2)   + 3
                      01321         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A66 0EF4               M         movlw   low (low (LCDOUTJ))
000A68 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
000A6A 6A0B               M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
                          M         movlw   low (high (LCDOUTJ))
                          M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A6C ECCF F000          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01322         LCDOUT?C        020h
000A70 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A72 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01323         LCDOUT?C        020h
000A76 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A78 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01324         LCDOUT?C        020h
000A7C 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A7E EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01325         LCDOUT?C        020h
000A82 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A84 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01326         LCDOUT?C        020h
000A88 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A8A EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 206


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01327         LCDOUT?C        020h
000A8E 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A90 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01328         LCDOUT?C        020h
000A94 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 207


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A96 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01329         LCDOUT?C        020h
000A9A 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A9C EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01330         LCDOUT?C        020h
000AA0 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 208


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000AA2 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01331         LCDOUT?C        020h
000AA6 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000AA8 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01332         LCDOUT?C        020h
000AAC 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 209


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000AAE EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01333         LCDOUT?C        020h
000AB2 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000AB4 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 210


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      01334         LCDOUT?C        020h
000AB8 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000ABA EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01335         LCDOUT?C        020h
000ABE 0E20               M         movlw   020h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 211


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000AC0 EC7B F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01336 
                      01337 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00245       gosub MeriTemperaturu
                      01338         GOSUB?L _MeriTemperaturu
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _MeriTemperaturu
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _MeriTemperaturu
                          M     else
                          M       if ((_MeriTemperaturu) < 1)
                          M         call    _MeriTemperaturu
                          M       else
                          M         if ((_MeriTemperaturu) > $)
000AC4 EC68 F005          M         call    _MeriTemperaturu
                          M         else
                          M           if ((_MeriTemperaturu) < ($ - 3ffh))
                          M         call    _MeriTemperaturu
                          M           else
                          M         rcall   _MeriTemperaturu
                          M           endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 212


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
000AC8                    M dlabel
                      01339 
                      01340 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00246   pause 50
                      01341         PAUSE?C 032h
                          M     if (((032h) >> 8) == 0)
                          M         MOVE?CA 032h
000AC8 0E32               M         movlw   low (032h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000ACA EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((032h) >> 16) == 0)
                          M         MOVE?CB high (032h), R1 + 1
                          M         MOVE?CA low (032h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (032h) >> 24, R1 + 3
                          M         MOVE?CB upper (032h), R1 + 2
                          M         MOVE?CB high (032h), R1 + 1
                          M         MOVE?CA low (032h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01342 
                      01343 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00247   Goto Main
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 213


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01344         GOTO?L  _Main
                          M         L?GOTO  _Main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_Main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _Main
                          M     else
                          M       if ((_Main) < 1)
                          M         goto    _Main
                          M       else
                          M         if ((_Main) > $)
                          M         goto    _Main
                          M         else
                          M           if ((_Main) < ($ - 3ffh))
                          M         goto    _Main
                          M           else
000ACE D758               M         bra     _Main
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01345 
                      01346 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00249   MeriTemperaturu:
                      01347 
                      01348         LABEL?L _MeriTemperaturu        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _MeriTemperaturu
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 214


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
000AD0                    M _MeriTemperaturu
                          M     endif
                      01349 
                      01350 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00252   i2cread sda, scl, lm75,0,[temperatura]
                      01351         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000AD0 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000AD2 6E0E               M         movwf   RR1
000AD4 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000AD6 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000AD8 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000ADA 6E0C               M         movwf   RM1
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 215


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01352         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000ADC 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000ADE 6E0F               M         movwf   RR2
000AE0 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000AE2 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
000AE4 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000AE6 6E0D               M         movwf   RM2
                      01353         I2CWRITE?C      _LM75
                          M     if ((high (_LM75)) != 0)
                          M         movlw   (_LM75) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_LM75)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 216


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AE8 0E91               M         movlw   low (low (_LM75))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000AEA EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01354         I2CWRITE?C      000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
000AEE 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 217


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000AF0 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01355         I2CREADS?B      _Temperatura
                          M         L?CALL  I2CREADS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
000AF4 EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Temperatura
                          M         CHK?RP  _Temperatura
                          M     if (((_Temperatura) & 8000h) != PREV_ALT)
                          M       if ((_Temperatura) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Temperatura) & 8000h
                          M     endif
                          M     if ((((_Temperatura) & 0fffh) > BANKA_END) & (((_Temperatura) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Temperatura) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Temperatura)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 218


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (_Temperatura)
                          M       endif
                          M     endif
000AF8 6F77               M         movwf   _Temperatura
                      01356 
                      01357 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00254   pause 20
                      01358         PAUSE?C 014h
                          M     if (((014h) >> 8) == 0)
                          M         MOVE?CA 014h
000AFA 0E14               M         movlw   low (014h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000AFC EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((014h) >> 16) == 0)
                          M         MOVE?CB high (014h), R1 + 1
                          M         MOVE?CA low (014h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (014h) >> 24, R1 + 3
                          M         MOVE?CB upper (014h), R1 + 2
                          M         MOVE?CB high (014h), R1 + 1
                          M         MOVE?CA low (014h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01359 
                      01360 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00255   i2cread sda, scl, lm75,0,[smece]
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 219


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01361         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000B00 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000B02 6E0E               M         movwf   RR1
000B04 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000B06 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000B08 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000B0A 6E0C               M         movwf   RM1
                      01362         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000B0C 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 220


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000B0E 6E0F               M         movwf   RR2
000B10 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000B12 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
000B14 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000B16 6E0D               M         movwf   RM2
                      01363         I2CWRITE?C      _LM75
                          M     if ((high (_LM75)) != 0)
                          M         movlw   (_LM75) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_LM75)
000B18 0E91               M         movlw   low (low (_LM75))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 221


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B1A EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01364         I2CWRITE?C      000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
000B1E 0E00               M         movlw   low (low (000h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B20 EC1E F000          M         call    I2CWRITE
                          M           else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 222


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01365         I2CREADS?W      _smece
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000B24 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _smece + 1
                          M         CHK?RP  _smece + 1
                          M     if (((_smece + 1) & 8000h) != PREV_ALT)
                          M       if ((_smece + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_smece + 1) & 8000h
                          M     endif
                          M     if ((((_smece + 1) & 0fffh) > BANKA_END) & (((_smece + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_smece + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_smece + 1)
                          M PREV_BANK = high (_smece + 1)
                          M       endif
                          M     endif
000B28 6E41               M         movwf   _smece + 1
                          M         L?CALL  I2CREADS
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 223


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
000B2A EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _smece
                          M         CHK?RP  _smece
                          M     if (((_smece) & 8000h) != PREV_ALT)
                          M       if ((_smece) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_smece) & 8000h
                          M     endif
                          M     if ((((_smece) & 0fffh) > BANKA_END) & (((_smece) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_smece) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_smece)
                          M PREV_BANK = high (_smece)
                          M       endif
                          M     endif
000B2E 6E40               M         movwf   _smece
                      01366 
                      01367 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00256   return 
                      01368         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 224


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000B30 0012               M         return
                      01369 
                      01370 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00258   return
                      01371         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000B32 0012               M         return
                      01372 
                      01373 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00260   UpisiVreme:                                
                      01374 
                      01375         LABEL?L _UpisiVreme     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _UpisiVreme
                          M         XALL
                          M     else
000B34                    M _UpisiVreme
                          M     endif
                      01376 
                      01377 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00261       Seconds        = $00
                      01378         MOVE?CB 000h, _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 225


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B34 6B75               M         clrf    _Seconds
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Seconds
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Seconds
                          M       endif
                          M     endif
                      01379 
                      01380 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00262       Minutes        = $00
                      01381         MOVE?CB 000h, _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B36 6B63               M         clrf    _Minutes
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Minutes
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Minutes
                          M       endif
                          M     endif
                      01382 
                      01383 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00263       Hours          = $00
                      01384         MOVE?CB 000h, _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 226


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B38 6A57               M         clrf    _Hours
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Hours
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Hours
                          M       endif
                          M     endif
                      01385 
                      01386 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00264       Days           = $01
                      01387         MOVE?CB 001h, _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Days
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Days
                          M       else
000B3A 0E01               M         movlw   low (001h)
000B3C 6E4B               M         movwf   _Days
                          M       endif
                          M     endif
                      01388 
                      01389 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00265       Years          = $01
                      01390         MOVE?CB 001h, _Years
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 227


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Years
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Years
                          M       else
000B3E 0E01               M         movlw   low (001h)
000B40 6F7A               M         movwf   _Years
                          M       endif
                          M     endif
                      01391 
                      01392 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00266       Month          = $01
                      01393         MOVE?CB 001h, _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Month
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Month
                          M       else
000B42 0E01               M         movlw   low (001h)
000B44 6F66               M         movwf   _Month
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 228


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01394 
                      01395 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00268       I2cwrite sda,scl,rtc,$02,[seconds,minutes,ho
                            urs,days,$02,month,years]
                      01396         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000B46 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000B48 6E0E               M         movwf   RR1
000B4A 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000B4C 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000B4E 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000B50 6E0C               M         movwf   RM1
                      01397         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000B52 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 229


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000B54 6E0F               M         movwf   RR2
000B56 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000B58 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
000B5A 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000B5C 6E0D               M         movwf   RM2
                      01398         I2CWRITE?C      _RTC
                          M     if ((high (_RTC)) != 0)
                          M         movlw   (_RTC) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_RTC)
000B5E 0EA2               M         movlw   low (low (_RTC))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 230


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B60 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01399         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000B64 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 231


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((I2CWRITE) < ($ - 3ffh))
000B66 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01400         I2CWRITE?B      _Seconds
                          M         MOVE?BA _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
000B6A 5175               M         movf    _Seconds, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B6C EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 232


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01401         I2CWRITE?B      _Minutes
                          M         MOVE?BA _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000B70 5163               M         movf    _Minutes, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B72 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01402         I2CWRITE?B      _Hours
                          M         MOVE?BA _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 233


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000B76 5057               M         movf    _Hours, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B78 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01403         I2CWRITE?B      _Days
                          M         MOVE?BA _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 234


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
000B7C 504B               M         movf    _Days, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B7E EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01404         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000B82 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 235


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B84 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01405         I2CWRITE?B      _Month
                          M         MOVE?BA _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
000B88 5166               M         movf    _Month, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 236


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((I2CWRITE) < ($ - 3ffh))
000B8A EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01406         I2CWRITES?B     _Years
                          M         MOVE?BA _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
000B8E 517A               M         movf    _Years, W
                          M         L?CALL  I2CWRITES
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITES
                          M     else
                          M       if ((I2CWRITES) < 1)
                          M         call    I2CWRITES
                          M       else
                          M         if ((I2CWRITES) > $)
                          M         call    I2CWRITES
                          M         else
                          M           if ((I2CWRITES) < ($ - 3ffh))
000B90 EC1C F000          M         call    I2CWRITES
                          M           else
                          M         rcall   I2CWRITES
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 237


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01407 
                      01408 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00269       PAUSE 10 
                      01409         PAUSE?C 00Ah
                          M     if (((00Ah) >> 8) == 0)
                          M         MOVE?CA 00Ah
000B94 0E0A               M         movlw   low (00Ah)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000B96 EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((00Ah) >> 16) == 0)
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (00Ah) >> 24, R1 + 3
                          M         MOVE?CB upper (00Ah), R1 + 2
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01410 
                      01411 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00270   return 
                      01412         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 238


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000B9A 0012               M         return
                      01413 
                      01414 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00272   UzmiVreme:
                      01415 
                      01416         LABEL?L _UzmiVreme      
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _UzmiVreme
                          M         XALL
                          M     else
000B9C                    M _UzmiVreme
                          M     endif
                      01417 
                      01418 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00275       i2cread sda,scl,rtc,$02,[seconds,minutes,hou
                            rs]
                      01419         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000B9C 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 239


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B9E 6E0E               M         movwf   RR1
000BA0 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000BA2 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000BA4 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000BA6 6E0C               M         movwf   RM1
                      01420         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000BA8 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000BAA 6E0F               M         movwf   RR2
000BAC 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000BAE 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 240


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((001h)  & 7) == 1)
000BB0 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000BB2 6E0D               M         movwf   RM2
                      01421         I2CWRITE?C      _RTC
                          M     if ((high (_RTC)) != 0)
                          M         movlw   (_RTC) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_RTC)
000BB4 0EA2               M         movlw   low (low (_RTC))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000BB6 EC1E F000          M         call    I2CWRITE
                          M           else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 241


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01422         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000BBA 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000BBC EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01423         I2CREAD?B       _Seconds
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 242


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BC0 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
000BC4 6F75               M         movwf   _Seconds
                      01424         I2CREAD?B       _Minutes
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 243


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BC6 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000BCA 6F63               M         movwf   _Minutes
                      01425         I2CREADS?B      _Hours
                          M         L?CALL  I2CREADS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
000BCC EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
                          M           endif
                          M         endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 244


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M         MOVE?AB _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000BD0 6E57               M         movwf   _Hours
                      01426 
                      01427 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00276       pause 10
                      01428         PAUSE?C 00Ah
                          M     if (((00Ah) >> 8) == 0)
                          M         MOVE?CA 00Ah
000BD2 0E0A               M         movlw   low (00Ah)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000BD4 EC2E F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 245


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (((00Ah) >> 16) == 0)
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (00Ah) >> 24, R1 + 3
                          M         MOVE?CB upper (00Ah), R1 + 2
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01429 
                      01430 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00277       minutes.7=0:hours.7=0:hours.6=0
                      01431         MOVE?CT 000h, _Minutes??7
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Minutes, 007h
                          M     else
000BD8 9F63               M         bcf     _Minutes, 007h
                          M     endif
                      01432 
                      01433 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00277       minutes.7=0:hours.7=0:hours.6=0
                      01434         MOVE?CT 000h, _Hours??7
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 246


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Hours, 007h
                          M     else
000BDA 9E57               M         bcf     _Hours, 007h
                          M     endif
                      01435 
                      01436 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00277       minutes.7=0:hours.7=0:hours.6=0
                      01437         MOVE?CT 000h, _Hours??6
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Hours, 006h
                          M     else
000BDC 9C57               M         bcf     _Hours, 006h
                          M     endif
                      01438 
                      01439 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00278       DecMinutGlavni = ((minutes  & %11110000)>>4)
                              * 10 + (minutes & %00001111)
                      01440         AND?BCN _Minutes, 0F0h, T1
000BDE 0EF0               M         movlw   0F0h
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000BE0 1563               M         andwf   _Minutes, W
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 247


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000BE2 6E22               M         movwf   T1
000BE4 6A23               M         clrf    (T1)   + 1
000BE6 6A24               M         clrf    (T1)   + 2
000BE8 6A25               M         clrf    (T1)   + 3
                      01441         SHIFTR?NCN      T1, 004h, T1
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T1)   == (T1))
                          M         CHK?RP  T1
                          M         rrcf    (T1)   + 3, F
                          M         rrcf    (T1)   + 2, F
                          M         rrcf    (T1)   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 3, W
                          M         MOVE?AB (T1)   + 3
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 1, W
                          M         MOVE?AB (T1)   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000BEA C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000BEE C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000BF2 C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000BF6 C025 F015          M         movff   (T1) + 3, (R0) + 3
000BFA 0E04               M         movlw   004h
                          M         L?CALL  SHIFTR
                          M         RST?RP
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 248


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
000BFC EC59 F001          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000C00 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000C02 C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
000C06 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
000C0A C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      01442         MUL?NCN T1, 00Ah, T1
                          M         MOVE?NN T1,  R3
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 249


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB T1,  R3
000C0E C022 F01E          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
000C12 C023 F01F          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?BB (T1)  + 2, (R3)   + 2
000C16 C024 F020          M         movff   (T1) + 2, (R3) + 2
                          M         MOVE?BB (T1)  + 3, (R3)   + 3
000C1A C025 F021          M         movff   (T1) + 3, (R3) + 3
                          M         MOVE?CN 00Ah, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M         movlw   upper (00Ah)
                          M         movwf   (R1)   + 2
                          M         movlw   (00Ah) >> 24
                          M         movwf   (R1)   + 3
                          M     else
                          M         MOVE?CB low (00Ah), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (00Ah)) == 0)
                          M         clrf    R1
                          M     else
                          M       if (low (low (00Ah)) == 255)
                          M         setf    R1
                          M       else
000C1E 0E0A               M         movlw   low (low (00Ah))
000C20 6E16               M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (00Ah), (R1)  + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 250


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (00Ah)) == 0)
000C22 6A17               M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (00Ah)) == 255)
                          M         setf    (R1) + 1
                          M       else
                          M         movlw   low (high (00Ah))
                          M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (00Ah), (R1)  + 2
                          M         CHK?RP  (R1) + 2
                          M     if ((((R1) + 2) & 8000h) != PREV_ALT)
                          M       if (((R1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 2) & 8000h
                          M     endif
                          M     if (((((R1) + 2) & 0fffh) > BANKA_END) & ((((R1) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 2)
                          M PREV_BANK = high ((R1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (00Ah)) == 0)
000C24 6A18               M         clrf    (R1) + 2
                          M     else
                          M       if (low (upper (00Ah)) == 255)
                          M         setf    (R1) + 2
                          M       else
                          M         movlw   low (upper (00Ah))
                          M         movwf   (R1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (00Ah) >> 24, (R1)  + 3
                          M         CHK?RP  (R1) + 3
                          M     if ((((R1) + 3) & 8000h) != PREV_ALT)
                          M       if (((R1) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 251


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = ((R1) + 3) & 8000h
                          M     endif
                          M     if (((((R1) + 3) & 0fffh) > BANKA_END) & ((((R1) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 3)
                          M PREV_BANK = high ((R1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((00Ah) >> 24) == 0)
000C26 6A19               M         clrf    (R1) + 3
                          M     else
                          M       if (low ((00Ah) >> 24) == 255)
                          M         setf    (R1) + 3
                          M       else
                          M         movlw   low ((00Ah) >> 24)
                          M         movwf   (R1) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
000C28 ECCC F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 252


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000C2C 6E22               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000C2E C01B F023          M         movff   (R2) + 1, (T1) + 1
                          M         MOVE?BB (R2)  + 2, (T1)   + 2
000C32 C01C F024          M         movff   (R2) + 2, (T1) + 2
                          M         MOVE?BB (R2)  + 3, (T1)   + 3
000C36 C01D F025          M         movff   (R2) + 3, (T1) + 3
                      01443         AND?BCN _Minutes, 00Fh, T2
000C3A 0E0F               M         movlw   00Fh
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000C3C 1563               M         andwf   _Minutes, W
                          M         MOVE?AN T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000C3E 6E26               M         movwf   T2
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 253


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C40 6A27               M         clrf    (T2)   + 1
000C42 6A28               M         clrf    (T2)   + 2
000C44 6A29               M         clrf    (T2)   + 3
                      01444         ADD?NNB T1, T2, _DecMinutGlavni
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000C46 5022               M         movf    T1,  W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000C48 2426               M         addwf   T2,   W
                          M         MOVE?AB _DecMinutGlavni
                          M         CHK?RP  _DecMinutGlavni
                          M     if (((_DecMinutGlavni) & 8000h) != PREV_ALT)
                          M       if ((_DecMinutGlavni) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DecMinutGlavni) & 8000h
                          M     endif
                          M     if ((((_DecMinutGlavni) & 0fffh) > BANKA_END) & (((_DecMinutGlavni) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DecMinutGlavni) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DecMinutGlavni)
                          M PREV_BANK = high (_DecMinutGlavni)
                          M       endif
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 254


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C4A 6E4E               M         movwf   _DecMinutGlavni
                      01445 
                      01446 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00279       decsatglavni = ((Hours & %11110000)>>4)  * 1
                            0 + (hours & %00001111)
                      01447         AND?BCN _Hours, 0F0h, T1
000C4C 0EF0               M         movlw   0F0h
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000C4E 1457               M         andwf   _Hours, W
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000C50 6E22               M         movwf   T1
000C52 6A23               M         clrf    (T1)   + 1
000C54 6A24               M         clrf    (T1)   + 2
000C56 6A25               M         clrf    (T1)   + 3
                      01448         SHIFTR?NCN      T1, 004h, T1
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T1)   == (T1))
                          M         CHK?RP  T1
                          M         rrcf    (T1)   + 3, F
                          M         rrcf    (T1)   + 2, F
                          M         rrcf    (T1)   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 255


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rrcf    (T1)  + 3, W
                          M         MOVE?AB (T1)   + 3
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 1, W
                          M         MOVE?AB (T1)   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000C58 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000C5C C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000C60 C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000C64 C025 F015          M         movff   (T1) + 3, (R0) + 3
000C68 0E04               M         movlw   004h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
000C6A EC59 F001          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 256


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000C6E 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000C70 C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
000C74 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
000C78 C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      01449         MUL?NCN T1, 00Ah, T1
                          M         MOVE?NN T1,  R3
                          M         MOVE?BB T1,  R3
000C7C C022 F01E          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
000C80 C023 F01F          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?BB (T1)  + 2, (R3)   + 2
000C84 C024 F020          M         movff   (T1) + 2, (R3) + 2
                          M         MOVE?BB (T1)  + 3, (R3)   + 3
000C88 C025 F021          M         movff   (T1) + 3, (R3) + 3
                          M         MOVE?CN 00Ah, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M         movlw   upper (00Ah)
                          M         movwf   (R1)   + 2
                          M         movlw   (00Ah) >> 24
                          M         movwf   (R1)   + 3
                          M     else
                          M         MOVE?CB low (00Ah), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 257


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (00Ah)) == 0)
                          M         clrf    R1
                          M     else
                          M       if (low (low (00Ah)) == 255)
                          M         setf    R1
                          M       else
000C8C 0E0A               M         movlw   low (low (00Ah))
000C8E 6E16               M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (00Ah), (R1)  + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (00Ah)) == 0)
000C90 6A17               M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (00Ah)) == 255)
                          M         setf    (R1) + 1
                          M       else
                          M         movlw   low (high (00Ah))
                          M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (00Ah), (R1)  + 2
                          M         CHK?RP  (R1) + 2
                          M     if ((((R1) + 2) & 8000h) != PREV_ALT)
                          M       if (((R1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 2) & 8000h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 258


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((((R1) + 2) & 0fffh) > BANKA_END) & ((((R1) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 2)
                          M PREV_BANK = high ((R1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (00Ah)) == 0)
000C92 6A18               M         clrf    (R1) + 2
                          M     else
                          M       if (low (upper (00Ah)) == 255)
                          M         setf    (R1) + 2
                          M       else
                          M         movlw   low (upper (00Ah))
                          M         movwf   (R1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (00Ah) >> 24, (R1)  + 3
                          M         CHK?RP  (R1) + 3
                          M     if ((((R1) + 3) & 8000h) != PREV_ALT)
                          M       if (((R1) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 3) & 8000h
                          M     endif
                          M     if (((((R1) + 3) & 0fffh) > BANKA_END) & ((((R1) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 3)
                          M PREV_BANK = high ((R1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((00Ah) >> 24) == 0)
000C94 6A19               M         clrf    (R1) + 3
                          M     else
                          M       if (low ((00Ah) >> 24) == 255)
                          M         setf    (R1) + 3
                          M       else
                          M         movlw   low ((00Ah) >> 24)
                          M         movwf   (R1) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 259


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
000C96 ECCC F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000C9A 6E22               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000C9C C01B F023          M         movff   (R2) + 1, (T1) + 1
                          M         MOVE?BB (R2)  + 2, (T1)   + 2
000CA0 C01C F024          M         movff   (R2) + 2, (T1) + 2
                          M         MOVE?BB (R2)  + 3, (T1)   + 3
000CA4 C01D F025          M         movff   (R2) + 3, (T1) + 3
                      01450         AND?BCN _Hours, 00Fh, T2
000CA8 0E0F               M         movlw   00Fh
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 260


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000CAA 1457               M         andwf   _Hours, W
                          M         MOVE?AN T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000CAC 6E26               M         movwf   T2
000CAE 6A27               M         clrf    (T2)   + 1
000CB0 6A28               M         clrf    (T2)   + 2
000CB2 6A29               M         clrf    (T2)   + 3
                      01451         ADD?NNB T1, T2, _DecSatglavni
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000CB4 5022               M         movf    T1,  W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 261


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000CB6 2426               M         addwf   T2,   W
                          M         MOVE?AB _DecSatglavni
                          M         CHK?RP  _DecSatglavni
                          M     if (((_DecSatglavni) & 8000h) != PREV_ALT)
                          M       if ((_DecSatglavni) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DecSatglavni) & 8000h
                          M     endif
                          M     if ((((_DecSatglavni) & 0fffh) > BANKA_END) & (((_DecSatglavni) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DecSatglavni) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DecSatglavni)
                          M PREV_BANK = high (_DecSatglavni)
                          M       endif
                          M     endif
000CB8 6E52               M         movwf   _DecSatglavni
                      01452 
                      01453 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00280       decsec = ((Seconds  & %11110000)>>4)  * 10 +
                             (seconds  & %00001111)
                      01454         AND?BCN _Seconds, 0F0h, T1
000CBA 0EF0               M         movlw   0F0h
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
000CBC 1575               M         andwf   _Seconds, W
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 262


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000CBE 6E22               M         movwf   T1
000CC0 6A23               M         clrf    (T1)   + 1
000CC2 6A24               M         clrf    (T1)   + 2
000CC4 6A25               M         clrf    (T1)   + 3
                      01455         SHIFTR?NCN      T1, 004h, T1
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T1)   == (T1))
                          M         CHK?RP  T1
                          M         rrcf    (T1)   + 3, F
                          M         rrcf    (T1)   + 2, F
                          M         rrcf    (T1)   + 1, F
                          M         rrcf    T1,   F
                          M       else
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 3, W
                          M         MOVE?AB (T1)   + 3
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M         CHK?RP  T1
                          M         rrcf    (T1)  + 1, W
                          M         MOVE?AB (T1)   + 1
                          M         CHK?RP  T1
                          M         rrcf    T1,  W
                          M         MOVE?AB T1
                          M       endif
                          M     else
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000CC6 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000CCA C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
000CCE C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000CD2 C025 F015          M         movff   (T1) + 3, (R0) + 3
000CD6 0E04               M         movlw   004h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 263


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
000CD8 EC59 F001          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000CDC 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
000CDE C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
000CE2 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
000CE6 C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      01456         MUL?NCN T1, 00Ah, T1
                          M         MOVE?NN T1,  R3
                          M         MOVE?BB T1,  R3
000CEA C022 F01E          M         movff   T1,  R3
                          M         MOVE?BB (T1)  + 1, (R3)   + 1
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 264


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CEE C023 F01F          M         movff   (T1) + 1, (R3) + 1
                          M         MOVE?BB (T1)  + 2, (R3)   + 2
000CF2 C024 F020          M         movff   (T1) + 2, (R3) + 2
                          M         MOVE?BB (T1)  + 3, (R3)   + 3
000CF6 C025 F021          M         movff   (T1) + 3, (R3) + 3
                          M         MOVE?CN 00Ah, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (00Ah)
                          M         movwf   R1
                          M         movlw   high (00Ah)
                          M         movwf   (R1)   + 1
                          M         movlw   upper (00Ah)
                          M         movwf   (R1)   + 2
                          M         movlw   (00Ah) >> 24
                          M         movwf   (R1)   + 3
                          M     else
                          M         MOVE?CB low (00Ah), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (00Ah)) == 0)
                          M         clrf    R1
                          M     else
                          M       if (low (low (00Ah)) == 255)
                          M         setf    R1
                          M       else
000CFA 0E0A               M         movlw   low (low (00Ah))
000CFC 6E16               M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (00Ah), (R1)  + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 265


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (00Ah)) == 0)
000CFE 6A17               M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (00Ah)) == 255)
                          M         setf    (R1) + 1
                          M       else
                          M         movlw   low (high (00Ah))
                          M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (00Ah), (R1)  + 2
                          M         CHK?RP  (R1) + 2
                          M     if ((((R1) + 2) & 8000h) != PREV_ALT)
                          M       if (((R1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 2) & 8000h
                          M     endif
                          M     if (((((R1) + 2) & 0fffh) > BANKA_END) & ((((R1) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 2)
                          M PREV_BANK = high ((R1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (00Ah)) == 0)
000D00 6A18               M         clrf    (R1) + 2
                          M     else
                          M       if (low (upper (00Ah)) == 255)
                          M         setf    (R1) + 2
                          M       else
                          M         movlw   low (upper (00Ah))
                          M         movwf   (R1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (00Ah) >> 24, (R1)  + 3
                          M         CHK?RP  (R1) + 3
                          M     if ((((R1) + 3) & 8000h) != PREV_ALT)
                          M       if (((R1) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 3) & 8000h
                          M     endif
                          M     if (((((R1) + 3) & 0fffh) > BANKA_END) & ((((R1) + 3) & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 266


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((((R1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 3)
                          M PREV_BANK = high ((R1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((00Ah) >> 24) == 0)
000D02 6A19               M         clrf    (R1) + 3
                          M     else
                          M       if (low ((00Ah) >> 24) == 255)
                          M         setf    (R1) + 3
                          M       else
                          M         movlw   low ((00Ah) >> 24)
                          M         movwf   (R1) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
000D04 ECCC F001          M         call    MUL
                          M           else
                          M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 267


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000D08 6E22               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000D0A C01B F023          M         movff   (R2) + 1, (T1) + 1
                          M         MOVE?BB (R2)  + 2, (T1)   + 2
000D0E C01C F024          M         movff   (R2) + 2, (T1) + 2
                          M         MOVE?BB (R2)  + 3, (T1)   + 3
000D12 C01D F025          M         movff   (R2) + 3, (T1) + 3
                      01457         AND?BCN _Seconds, 00Fh, T2
000D16 0E0F               M         movlw   00Fh
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
000D18 1575               M         andwf   _Seconds, W
                          M         MOVE?AN T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000D1A 6E26               M         movwf   T2
000D1C 6A27               M         clrf    (T2)   + 1
000D1E 6A28               M         clrf    (T2)   + 2
000D20 6A29               M         clrf    (T2)   + 3
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 268


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01458         ADD?NNB T1, T2, _DecSec
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000D22 5022               M         movf    T1,  W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000D24 2426               M         addwf   T2,   W
                          M         MOVE?AB _DecSec
                          M         CHK?RP  _DecSec
                          M     if (((_DecSec) & 8000h) != PREV_ALT)
                          M       if ((_DecSec) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DecSec) & 8000h
                          M     endif
                          M     if ((((_DecSec) & 0fffh) > BANKA_END) & (((_DecSec) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DecSec) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DecSec)
                          M PREV_BANK = high (_DecSec)
                          M       endif
                          M     endif
000D26 6E54               M         movwf   _DecSec
                      01459 
                      01460 ; C:\USERS\ADMIN\DESKTOP\TEST\SAMOSAT\PROBA.PBP 00283   return
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 269


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01461         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000D28 0012               M         return
                      01462 
                      01463         END
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 270


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCMD                             00000000
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CHANNELS                      1
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADD?BCB                           
ADD?BCN                           
ADD?NNB                           
ADDEN                             00000003
ADDEN1                            00000003
ADDEN2                            00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AHEN                              00000001
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN13                              00000005
AN14                              00000002
AN15                              00000003
AN16                              00000004
AN17                              00000005
AN18                              00000006
AN19                              00000007
AN2                               00000002
AN3                               00000003
AN4                               00000005
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 271


SYMBOL TABLE
  LABEL                             VALUE 

AN8                               00000002
AN9                               00000003
AND?BCN                           
AND?WCN                           
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA3                             00000003
ANSA5                             00000005
ANSB0                             00000000
ANSB1                             00000001
ANSB2                             00000002
ANSB3                             00000003
ANSB4                             00000004
ANSB5                             00000005
ANSC2                             00000002
ANSC3                             00000003
ANSC4                             00000004
ANSC5                             00000005
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            00000F38
ANSELB                            00000F39
ANSELC                            00000F3A
ASM?                              
BANK0_END                         000000FF
BANK0_START                       00000060
BANK1_END                         000001FF
BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANK3_END                         000003FF
BANK3_START                       00000300
BANK4_END                         000004FF
BANK4_START                       00000400
BANK5_END                         000005FF
BANK5_START                       00000500
BANKA_END                         0000005F
BANKA_START                       00000000
BANKED                            00000001
BAUD1CON                          00000FB8
BAUD2CON                          00000F70
BAUDCON                           00000FB8
BAUDCON1                          00000FB8
BAUDCON2                          00000F70
BAUDCTL                           00000FB8
BCL1IE                            00000003
BCL1IF                            00000003
BCL1IP                            00000003
BCL2IE                            00000006
BCL2IF                            00000006
BCL2IP                            00000006
BCLIE                             00000003
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 272


SYMBOL TABLE
  LABEL                             VALUE 

BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BGVST                             00000006
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOEN                              00000004
BOR                               00000000
BRANCH?BCL                        
BRG16                             00000003
BRGH                              00000002
BRGH1                             00000002
BRGH2                             00000002
BRGOTO?L                          
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C12IN0M                           00000000
C12IN0N                           00000000
C12IN1M                           00000001
C12IN1N                           00000001
C12IN2M                           00000003
C12IN2N                           00000003
C12IN3M                           00000001
C12IN3N                           00000001
C1CH0                             00000000
C1CH1                             00000001
C1HYS                             00000003
C1IE                              00000006
C1IF                              00000006
C1INP                             00000003
C1IP                              00000006
C1OE                              00000005
C1ON                              00000007
C1OUT_CM1CON                      00000006
C1OUT_CM1CON0                     00000006
C1OUT_PORTA                       00000004
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SP                              00000003
C1SYNC                            00000001
C1TSEL0                           00000000
C1TSEL1                           00000001
C2CH0                             00000000
C2CH1                             00000001
C2HYS                             00000002
C2IE                              00000005
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 273


SYMBOL TABLE
  LABEL                             VALUE 

C2IF                              00000005
C2INP                             00000002
C2IP                              00000005
C2OE                              00000005
C2ON                              00000007
C2OUT_CM2CON                      00000006
C2OUT_CM2CON0                     00000006
C2OUT_PORTA                       00000005
C2POL                             00000004
C2R                               00000002
C2RSEL                            00000004
C2SP                              00000003
C2SYNC                            00000000
C2TSEL0                           00000003
C2TSEL1                           00000004
C3TSEL0                           00000006
C3TSEL1                           00000007
C4TSEL0                           00000000
C4TSEL1                           00000001
C5TSEL0                           00000002
C5TSEL1                           00000003
CCP1                              00000002
CCP1AS0                           00000004
CCP1AS1                           00000005
CCP1AS2                           00000006
CCP1ASE                           00000007
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1MD                            00000000
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2AS                            00000F64
CCP2AS0                           00000004
CCP2AS1                           00000005
CCP2AS2                           00000006
CCP2ASE                           00000007
CCP2CON                           00000F66
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MD                            00000001
CCP2_BIT                          00000001
CCP2_PORTB                        00000003
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 274


SYMBOL TABLE
  LABEL                             VALUE 

CCP2_PORTC                        00000001
CCP2_REG                          00000F82
CCP3AS                            00000F5B
CCP3AS0                           00000004
CCP3AS1                           00000005
CCP3AS2                           00000006
CCP3ASE                           00000007
CCP3CON                           00000F5D
CCP3IE                            00000000
CCP3IF                            00000000
CCP3IP                            00000000
CCP3M0                            00000000
CCP3M1                            00000001
CCP3M2                            00000002
CCP3M3                            00000003
CCP3MD                            00000002
CCP3_BIT                          00000000
CCP3_PORTB                        00000005
CCP3_PORTC                        00000006
CCP3_REG                          00000000
CCP4                              00000000
CCP4CON                           00000F57
CCP4IE                            00000001
CCP4IF                            00000001
CCP4IP                            00000001
CCP4M0                            00000000
CCP4M1                            00000001
CCP4M2                            00000002
CCP4M3                            00000003
CCP4MD                            00000003
CCP4_BIT                          00000003
CCP4_REG                          00000000
CCP5                              00000004
CCP5CON                           00000F54
CCP5IE                            00000002
CCP5IF                            00000002
CCP5IP                            00000002
CCP5M0                            00000000
CCP5M1                            00000001
CCP5M2                            00000002
CCP5M3                            00000003
CCP5MD                            00000004
CCP5_BIT                          00000004
CCP5_REG                          00000000
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000F67
CCPR2H                            00000F68
CCPR2L                            00000F67
CCPR3                             00000F5E
CCPR3H                            00000F5F
CCPR3L                            00000F5E
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 275


SYMBOL TABLE
  LABEL                             VALUE 

CCPR4                             00000F58
CCPR4H                            00000F59
CCPR4L                            00000F58
CCPR5                             00000F55
CCPR5H                            00000F56
CCPR5L                            00000F55
CCPTMRS0                          00000F49
CCPTMRS1                          00000F48
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CK                                00000006
CK1                               00000006
CK2                               00000006
CKE                               00000006
CKP                               00000004
CKTXP                             00000004
CLEAR?                            
CLEAR_USED                        00000001
CLRWDT?                           
CLRWDT?NOP                        
CM12CON                           00000F77
CM1CON                            00000F79
CM1CON0                           00000F79
CM2CON                            00000F78
CM2CON0                           00000F78
CM2CON1                           00000F77
CMP                               000002D8
CMP1MD                            00000001
CMP2MD                            00000002
CMPEQ?BBL                         
CMPEQ?TCL                         
CMPEQ?WWL                         
CMPEQW                            000002BC
CMPEQW_USED                       00000001
CMPF?TL                           
CMPLE?WCL                         
CMPLEW                            000002C2
CMPLEW_USED                       00000001
CMPLT?WCL                         
CMPLTW                            000002C8
CMPLTW_USED                       00000001
CMPNE                             000002CE
CMPNE?NCL                         
CMPNE?TCL                         
CMPNE_USED                        00000001
CMPT?TL                           
CMPW                              000002D4
CMPW_USED                         00000001
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 276


SYMBOL TABLE
  LABEL                             VALUE 

CMP_USED                          00000001
CREN                              00000004
CREN1                             00000004
CREN2                             00000004
CSRC                              00000007
CSRC1                             00000007
CSRC2                             00000007
CTED1                             00000002
CTED2                             00000003
CTMUCON0                          00000F45
CTMUCON1                          00000F44
CTMUCONH                          00000F45
CTMUCONL                          00000F44
CTMUEN                            00000007
CTMUICON                          00000F43
CTMUICONH                         00000F43
CTMUIE                            00000003
CTMUIF                            00000003
CTMUIP                            00000003
CTMUMD                            00000003
CTMUSIDL                          00000005
CTPLS                             00000002
CTTRIG                            00000000
CVREF                             00000002
D                                 00000005
DACCON0                           00000F41
DACCON1                           00000F40
DACEN                             00000007
DACLPS                            00000006
DACNSS                            00000000
DACOE                             00000005
DACOUT                            00000002
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DC3B0                             00000004
DC3B1                             00000005
DC4B0                             00000004
DC4B1                             00000005
DC5B0                             00000004
DC5B1                             00000005
DDISABLE?                         
DDRA                              TRISA
DDRB                              TRISB
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 277


SYMBOL TABLE
  LABEL                             VALUE 

DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019D
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DHEN                              00000000
DIV                               00000334
DIV?CWW                           
DIV?NCW                           
DIVS                              00000310
DIVS_USED                         00000001
DIV_USED                          00000001
DONE                              00000001
DT1                               00000007
DT2                               00000007
DTRXP                             00000005
DUNN                              000004CC
DUNN5                             000004CE
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP2AS                           00000F64
ECCP3AS                           00000F5B
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EDG1POL                           00000004
EDG1SEL0                          00000002
EDG1SEL1                          00000003
EDG1STAT                          00000000
EDG2POL                           00000007
EDG2SEL0                          00000005
EDG2SEL1                          00000006
EDG2STAT                          00000001
EDGEN                             00000003
EDGSEQEN                          00000002
EEADR                             00000FA9
EEADR0                            00000000
EEADR1                            00000001
EEADR2                            00000002
EEADR3                            00000003
EEADR4                            00000004
EEADR5                            00000005
EEADR6                            00000006
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 278


SYMBOL TABLE
  LABEL                             VALUE 

EEADR7                            00000007
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
ENDASM?                           
FAST                              00000001
FERR                              00000002
FERR1                             00000002
FERR2                             00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FVRCON                            00000F42
FVREN                             00000007
FVRS0                             00000004
FVRS1                             00000005
FVRST                             00000006
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000001
GOSUB?L                           
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HFIOFS                            00000002
HLVDCON                           00000F9C
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 279


SYMBOL TABLE
  LABEL                             VALUE 

HLVDL3                            00000003
HPWM10                            
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000067
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000067
HSER_TXSTA                        00000020
I2CCLOCK?T                        
I2CDATA?T                         
I2CFIRSTFLAG                      FLAGS, 2
I2CREAD                           0000000A
I2CREAD?B                         
I2CREADFLAG                       FLAGS, 3
I2CREADS                          00000006
I2CREADS?B                        
I2CREADS?W                        
I2CREAD_USED                      00000001
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITE                          0000003C
I2CWRITE?B                        
I2CWRITE?C                        
I2CWRITEFLAG                      FLAGS, 4
I2CWRITES                         00000038
I2CWRITES?B                       
I2CWRITES?C                       
I2CWRITE_USED                     00000001
I2C_SCL                           PORTC,1
I2C_SCLOUT                        1
I2C_SDA                           PORTC,0
I2C_SLOW                          1
IDISSEN                           00000001
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              000004D2
INPUT?T                           
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 280


SYMBOL TABLE
  LABEL                             VALUE 

INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOCB                              00000F62
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IPR4                              00000F7C
IPR5                              00000F7F
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRNG0                             00000000
IRNG1                             00000001
IRVST                             00000005
ITRIM0                            00000002
ITRIM1                            00000003
ITRIM2                            00000004
ITRIM3                            00000005
ITRIM4                            00000006
ITRIM5                            00000007
IVRST                             00000005
JUMPMAN                           000004C0
JUMPMAN_USED                      00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L00001                            00000658
L00002                            00000792
L00003                            00000522
L00004                            00000558
L00005                            00000512
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 281


SYMBOL TABLE
  LABEL                             VALUE 

L00007                            0000051C
L00009                            0000052A
L00011                            0000054E
L00012                            00000558
L00013                            00000548
L00015                            00000556
L00017                            00000594
L00019                            000005B0
L00021                            000005C0
L00023                            000007CA
L00025                            00000762
L00027                            0000075A
L00028                            00000762
L00029                            000007D2
L00031                            00000834
L00033                            00000808
L00034                            00000810
L00035                            00000828
L00037                            00000834
L00039                            0000098E
L?CALL                            
L?GOTO                            
LABEL?L                           
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            000000F6
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 282


SYMBOL TABLE
  LABEL                             VALUE 

LCDOUT?B                          
LCDOUT?C                          
LCDOUTCOUNT?C                     
LCDOUTDEC?                        
LCDOUTJ                           000000F4
LCDOUTJ_USED                      00000001
LCDOUTNUM?B                       
LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          0
LCD_DREG                          PORTA
LCD_EBIT                          4
LCD_EREG                          PORTA
LCD_LINE                          2
LCD_LINES                         00000002
LCD_RSBIT                         5
LCD_RSREG                         PORTA
LCD_RWBIT                         00000005
LCD_RWREG                         00000F80
LFIOFS                            00000000
LOW?T                             
LVDCON                            00000F9C
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MC1OUT                            00000007
MC2OUT                            00000006
MCLR                              00000003
MFIOFS                            00000001
MFIOSEL                           00000004
MOVE?AB                           
MOVE?AN                           
MOVE?ANN                          
MOVE?ANW                          
MOVE?AT                           
MOVE?AW                           
MOVE?AWN                          
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BN                           
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 283


SYMBOL TABLE
  LABEL                             VALUE 

MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CN                           
MOVE?CT                           
MOVE?CW                           
MOVE?NA                           
MOVE?NB                           
MOVE?NN                           
MOVE?NNA                          
MOVE?NT                           
MOVE?NW                           
MOVE?NWA                          
MOVE?TA                           
MOVE?TB                           
MOVE?TN                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WN                           
MOVE?WNA                          
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MPASMWIN_USED                     00000001
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MSSP1MD                           00000006
MSSP2MD                           00000007
MUL                               00000398
MUL?NCN                           
MUL?WWN                           
MUL_USED                          00000001
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_SS1                           00000005
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 284


SYMBOL TABLE
  LABEL                             VALUE 

NOT_SS2                           00000000
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_T5SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
NO_CLRWDT                         1
NVCFG0                            00000000
NVCFG1                            00000001
OERR                              00000001
OERR1                             00000001
OERR2                             00000001
OR?CNB                            
OR?NNW                            
OR?TTN                            
OSC                               16
OSCCON                            00000FD3
OSCCON2                           00000FD2
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSC_VALID                         00000001
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
P1B                               00000002
P1C                               00000001
P1D                               00000004
P1DC0                             00000000
P1DC1                             00000001
P1DC2                             00000002
P1DC3                             00000003
P1DC4                             00000004
P1DC5                             00000005
P1DC6                             00000006
P1M0                              00000006
P1M1                              00000007
P1RSEN                            00000007
P1SSAC0                           00000002
P1SSAC1                           00000003
P1SSBD0                           00000000
P1SSBD1                           00000001
P2A_PORTB                         00000003
P2A_PORTC                         00000001
P2B_PORTB                         00000005
P2B_PORTC                         00000000
P2DC0                             00000000
P2DC1                             00000001
P2DC2                             00000002
P2DC3                             00000003
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 285


SYMBOL TABLE
  LABEL                             VALUE 

P2DC4                             00000004
P2DC5                             00000005
P2DC6                             00000006
P2M0                              00000006
P2M1                              00000007
P2RSEN                            00000007
P2SSAC0                           00000002
P2SSAC1                           00000003
P2SSBD0                           00000000
P2SSBD1                           00000001
P3A_PORTB                         00000005
P3A_PORTC                         00000006
P3B                               00000007
P3DC0                             00000000
P3DC1                             00000001
P3DC2                             00000002
P3DC3                             00000003
P3DC4                             00000004
P3DC5                             00000005
P3DC6                             00000006
P3M0                              00000006
P3M1                              00000007
P3RSEN                            00000007
P3SSAC0                           00000002
P3SSAC1                           00000003
P3SSBD0                           00000000
P3SSBD1                           00000001
PAUSE                             00000262
PAUSE?C                           
PAUSEB                            0000025C
PAUSEUS                           00000280
PAUSEUSB                          0000027E
PAUSEUS_USED                      00000001
PAUSEW                            0000025E
PAUSE_DELAY                       000003E5
PAUSE_USED                        00000001
PB01                              0000002A
PB02                              0000002B
PB03                              0000002C
PB04                              0000002D
PBP_HARDWAREDEF                   
PBP_PATH                          C:\PBP3\
PC                                00000FF9
PCIE                              00000006
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 286


SYMBOL TABLE
  LABEL                             VALUE 

PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIE4                              00000F7A
PIE5                              00000F7D
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PIR4                              00000F7B
PIR5                              00000F7E
PLLEN                             00000006
PLLRDY                            00000007
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
PMD0                              00000F3F
PMD1                              00000F3E
PMD2                              00000F3D
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FBB
PR2const                          003D0900
PR4                               00000F52
PR6                               00000F4B
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_ALT                          00000000
PREV_BANK                         00000000
PRISD                             00000002
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PS                                00003D09
PSA                               00000003
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 287


SYMBOL TABLE
  LABEL                             VALUE 

PSS1AC0                           00000002
PSS1AC1                           00000003
PSS1BD0                           00000000
PSS1BD1                           00000001
PSS2AC0                           00000002
PSS2AC1                           00000003
PSS2BD0                           00000000
PSS2BD1                           00000001
PSS3AC0                           00000002
PSS3AC1                           00000003
PSS3BD0                           00000000
PSS3BD1                           00000001
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTR1CON                          00000FB9
PSTR2CON                          00000F63
PSTR3CON                          00000F5A
PSTRCON                           00000FB9
PULSIN_MAX                        0000FFFF
PVCFG0                            00000002
PVCFG1                            00000003
PWM1CON                           00000FB7
PWM2CON                           00000F65
PWM3CON                           00000F5C
PWMCON                            00000FB7
R                                 00000002
R0                                00000012
R1                                00000016
R2                                0000001A
R3                                0000001E
R4                                00000002
R5                                00000004
R6                                00000006
R7                                00000008
R8                                0000000A
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000006
RAM_END                           000005FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 288


SYMBOL TABLE
  LABEL                             VALUE 

RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1IP                             00000005
RC1REG                            00000FAE
RC1STA                            00000FAB
RC2                               00000002
RC2IE                             00000005
RC2IF                             00000005
RC2IP                             00000005
RC2REG                            00000F74
RC2STA                            00000F71
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCREG1                            00000FAE
RCREG2                            00000F74
RCSTA                             00000FAB
RCSTA1                            00000FAB
RCSTA2                            00000F71
RD                                00000000
RD16                              00000001
RE3                               00000003
RESET_ORG                         00000000
RETURN?                           
RI                                00000004
RM1                               0000000C
RM2                               0000000D
RR1                               0000000E
RR2                               0000000F
RS1                               00000010
RS2                               00000011
RSEN                              00000001
RST?RP                            
RX                                00000007
RX1                               00000007
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 289


SYMBOL TABLE
  LABEL                             VALUE 

RX2                               00000007
RX9                               00000006
RX91                              00000006
RX92                              00000006
RX9D                              00000000
RX9D1                             00000000
RX9D2                             00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBCDE                             00000002
SBOREN                            00000006
SCIE                              00000005
SCK                               00000003
SCK1                              00000003
SCK2                              00000001
SCKP                              00000004
SCL                               00000003
SCL1                              00000003
SCL2                              00000001
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDA1                              00000004
SDA2                              00000002
SDAHT                             00000003
SDI                               00000004
SDI1                              00000004
SDI2                              00000002
SDO                               00000005
SDO1                              00000005
SDO2                              00000003
SEN                               00000000
SENDB                             00000003
SENDB1                            00000003
SENDB2                            00000003
SEROUT2DEC                        0000019E
SEROUT2DEC_USED                   00000001
SEROUT2SEND                       0000023C
SEROUT2SEND_USED                  00000001
SHIFTL                            0000029E
SHIFTL?BCN                        
SHIFTL?NCN                        
SHIFTL?NCW                        
SHIFTL_USED                       00000001
SHIFTR                            000002B2
SHIFTR?NCN                        
SHIFTR?WCW                        
SHIFTR_USED                       00000001
SHOWDIGITALDEFAULT                0
SHOWDIGITALRESULT                 00000000
SLRA                              00000000
SLRB                              00000001
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 290


SYMBOL TABLE
  LABEL                             VALUE 

SLRC                              00000002
SLRCON                            00000F60
SMP                               00000007
SOSCGO                            00000003
SOSCRUN                           00000006
SP0                               00000000
SP1                               00000001
SP1BRG                            00000FAF
SP1BRGH                           00000FB0
SP2                               00000002
SP2BRG                            00000F75
SP2BRGH                           00000F76
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRG1                            00000FAF
SPBRG2                            00000F75
SPBRGH                            00000FB0
SPBRGH1                           00000FB0
SPBRGH2                           00000F76
SPEN                              00000007
SPEN1                             00000007
SPEN2                             00000007
SRCLK0                            00000004
SRCLK1                            00000005
SRCLK2                            00000006
SRCON0                            00000F47
SRCON1                            00000F46
SREN                              00000005
SREN1                             00000005
SREN2                             00000005
SRI                               00000000
SRLEN                             00000007
SRNQ                              00000005
SRNQEN                            00000002
SRPR                              00000000
SRPS                              00000001
SRQ                               00000004
SRQEN                             00000003
SRRC1E                            00000000
SRRC2E                            00000001
SRRCKE                            00000002
SRRPE                             00000003
SRSC1E                            00000004
SRSC2E                            00000005
SRSCKE                            00000006
SRSPE                             00000007
SS                                00000005
SS1                               00000005
SS2                               00000000
SSP1ADD                           00000FC8
SSP1BUF                           00000FC9
SSP1CON1                          00000FC6
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 291


SYMBOL TABLE
  LABEL                             VALUE 

SSP1CON2                          00000FC5
SSP1CON3                          00000FCB
SSP1IE                            00000003
SSP1IF                            00000003
SSP1IP                            00000003
SSP1MSK                           00000FCA
SSP1STAT                          00000FC7
SSP2ADD                           00000F6E
SSP2BUF                           00000F6F
SSP2CON1                          00000F6C
SSP2CON2                          00000F6B
SSP2CON3                          00000F69
SSP2IE                            00000007
SSP2IF                            00000007
SSP2IP                            00000007
SSP2MSK                           00000F6A
SSP2STAT                          00000F6D
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPCON3                           00000FCB
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000FCA
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
STR1A                             00000000
STR1B                             00000001
STR1C                             00000002
STR1D                             00000003
STR1SYNC                          00000004
STR2A                             00000000
STR2B                             00000001
STR2C                             00000002
STR2D                             00000003
STR2SYNC                          00000004
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 292


SYMBOL TABLE
  LABEL                             VALUE 

STR3A                             00000000
STR3B                             00000001
STR3C                             00000002
STR3D                             00000003
STR3SYNC                          00000004
SUB?BCB                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SYNC1                             00000004
SYNC2                             00000004
SetReg                            
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1                                00000022
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1G                               00000005
T1GCON                            00000FCC
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1G_DONE                          00000003
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RD16                            00000001
T1SOSCEN                          00000003
T1SYNC                            00000002
T2                                00000026
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FBA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CKI_PORTB                       00000005
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 293


SYMBOL TABLE
  LABEL                             VALUE 

T3CKI_PORTC                       00000000
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3G                               00000000
T3GCON                            00000FB4
T3GGO                             00000003
T3GGO_NOT_DONE                    00000003
T3GPOL                            00000006
T3GSPM                            00000004
T3GSS0                            00000000
T3GSS1                            00000001
T3GTM                             00000005
T3GVAL                            00000002
T3G_DONE                          00000003
T3OSCEN                           00000003
T3RD16                            00000001
T3SOSCEN                          00000003
T4CKPS0                           00000000
T4CKPS1                           00000001
T4CON                             00000F51
T4OUTPS0                          00000003
T4OUTPS1                          00000004
T4OUTPS2                          00000005
T4OUTPS3                          00000006
T5CKI                             00000002
T5CKPS0                           00000004
T5CKPS1                           00000005
T5CON                             00000F4E
T5G                               00000004
T5GCON                            00000F4D
T5GGO                             00000003
T5GGO_NOT_DONE                    00000003
T5GPOL                            00000006
T5GSPM                            00000004
T5GSS0                            00000000
T5GSS1                            00000001
T5GTM                             00000005
T5GVAL                            00000002
T5G_DONE                          00000003
T5RD16                            00000001
T5SOSCEN                          00000003
T5SYNC                            00000002
T6CKPS0                           00000000
T6CKPS1                           00000001
T6CON                             00000F4A
T6OUTPS0                          00000003
T6OUTPS1                          00000004
T6OUTPS2                          00000005
T6OUTPS3                          00000006
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 294


SYMBOL TABLE
  LABEL                             VALUE 

TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TGEN                              00000004
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000000
TMR1GIF                           00000000
TMR1GIP                           00000000
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1MD                            00000000
TMR1ON                            00000000
TMR2                              00000FBC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2MD                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS0                           00000006
TMR3CS1                           00000007
TMR3GE                            00000007
TMR3GIE                           00000001
TMR3GIF                           00000001
TMR3GIP                           00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3MD                            00000002
TMR3ON                            00000000
TMR4                              00000F53
TMR4IE                            00000000
TMR4IF                            00000000
TMR4IP                            00000000
TMR4MD                            00000003
TMR4ON                            00000002
TMR5                              00000F4F
TMR5CS0                           00000006
TMR5CS1                           00000007
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 295


SYMBOL TABLE
  LABEL                             VALUE 

TMR5GE                            00000007
TMR5GIE                           00000002
TMR5GIF                           00000002
TMR5GIP                           00000002
TMR5H                             00000F50
TMR5IE                            00000001
TMR5IF                            00000001
TMR5IP                            00000001
TMR5L                             00000F4F
TMR5MD                            00000004
TMR5ON                            00000000
TMR6                              00000F4C
TMR6IE                            00000002
TMR6IF                            00000002
TMR6IP                            00000002
TMR6MD                            00000005
TMR6ON                            00000002
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRIGSEL                           00000007
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISE                             00000F96
TRMT                              00000001
TRMT1                             00000001
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 296


SYMBOL TABLE
  LABEL                             VALUE 

TRMT2                             00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX                                00000006
TX1                               00000006
TX1IE                             00000004
TX1IF                             00000004
TX1IP                             00000004
TX1REG                            00000FAD
TX1STA                            00000FAC
TX2                               00000006
TX2IE                             00000004
TX2IF                             00000004
TX2IP                             00000004
TX2REG                            00000F73
TX2STA                            00000F72
TX9                               00000006
TX91                              00000006
TX92                              00000006
TX9D                              00000000
TX9D1                             00000000
TX9D2                             00000000
TXEN                              00000005
TXEN1                             00000005
TXEN2                             00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXREG1                            00000FAD
TXREG2                            00000F73
TXSTA                             00000FAC
TXSTA1                            00000FAC
TXSTA2                            00000F72
UA                                00000001
UART1MD                           00000006
UART2MD                           00000007
VDIRMAG                           00000007
VPP                               00000003
VREFCON0                          00000F42
VREFCON1                          00000F41
VREFCON2                          00000F40
VREFM                             00000002
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WPUB                              00000F61
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 297


SYMBOL TABLE
  LABEL                             VALUE 

WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WPUE3                             00000007
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_Akvarijum                        0000002E
_AutomatskoAkvarijum              PB01, 000h
_AutomatskoSoba                   PB01, 001h
_BCKLIGHT                         _PORTC??3
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_190_2L                      000000FF
_BORV_220_2L                      000000F7
_BORV_250_2L                      000000EF
_BORV_285_2L                      000000E7
_BezTastera                       00000030
_BrojKanala                       0000004A
_CCP2MX_PORTB3_3H                 000000FE
_CCP2MX_PORTC1_3H                 000000FF
_CCP3MX_PORTB5_3H                 000000FF
_CCP3MX_PORTC6_3H                 000000FB
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 298


SYMBOL TABLE
  LABEL                             VALUE 

_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_Days                             0000004B
_DecMin                           0000004C
_DecMin1                          0000004D
_DecMinutGlavni                   0000004E
_DecMinutPrikaz                   0000004F
_DecSat                           00000050
_DecSat1                          00000051
_DecSatPrikaz                     00000053
_DecSatglavni                     00000052
_DecSec                           00000054
_DesniBrojac                      00000055
_DutyCycleL1                      0000007B
_DutyCycleL2                      0000007F
_DutyCycleL3                      00000083
_DutyCycleL4                      00000087
_DveTacke                         00000056
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_EPROM                            000000A0
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_FOSC_ECHPIO6_1H                  000000F5
_FOSC_ECHP_1H                     000000F4
_FOSC_ECLPIO6_1H                  000000FD
_FOSC_ECLP_1H                     000000FC
_FOSC_ECMPIO6_1H                  000000FB
_FOSC_ECMP_1H                     000000FA
_FOSC_HSHP_1H                     000000F2
_FOSC_HSMP_1H                     000000F3
_FOSC_INTIO67_1H                  000000F8
_FOSC_INTIO7_1H                   000000F9
_FOSC_LP_1H                       000000F0
_FOSC_RCIO6_1H                    000000F7
_FOSC_RC_1H                       000000F6
_FOSC_XT_1H                       000000F1
_Frequency                        00000032
_GetCH_1                          00000658
_GetCH_2                          00000664
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 299


SYMBOL TABLE
  LABEL                             VALUE 

_GetCH_3                          00000670
_GetCH_4                          0000067C
_GetCH_5                          00000688
_GetCH_Done                       00000690
_HFOFST_OFF_3H                    000000F7
_HFOFST_ON_3H                     000000FF
_HPWM10_UPD                       000004D6
_HP_Channel                       00000058
_HP_Duty                          00000034
_HP_Flags                         00000059
_HP_Flags??0                      _HP_Flags, 000h
_HP_Flags??1                      _HP_Flags, 001h
_HP_Flags??2                      _HP_Flags, 002h
_HP_Flags??3                      _HP_Flags, 003h
_HP_Freq                          00000036
_HP_PR2                           0000005A
_HP_Temp                          00000038
_HP_Temp??HIGHBYTE                00000039
_HP_Temp??LOWBYTE                 00000038
_Hours                            00000057
_Hours??6                         _Hours, 006h
_Hours??7                         _Hours, 007h
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_INTCON2??7                       INTCON2, 007h
_JacinaOsvetljenja1               0000005C
_JacinaOsvetljenja2               0000005D
_KMinuta                          0000003A
_Kanal1                           0000005E
_Kanal2                           0000005F
_Kanal3                           00000060
_Kanal4                           00000061
_LM75                             00000091
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_LeviBrojac                       00000062
_MCLRE_EXTMCLR_3H                 000000FF
_MCLRE_INTMCLR_3H                 0000007F
_Main                             00000980
_MaliBit                          PB01, 006h
_Memorija                         000000B3
_MeriTemperaturu                  00000AD0
_MinutKraj                        00000064
_MinutPocetak                     00000065
_Minutes                          00000063
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 300


SYMBOL TABLE
  LABEL                             VALUE 

_Minutes??7                       _Minutes, 007h
_ModDanNoc                        PB01, 007h
_Month                            00000066
_NoviMinut                        00000067
_NovoStanjeDesno                  PB02, 000h
_NovoStanjeDole                   PB02, 001h
_NovoStanjeGore                   PB02, 002h
_NovoStanjeLevo                   PB02, 003h
_NovoStanjeOdrzavanje             PB02, 004h
_NovoStanjeOk                     PB02, 005h
_NovostanjeRTC                    00000068
_OdrzavanjeJacina                 00000069
_OdrzavanjeMod                    PB02, 007h
_OsvKraj                          0000006B
_OsvPocetak                       0000006C
_OsvetljenjeOdrzavanje            0000006A
_OverHPWM10                       00000836
_P2BMX_PORTB5_3H                  000000FF
_P2BMX_PORTC0_3H                  000000DF
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PIR1??1                          PIR1, 001h
_PLLCFG_OFF_1H                    000000EF
_PLLCFG_ON_1H                     000000FF
_PMinuta                          0000003C
_PORTB??0                         PORTB, 000h
_PORTB??1                         PORTB, 001h
_PORTB??2                         PORTB, 002h
_PORTB??3                         PORTB, 003h
_PORTB??4                         PORTB, 004h
_PORTB??5                         PORTB, 005h
_PORTB??6                         PORTB, 006h
_PORTB??7                         PORTB, 007h
_PORTC??0                         PORTC, 000h
_PORTC??1                         PORTC, 001h
_PORTC??2                         PORTC, 002h
_PORTC??3                         PORTC, 003h
_PORTC??4                         PORTC, 004h
_PORTC??5                         PORTC, 005h
_PORTC??6                         PORTC, 006h
_PORTH                            00000F82
_PORTL                            00000F81
_PR2changed                       _HP_Flags??3
_PRICLKEN_OFF_1H                  000000DF
_PRICLKEN_ON_1H                   000000FF
_PS0                              _HP_Flags??0
_PS1                              _HP_Flags??1
_PSchanged                        _HP_Flags??2
_PWRTEN_OFF_2L                    000000FF
_PWRTEN_ON_2L                     000000FE
_PauzaZaTaster                    00000064
_PocetnaAdresaJezika              0000003E
_Pozicija                         0000006D
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 301


SYMBOL TABLE
  LABEL                             VALUE 

_Prekidac                         PB03, 001h
_Pritisnuto                       PB03, 002h
_PutCH_1                          00000792
_PutCH_2                          0000079E
_PutCH_3                          000007AA
_PutCH_4                          000007B6
_PutCH_5                          000007C2
_PutCH_Done                       000007CA
_RELEJ1                           _PORTC??4
_RELEJ2                           _PORTC??5
_RTC                              000000A2
_RelejiMemorija                   000000A2
_Rkanal1                          0000006E
_Rkanal2                          0000006F
_Rkanal3                          00000070
_Rkanal4                          00000071
_Room                             PB03, 003h
_RtcCnt                           00000072
_SCL                              _PORTC??1
_SDA                              _PORTC??0
_STKanal1                         0000008B
_STKanal2                         0000008F
_STKanal3                         00000093
_STKanal4                         00000097
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_SatKraj                          00000073
_SatPocetak                       00000074
_Seconds                          00000075
_Soba                             00000042
_StaroStanjeDesno                 PB03, 004h
_StaroStanjeDole                  PB03, 005h
_StaroStanjeGore                  PB03, 006h
_StaroStanjeLevo                  PB03, 007h
_StaroStanjeOdrzavanje            PB04, 000h
_StaroStanjeOk                    PB04, 001h
_StarostanjeRTC                   00000076
_Strelica                         0000007E
_T2CKPS0                          _T2CON??0
_T2CKPS1                          _T2CON??1
_T2CON??0                         T2CON, 000h
_T2CON??1                         T2CON, 001h
_T2CON??2                         T2CON, 002h
_T3CMX_PORTB5_3H                  000000EF
_T3CMX_PORTC0_3H                  000000FF
_TASTDESNO                        _PORTB??4
_TASTDOLE                         _PORTB??5
_TASTGORE                         _PORTB??6
_TASTLEVO                         _PORTB??1
_TASTODRZAVANJE                   _PORTB??7
_TASTOK                           _PORTB??2
_TMR2IF                           _PIR1??1
_TMR2ON                           _T2CON??2
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 302


SYMBOL TABLE
  LABEL                             VALUE 

_TMinuta                          00000048
_TRISH                            00000F94
_TRISL                            00000F93
_Temp                             00000044
_Temperatura                      00000077
_TemperaturaIzEproma              00000046
_UpisiVreme                       00000B34
_UzmiVreme                        00000B9C
_VremePrekidaca                   PB04, 002h
_WDTEN_NOSLP_2H                   000000FD
_WDTEN_OFF_2H                     000000FC
_WDTEN_ON_2H                      000000FF
_WDTEN_SWON_2H                    000000FE
_WDTPS_1024_2H                    000000EB
_WDTPS_128_2H                     000000DF
_WDTPS_16384_2H                   000000FB
_WDTPS_16_2H                      000000D3
_WDTPS_1_2H                       000000C3
_WDTPS_2048_2H                    000000EF
_WDTPS_256_2H                     000000E3
_WDTPS_2_2H                       000000C7
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000D7
_WDTPS_4096_2H                    000000F3
_WDTPS_4_2H                       000000CB
_WDTPS_512_2H                     000000E7
_WDTPS_64_2H                      000000DB
_WDTPS_8192_2H                    000000F7
_WDTPS_8_2H                       000000CF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
_Years                            0000007A
__18F25K22                        00000001
_desno                            PB01, 002h
_displej                          0000009B
_dole                             PB01, 003h
_gore                             PB01, 004h
_i                                0000005B
_levo                             PB01, 005h
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 303


SYMBOL TABLE
  LABEL                             VALUE 

_odrzavanje                       PB02, 006h
_ok                               PB03, 000h
_smece                            00000040
_x                                00000078
_y                                00000079
cmpb1                             000002F2
cmpdiff                           0000030A
cmpnoteq                          000002F6
cmpw1                             000002EC
divchkr1                          00000322
divdo                             00000336
divdone                           00000392
divloop                           00000342
divok                             00000370
i2cckh                            000000E0
i2cckl                            000000D4
i2cdah                            00000072
i2cdal                            00000082
i2cgetbit                         000000C4
i2chigh                           0000007E
i2chl                             00000092
i2clow                            0000008C
i2creaddone                       00000034
i2creadip                         00000016
i2creadloop                       0000001A
i2cslowloop                       00000096
i2cstart                          0000009C
i2cstop                           00000064
i2cwrite2                         0000004C
i2cwritec                         000000AA
i2cwritedone                      00000060
i2cwriteip                        0000005A
i2cwriteloop                      000000B0
lcdchkcd                          0000016C
lcdloop                           0000017E
lcdout1                           00000150
lcdoutcom                         0000014E
lcdsend                           0000017A
main                              000004D2
muldone                           000004BA
mulsign                           000004A6
pauseloop                         00000264
pauseush                          0000028C
pauseusloop                       0000028A
serout2ddig                       00000224
serout2send1                      0000024C
shiftlloop                        00000294
shiftrloop                        000002A8
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 304


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.43                         PROBA.ASM   1-29-2013  19:29:23         PAGE 305


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXX------ ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  3381
Program Memory Bytes Free: 29387


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     8 suppressed

