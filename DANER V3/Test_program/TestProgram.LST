MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 3.0.4.1, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 MPASMWIN_USED                   EQU     1
                      00004 
                      00005 #define PBP_PATH        C:\PBP3\
                      00006 
                      00007 
                      00008 
                      00009 
                      00016         LIST
                      00017         LIST p = 18F25K22, r = dec, w = -311, w = -230, f = inhx32
                      00018         INCLUDE "P18F25K22.INC" ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F25K22 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      02664         LIST
                      00021         LIST
  00F00000            00022 EEPROM_START    EQU     0F00000h
  00000040            00023 BLOCK_SIZE      EQU     64
                      00024 
                      00025 
                      00026 PBP_HARDWAREDEF  macro
                      00027   endm
                      00028 
                      00029 
28 00 3C 18 81 00 80 000030     CONFIG FOSC = INTIO67
       F E0 0F 40 
                      00031     CONFIG PLLCFG = OFF
                      00032     CONFIG PRICLKEN = ON
                      00033     CONFIG FCMEN = OFF
                      00034     CONFIG IESO = OFF
                      00035     CONFIG PWRTEN = ON
                      00036     CONFIG BOREN = OFF
                      00037     CONFIG BORV = 285
                      00038     CONFIG WDTEN = OFF
                      00039     CONFIG WDTPS = 32768
                      00040     CONFIG CCP2MX = PORTB3
                      00041     CONFIG PBADEN = OFF
                      00042     CONFIG CCP3MX = PORTC6
                      00043     CONFIG HFOFST = ON
                      00044     CONFIG T3CMX = PORTC0
                      00045     CONFIG P2BMX = PORTC0
                      00046     CONFIG MCLRE = INTMCLR
                      00047     CONFIG STVREN = ON
                      00048     CONFIG LVP = OFF
                      00049     CONFIG XINST = OFF
                      00050     CONFIG CP0 = ON
                      00051     CONFIG CP1 = ON
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00052     CONFIG CP2 = ON
                      00053     CONFIG CP3 = ON
                      00054     CONFIG CPB = ON
                      00055     CONFIG CPD = OFF
                      00056     CONFIG WRT0 = OFF
                      00057     CONFIG WRT1 = OFF
                      00058     CONFIG WRT2 = OFF
                      00059     CONFIG WRT3 = OFF
                      00060     CONFIG WRTC = OFF
                      00061     CONFIG WRTB = OFF
                      00062     CONFIG WRTD = OFF
                      00063     CONFIG EBTR0 = OFF
                      00064     CONFIG EBTR1 = OFF
                      00065     CONFIG EBTR2 = OFF
                      00066     CONFIG EBTR3 = OFF
                      00067     CONFIG EBTRB = OFF
                      00068 
                      00069 
                      00070 
                      00071 ; Define statements.
                      00072 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00299   DEFINE  ADC_CHANNELS  1
                      00073 #define         ADC_CHANNELS              1
                      00074 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   define OSC 16
                      00075 #define         OSC              16
                      00076 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00046   DEFINE LCD_DREG PORTA 
                      00077 #define         LCD_DREG                 PORTA 
                      00078 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00047   DEFINE LCD_DBIT 0
                      00079 #define         LCD_DBIT                 0
                      00080 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00048   DEFINE LCD_RSREG PORTA
                      00081 #define         LCD_RSREG                PORTA
                      00082 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00049   DEFINE LCD_RSBIT 5 
                      00083 #define         LCD_RSBIT                5 
                      00084 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00050   DEFINE LCD_EREG PORTA
                      00085 #define         LCD_EREG                 PORTA
                      00086 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00051   DEFINE LCD_EBIT 4 
                      00087 #define         LCD_EBIT                 4 
                      00088 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00052   DEFINE LCD_BITS 4 
                      00089 #define         LCD_BITS                 4 
                      00090 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00053   DEFINE LCD_LINE 2
                      00091 #define         LCD_LINE                 2
                      00092 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00054   DEFINE I2C_SCLOUT 1
                      00093 #define         I2C_SCLOUT               1
                      00094 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00055   DEFINE I2C_SLOW 1
                      00095 #define         I2C_SLOW                 1
                      00096 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00056   define NO_CLRWDT 1
                      00097 #define         NO_CLRWDT                1
                      00098 
  00000000            00099 RAM_START                       EQU     00000h
  000005FF            00100 RAM_END                         EQU     005FFh
  00000006            00101 RAM_BANKS                       EQU     00006h
  00000060            00102 BANK0_START                     EQU     00060h
  000000FF            00103 BANK0_END                       EQU     000FFh
  00000100            00104 BANK1_START                     EQU     00100h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000001FF            00105 BANK1_END                       EQU     001FFh
  00000200            00106 BANK2_START                     EQU     00200h
  000002FF            00107 BANK2_END                       EQU     002FFh
  00000300            00108 BANK3_START                     EQU     00300h
  000003FF            00109 BANK3_END                       EQU     003FFh
  00000400            00110 BANK4_START                     EQU     00400h
  000004FF            00111 BANK4_END                       EQU     004FFh
  00000500            00112 BANK5_START                     EQU     00500h
  000005FF            00113 BANK5_END                       EQU     005FFh
  00000000            00114 BANKA_START                     EQU     00000h
  0000005F            00115 BANKA_END                       EQU     0005Fh
                      00116 
                      00117 ; C:\PBP3\PBPPI18L.RAM          00028   A00000  FLAGS   VAR     BYTE BANKA SYSTEM       ' Static flags
  00000000            00118 FLAGS                           EQU     RAM_START + 000h
                      00119 ; C:\PBP3\PBPPI18L.RAM          00027   A00001  GOP     VAR     BYTE BANKA SYSTEM       ' Gen Op Paramet
                            er
  00000001            00120 GOP                             EQU     RAM_START + 001h
                      00121 ; C:\PBP3\PBPPI18L.RAM          00016   A00002  R4      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000002            00122 R4                              EQU     RAM_START + 002h
                      00123 ; C:\PBP3\PBPPI18L.RAM          00017   A00004  R5      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000004            00124 R5                              EQU     RAM_START + 004h
                      00125 ; C:\PBP3\PBPPI18L.RAM          00018   A00006  R6      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000006            00126 R6                              EQU     RAM_START + 006h
                      00127 ; C:\PBP3\PBPPI18L.RAM          00019   A00008  R7      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000008            00128 R7                              EQU     RAM_START + 008h
                      00129 ; C:\PBP3\PBPPI18L.RAM          00020   A0000A  R8      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  0000000A            00130 R8                              EQU     RAM_START + 00Ah
                      00131 ; C:\PBP3\PBPPI18L.RAM          00023   A0000C  RM1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Mask
  0000000C            00132 RM1                             EQU     RAM_START + 00Ch
                      00133 ; C:\PBP3\PBPPI18L.RAM          00026   A0000D  RM2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Mask
  0000000D            00134 RM2                             EQU     RAM_START + 00Dh
                      00135 ; C:\PBP3\PBPPI18L.RAM          00021   A0000E  RR1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Register
  0000000E            00136 RR1                             EQU     RAM_START + 00Eh
                      00137 ; C:\PBP3\PBPPI18L.RAM          00024   A0000F  RR2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Register
  0000000F            00138 RR2                             EQU     RAM_START + 00Fh
                      00139 ; C:\PBP3\PBPPI18L.RAM          00022   A00010  RS1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Bank
  00000010            00140 RS1                             EQU     RAM_START + 010h
                      00141 ; C:\PBP3\PBPPI18L.RAM          00025   A00011  RS2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Bank
  00000011            00142 RS2                             EQU     RAM_START + 011h
                      00143 ; C:\PBP3\PBPPI18L.RAM          00012   A00012  R0      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  00000012            00144 R0                              EQU     RAM_START + 012h
                      00145 ; C:\PBP3\PBPPI18L.RAM          00013   A00016  R1      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  00000016            00146 R1                              EQU     RAM_START + 016h
                      00147 ; C:\PBP3\PBPPI18L.RAM          00014   A0001A  R2      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  0000001A            00148 R2                              EQU     RAM_START + 01Ah
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00149 ; C:\PBP3\PBPPI18L.RAM          00015   A0001E  R3      VAR     LONG BANKA SYSTEM       ' System Registe
                            r
  0000001E            00150 R3                              EQU     RAM_START + 01Eh
                      00151 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   A00022  define OSC 16
  00000022            00152 T1                              EQU     RAM_START + 022h
                      00153 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   A00026  define OSC 16
  00000026            00154 T2                              EQU     RAM_START + 026h
                      00155 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   A0002A  define OSC 16
  0000002A            00156 PB01                            EQU     RAM_START + 02Ah
                      00157 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   A0002B  define OSC 16
  0000002B            00158 PB02                            EQU     RAM_START + 02Bh
                      00159 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   A0002C  define OSC 16
  0000002C            00160 PB03                            EQU     RAM_START + 02Ch
                      00161 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00120   A0002D  DutyCycleL1  VAR WORD
  0000002D            00162 _DutyCycleL1                    EQU     RAM_START + 02Dh
                      00163 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00121   A0002F  DutyCycleL2 VAR WORD
  0000002F            00164 _DutyCycleL2                    EQU     RAM_START + 02Fh
                      00165 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00122   A00031  DutyCycleL3 VAR WORD
  00000031            00166 _DutyCycleL3                    EQU     RAM_START + 031h
                      00167 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00123   A00033  DutyCycleL4 VAR WORD
  00000033            00168 _DutyCycleL4                    EQU     RAM_START + 033h
                      00169 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00119   A00035  Frequency       VAR WORD
  00000035            00170 _Frequency                      EQU     RAM_START + 035h
                      00171 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00047   A00037  HP_Duty      VAR WORD
  00000037            00172 _HP_Duty                        EQU     RAM_START + 037h
                      00173 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00046   A00039  HP_Freq      VAR Word
  00000039            00174 _HP_Freq                        EQU     RAM_START + 039h
                      00175 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00048   A0003B  HP_Temp      VAR WORD
  0000003B            00176 _HP_Temp                        EQU     RAM_START + 03Bh
                      00177 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00124   A0003D  Merenje         var word
  0000003D            00178 _Merenje                        EQU     RAM_START + 03Dh
                      00179 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00118   A0003F  Potenciometar   VAR word
  0000003F            00180 _Potenciometar                  EQU     RAM_START + 03Fh
                      00181 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00113   A00041  Days            var byte
  00000041            00182 _Days                           EQU     RAM_START + 041h
                      00183 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00145   A00042  DesnoVar                var byte
  00000042            00184 _DesnoVar                       EQU     RAM_START + 042h
                      00185 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00147   A00043  DoleVar                 var byte
  00000043            00186 _DoleVar                        EQU     RAM_START + 043h
                      00187 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00146   A00044  GoreVar                 var byte
  00000044            00188 _GoreVar                        EQU     RAM_START + 044h
                      00189 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00112   A00045  Hours           var byte
  00000045            00190 _Hours                          EQU     RAM_START + 045h
                      00191 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00045   A00046  HP_Channel   VAR BYTE
  00000046            00192 _HP_Channel                     EQU     RAM_START + 046h
                      00193 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00039   A00047  HP_Flags  VAR BYTE
  00000047            00194 _HP_Flags                       EQU     RAM_START + 047h
                      00195 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00049   A00048  HP_PR2       VAR BYTE
  00000048            00196 _HP_PR2                         EQU     RAM_START + 048h
                      00197 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00144   A00049  LevoVar                 var byte
  00000049            00198 _LevoVar                        EQU     RAM_START + 049h
                      00199 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00143   A0004A  LMcnt                   var byte 
  0000004A            00200 _LMcnt                          EQU     RAM_START + 04Ah
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00111   A0004B  Minutes         var byte
  0000004B            00202 _Minutes                        EQU     RAM_START + 04Bh
                      00203 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00115   A0004C  Month           var byte
  0000004C            00204 _Month                          EQU     RAM_START + 04Ch
                      00205 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00149   A0004D  OdrzVar                 var byte
  0000004D            00206 _OdrzVar                        EQU     RAM_START + 04Dh
                      00207 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00148   A0004E  OkVar                   var byte
  0000004E            00208 _OkVar                          EQU     RAM_START + 04Eh
                      00209 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00110   A0004F  Seconds         var byte
  0000004F            00210 _Seconds                        EQU     RAM_START + 04Fh
                      00211 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00116   A00050  Temp            var byte
  00000050            00212 _Temp                           EQU     RAM_START + 050h
                      00213 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00117   A00051  Temperatura     var byte  
  00000051            00214 _Temperatura                    EQU     RAM_START + 051h
                      00215 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00109   A00052  X               VAR BYTE
  00000052            00216 _X                              EQU     RAM_START + 052h
                      00217 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00114   A00053  Years           var byte
  00000053            00218 _Years                          EQU     RAM_START + 053h
                      00219 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00300   PORTL   VAR     PORTB
  00000F81            00220 _PORTL                          EQU      PORTB
                      00221 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00301   PORTH   VAR     PORTC
  00000F82            00222 _PORTH                          EQU      PORTC
                      00223 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00302   TRISL   VAR     TRISB
  00000F93            00224 _TRISL                          EQU      TRISB
                      00225 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00303   TRISH   VAR     TRISC
  00000F94            00226 _TRISH                          EQU      TRISC
  0000003B            00227 _HP_Temp??LOWBYTE               EQU     _HP_Temp
  0000003C            00228 _HP_Temp??HIGHBYTE              EQU     _HP_Temp + 001h
                      00229 #define _PS0                    _HP_Flags??0
                      00230 #define _PS1                    _HP_Flags??1
                      00231 #define _PSchanged              _HP_Flags??2
                      00232 #define _PR2changed             _HP_Flags??3
                      00233 #define _TMR2IF                 _PIR1??1
                      00234 #define _TMR2ON                 _T2CON??2
                      00235 #define _T2CKPS1                _T2CON??1
                      00236 #define _T2CKPS0                _T2CON??0
                      00237 #define _BCKLIGHT               _PORTC??3
                      00238 #define _SDA                    _PORTC??0
                      00239 #define _SCL                    _PORTC??1
                      00240 #define _RELEJ1                 _PORTC??4
                      00241 #define _RELEJ2                 _PORTC??5
                      00242 #define _TASTLEVO               _PORTB??1
                      00243 #define _TASTOK                 _PORTB??2
                      00244 #define _TASTDESNO              _PORTB??4
                      00245 #define _TASTGORE               _PORTB??6
                      00246 #define _TASTDOLE               _PORTB??5
                      00247 #define _TASTODRZAVANJE         _PORTB??7
                      00248 #define _gore                    PB01, 002h
                      00249 #define _dole                    PB01, 001h
                      00250 #define _levo                    PB01, 003h
                      00251 #define _desno                   PB01, 000h
                      00252 #define _ok                      PB02, 003h
                      00253 #define _odrzavanje              PB02, 002h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00254 #define _NovoStanjeDesno         PB01, 004h
                      00255 #define _NovoStanjeLevo          PB01, 007h
                      00256 #define _NovoStanjeGore          PB01, 006h
                      00257 #define _NovoStanjeDole          PB01, 005h
                      00258 #define _NovoStanjeOk            PB02, 001h
                      00259 #define _NovoStanjeOdrzavanje    PB02, 000h
                      00260 #define _StaroStanjeDesno        PB02, 004h
                      00261 #define _StaroStanjeLevo         PB02, 007h
                      00262 #define _StaroStanjeGore         PB02, 006h
                      00263 #define _StaroStanjeDole         PB02, 005h
                      00264 #define _StaroStanjeOk           PB03, 001h
                      00265 #define _StaroStanjeOdrzavanje   PB03, 000h
                      00266 #define _HP_Flags??0            _HP_Flags, 000h
                      00267 #define _HP_Flags??1            _HP_Flags, 001h
                      00268 #define _HP_Flags??2            _HP_Flags, 002h
                      00269 #define _HP_Flags??3            _HP_Flags, 003h
                      00270 #define _PIR1??1                 PIR1, 001h
                      00271 #define _T2CON??2                T2CON, 002h
                      00272 #define _T2CON??1                T2CON, 001h
                      00273 #define _T2CON??0                T2CON, 000h
                      00274 #define _INTCON2??7              INTCON2, 007h
                      00275 #define _PORTC??6                PORTC, 006h
                      00276 #define _PORTB??3                PORTB, 003h
                      00277 #define _PORTB??0                PORTB, 000h
                      00278 #define _PORTC??2                PORTC, 002h
                      00279 #define _PORTC??3                PORTC, 003h
                      00280 #define _PORTC??0                PORTC, 000h
                      00281 #define _PORTC??1                PORTC, 001h
                      00282 #define _PORTC??4                PORTC, 004h
                      00283 #define _PORTC??5                PORTC, 005h
                      00284 #define _PORTB??1                PORTB, 001h
                      00285 #define _PORTB??2                PORTB, 002h
                      00286 #define _PORTB??4                PORTB, 004h
                      00287 #define _PORTB??6                PORTB, 006h
                      00288 #define _PORTB??5                PORTB, 005h
                      00289 #define _PORTB??7                PORTB, 007h
                      00290 #define _Minutes??7             _Minutes, 007h
                      00291 #define _Hours??7               _Hours, 007h
                      00292 #define _Hours??6               _Hours, 006h
                      00293 #define _Days??7                _Days, 007h
                      00294 #define _Days??6                _Days, 006h
                      00295 #define _Month??7               _Month, 007h
                      00296 #define _Month??6               _Month, 006h
                      00297 #define _Month??5               _Month, 005h
                      00298 
                      00299 ; Constants.
  000000A2            00300 _RTC                            EQU     000A2h
  000000A0            00301 _EPROM                          EQU     000A0h
  00000090            00302 _LM75                           EQU     00090h
  0000007E            00303 _Strelica                       EQU     0007Eh
                      00304 
                      00305 ; EEPROM data.
                      00306 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00307 
                      00308         INCLUDE "TESTPROGRAM.MAC"
                      00001 
                      00584         LIST
                      00309         INCLUDE "C:\PBP3\PBPPI18L.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPI18L.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer, Darrel Taylor      *
                      00005 ;*              Charles Leo
                      00006 ;*  Notice    : Copyright (c) 2011 microEngineering Labs, Inc.    *
                      00007 ;*              All Rights Reserved                               *
                      00008 ;*  Date      : 06/23/2011                                        *
                      00009 ;*  Version   : 3.0.0                                             *
                      00010 ;*  Notes     : Longs                                             *
                      00011 ;******************************************************************
                      00087   LIST
                      00088 ; Oscillator is 16MHz
                      01493   LIST
000000                01494     ORG RESET_ORG               ; Reset vector at 0
                      01498   LIST
000000 6A00           01499         clrf    FLAGS           ; Clear all flags on reset
                      01503   LIST
000002 EFA8 F002      01504         goto    INIT            ; Finish initialization
                      03232   LIST
000006 8A00           03233 I2CREADS bsf    I2CSTOPFLAG     ; Indicate Stop after this byte
000008 AA00           03234         btfss   I2CSTOPFLAG     ; Skip next always
00000A 9A00           03235 I2CREAD bcf     I2CSTOPFLAG     ; Don't Stop
00000C B600           03236         btfsc   I2CREADFLAG     ; Already reading?
00000E D003           03237         bra     i2creadip       ; Yes
000010 8600           03238         bsf     I2CREADFLAG     ; Indicate read
000012 D844           03239         rcall   i2cstart        ; Send Start condition and command
000014 E227           03240         bc      i2cstop         ; No acknowledge
                      03241 
000016 0E08           03242 i2creadip movlw 8               ; 8 bits to a byte
000018 6E17           03243         movwf   R1 + 1          ; Bit counter
00001A D854           03244 i2creadloop rcall i2cgetbit     ; Get a bit
00001C 3616           03245         rlcf    R1, F           ; Put bit away
00001E 2E17           03246         decfsz  R1 + 1, F       ; Do next, if any
000020 D7FC           03247         bra     i2creadloop
000022 AA00           03248         btfss   I2CSTOPFLAG     ; Send stop?
000024 D82E           03249         rcall   i2cdal          ; No, send acknowledge
000026 D85C           03250         rcall   i2cckh          ; Toggle clock in any case
000028 D855           03251         rcall   i2cckl
00002A BA00           03252         btfsc   I2CSTOPFLAG     ; Send stop?
00002C D81B           03253         rcall   i2cstop         ; Yes, send Stop condition
00002E D821           03254         rcall   i2cdah          ; Make sure data ends up as input
000030 5016           03255         movf    R1, W           ; Get result to W
000032 90D8           03256         bcf     STATUS, C       ; Clear carry for OK return
000034 EFA5 F002      03257 i2creaddone goto DUNN
                      03323   LIST
000038 8A00           03324 I2CWRITES bsf   I2CSTOPFLAG     ; Indicate Stop after this byte
00003A AA00           03325         btfss   I2CSTOPFLAG     ; Skip next always
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00003C 9A00           03326 I2CWRITE bcf    I2CSTOPFLAG     ; Don't Stop
00003E B400           03327         btfsc   I2CFIRSTFLAG    ; Check for first I2C char (command)
000040 D005           03328         bra     i2cwrite2       ; No
000042 0BFE           03329         andlw   0feh            ; Make sure r/w bit clear
000044 6E01           03330         movwf   GOP             ; Save command
000046 8400           03331         bsf     I2CFIRSTFLAG    ; Indicate not first anymore
000048 90D8           03332         bcf     STATUS, C       ; Clear carry for OK return
00004A D00A           03333         bra     i2cwritedone    ; That's it for now
                      03334 
00004C B800           03335 i2cwrite2 btfsc I2CWRITEFLAG    ; Already writing?
00004E D005           03336         bra     i2cwriteip      ; Yes
000050 6E1E           03337         movwf   R3              ; Save char
000052 8800           03338         bsf     I2CWRITEFLAG    ; Indicate write
000054 D823           03339         rcall   i2cstart        ; Send Start condition and command
000056 E206           03340         bc      i2cstop         ; No acknowledge
000058 501E           03341         movf    R3, W           ; Get char back
00005A D827           03342 i2cwriteip rcall i2cwritec      ; Write character
00005C E203           03343         bc      i2cstop         ; No acknowledge
00005E AA00           03344         btfss   I2CSTOPFLAG     ; Send stop bit?
000060 EFA5 F002      03345 i2cwritedone goto DUNN          ; No
                      03346 
000064 D80E           03347 i2cstop rcall   i2cdal          ; 12 Start data low
000066 D83C           03348         rcall   i2cckh          ; 15 Set clock high (input)
000068 9400           03349         bcf     I2CFIRSTFLAG    ; 1 Reset first char flag
00006A 9800           03350         bcf     I2CWRITEFLAG    ; 1 No longer writing
00006C 9600           03351         bcf     I2CREADFLAG     ; 1 No longer reading either
00006E D801           03352         rcall   i2cdah          ; Set data high (input)
000070 D7F7           03353         bra     i2cwritedone
                      03354 
000072 C010 FFEA      03355 i2cdah  movff   RS1, FSR0H      ; 2 (11) Get pointer to data pin
000076 3C0E           03356         incfsz  RR1, W          ; 1 Point to TRIS (never skip, doesn't change flags)
000078 6EE9           03357         movwf   FSR0L           ; 1
00007A 88E9           03358         bsf     FSR0L, 4        ; 1
00007C 500C           03359         movf    RM1, W          ; 1
00007E 12EC           03360 i2chigh iorwf   PREINC0, F      ; 1 Set high (input)
000080 D008           03361         bra     i2chl           ; 2
                      03362 
000082 C010 FFEA      03363 i2cdal  movff   RS1, FSR0H      ; 2 (10) Get pointer to data pin
000086 C00E FFE9      03364         movff   RR1, FSR0L      ; 2
00008A 1C0C           03365         comf    RM1, W          ; 1
00008C 16EE           03366 i2clow  andwf   POSTINC0, F     ; 1 Set low, start pointing to TRIS
00008E 88E9           03367         bsf     FSR0L, 4        ; 1
000090 16EC           03368         andwf   PREINC0, F      ; 1 Set to output
000092                03369 i2chl
                      03370       ifndef I2C_SLOW
                      03371         return                  ; 2
                      03372       else
                      03373           if (OSC > 12)
000092 0E04           03374         movlw   (OSC) / 4       ; 1 Pause ~5us to slow to 100kHz without wrecking C
000094 6E12           03375         movwf   R0              ; 1
000096 2E12           03376 i2cslowloop decfsz R0, F        ; 1
000098 D7FE           03377         bra     i2cslowloop     ; 2
00009A 0012           03378         return                  ; 2
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03379           else
                      03380         goto    DUNN            ; 6
                      03381           endif
                      03382       endif
                      03383 
00009C DFEA           03384 i2cstart rcall  i2cdah          ; 13 Make sure bus is idle
00009E D820           03385         rcall   i2cckh          ; 15
0000A0 DFF0           03386         rcall   i2cdal          ; 12 Send Start condition
0000A2 D818           03387         rcall   i2cckl          ; 14
0000A4 5001           03388         movf    GOP, W          ; 1 Get command
0000A6 B600           03389         btfsc   I2CREADFLAG     ; 1 / 2 Read?
0000A8 0901           03390         iorlw   1               ; 1 / 0 Yes, put in read bit
                      03391 
0000AA 6E16           03392 i2cwritec movwf R1              ; 1 Save data
0000AC 0E08           03393         movlw   8               ; 1 8 bits to send
0000AE 6E17           03394         movwf   R1 + 1          ; 1 Bit counter
0000B0 3616           03395 i2cwriteloop rlcf R1, F         ; 1 Get a bit to send
0000B2 B0D8           03396         btfsc   STATUS, C       ; 1 / 2 Skip if no bit
0000B4 DFDE           03397         rcall   i2cdah          ; 13 / 0 Set bit high (input)
0000B6 A0D8           03398         btfss   STATUS, C       ; 1 / 2 Skip if bit
0000B8 DFE4           03399         rcall   i2cdal          ; 12 / 0 Set bit low
0000BA D812           03400         rcall   i2cckh          ; 15 Set clock high (input)
0000BC D80B           03401         rcall   i2cckl          ; 14 Set clock low
0000BE 2E17           03402         decfsz  R1 + 1, F       ; 1 / 2 Do next bit, if any
0000C0 D7F7           03403         bra     i2cwriteloop    ; 2
0000C2 DFD7           03404         rcall   i2cdah          ; 13 Make sure data high (input)
                      03405 ;       bra     i2cgetbit       ; Get acknowledge (fall through)
                      03406 
0000C4 D80D           03407 i2cgetbit rcall i2cckh          ; 15 (34) Set clock high
0000C6 C010 FFEA      03408         movff   RS1, FSR0H      ; 2 Point to data pin
0000CA C00E FFE9      03409         movff   RR1, FSR0L      ; 2
0000CE 500C           03410         movf    RM1, W          ; 1
0000D0 14EF           03411         andwf   INDF0, W        ; 1 Isolate pin
0000D2 0FFF           03412         addlw   -1              ; 1 Move bit to carry
                      03413 ;       bra     i2cckl          ; Set clock low (fall through)
                      03414 
0000D4 C011 FFEA      03415 i2cckl  movff   RS2, FSR0H      ; 2 (12) Get pointer to clock pin
0000D8 C00F FFE9      03416         movff   RR2, FSR0L      ; 2
0000DC 1C0D           03417         comf    RM2, W          ; 1
0000DE D7D6           03418         bra     i2clow          ; 7 Finish it up
                      03419 
                      03420       ifndef I2C_SCLOUT
                      03421 i2cckh  movff   RS2, FSR0H      ; 2 (13) Get pointer to clock pin
                      03422 i2chold incfsz  RR2, W          ; 1 Point to TRIS (never skip)
                      03423         movwf   FSR0L           ; 1
                      03424         bsf     FSR0L, 4        ; 1
                      03425         movf    RM2, W          ; 1
                      03426           ifndef I2C_HOLD
                      03427         bra     i2chigh         ; 7 Finish it up
                      03428           else
                      03429         iorwf   PREINC0, F      ; 1 Set high (input)
                      03430         movff   RR2, FSR0L      ; 2 Point back to port
                      03431         andwf   INDF0, W        ; 1 Isolate pin
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03432         bz      i2chold         ; 1 / 2 Check for still low
                      03433         bra     i2chl           ; 4
                      03434           endif
                      03435       else
0000E0 C011 FFEA      03436 i2cckh  movff   RS2, FSR0H      ; 2 (13) Get pointer to clock pin
0000E4 C00F FFE9      03437         movff   RR2, FSR0L      ; 2
0000E8 500D           03438         movf    RM2, W          ; 1
0000EA 12EE           03439         iorwf   POSTINC0, F     ; 1 Set high, start pointing to TRIS
0000EC 88E9           03440         bsf     FSR0L, 4        ; 1
0000EE 1C0D           03441         comf    RM2, W          ; 1 Get inverted mask
0000F0 16EC           03442         andwf   PREINC0, F      ; 1 Set to output
0000F2 D7CF           03443         bra     i2chl           ; 4
                      03444       endif
                      03560   LIST
0000F4 6A1B           03561 LCDOUTDECB clrf R2 + 1          ; Zero high value
                      03567   LIST
0000F6 6E1A           03568 LCDOUTDEC movwf R2              ; Save low value
0000F8 8E01           03569         bsf     GOP, 7          ; Set blanking on
0000FA 0E27           03570         movlw   high 10000      ; Find 10,000s
0000FC 6E17           03571         movwf   R1 + 1
0000FE 0E10           03572         movlw   low 10000
000100 D80C           03573         rcall   lcdoutdig       ; Do the work
000102 0E03           03574         movlw   high 1000       ; Find 1,000s
000104 6E17           03575         movwf   R1 + 1
000106 0EE8           03576         movlw   low 1000
000108 D808           03577         rcall   lcdoutdig       ; Do the work
00010A 6A17           03578         clrf    R1 + 1          ; Find 100s
00010C 0E64           03579         movlw   100
00010E D805           03580         rcall   lcdoutdig       ; Do the work
000110 6A17           03581         clrf    R1 + 1          ; Find 10s
000112 0E0A           03582         movlw   10
000114 D802           03583         rcall   lcdoutdig       ; Do the work
000116 501A           03584         movf    R2, W           ; Get the 1s
000118 D00F           03585         bra     lcdouta         ; Send the 1s
                      03586 
00011A 6E16           03587 lcdoutdig movwf R1              ; Save last piece
00011C 501B           03588         movf    R2 + 1, W       ; Move remainder to dividend
00011E 6E13           03589         movwf   R0 + 1
000120 501A           03590         movf    R2, W
000122 6E12           03591         movwf   R0
000124 6A14           03592         clrf    R0 + 2          ; Zero top locations
000126 6A15           03593         clrf    R0 + 3
000128 6A18           03594         clrf    R1 + 2
00012A 6A19           03595         clrf    R1 + 3
00012C ECD9 F001      03596         call    DIV             ; Do the math
000130 66E8           03597         tstfsz  WREG            ; If zero, goto blank check
000132 9E01           03598         bcf     GOP, 7          ; Not zero so clear blank
000134 BE01           03599         btfsc   GOP, 7          ; If blanking on, don't send
000136 0012           03600         return
000138 0F30           03601 lcdouta addlw   '0'             ; Add ASCII offset
                      03604   LIST
00013A D001           03605         bra     LCDOUT
                      03622   LIST
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013C 50E9           03623 LCDOUTJ movf    FSR0L, W        ; Jumpman entry
                      03629   LIST
00013E 6E1F           03630 LCDOUT  movwf   R3 + 1          ; Save char
                      03631 
000140 9880           03632         bcf     LCD_EREG, LCD_EBIT      ; Set E low
000142 9A80           03633         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
000144 9A80           03634         bcf     LCD_RWREG, LCD_RWBIT    ; Set RW low (write)
                      03635 
000146 9892           03636         bcf     (LCD_EREG) + 12h, LCD_EBIT      ; Set E to output
000148 9A92           03637         bcf     (LCD_RSREG) + 12h, LCD_RSBIT    ; Set RS to output
00014A 9A92           03638         bcf     (LCD_RWREG) + 12h, LCD_RWBIT    ; Set RW to output
                      03639     if ((LCD_BITS) == 8)
                      03640         clrf    (LCD_DREG) + 12h        ; Set port to all output
                      03641     else
                      03642       if ((LCD_DBIT) == 0)
00014C 0EF0           03643         movlw   0f0h
                      03644       else
                      03645         movlw   0fh
                      03646       endif
00014E 1692           03647         andwf   (LCD_DREG) + 12h, F     ; Set proper half of port to output
000150 501F           03648         movf    R3 + 1, W       ; Get back char
                      03649     endif
                      03650 
000152 B200           03651         btfsc   LCDINITFLAG     ; Has lcd been inititalized?
000154 D021           03652         bra     lcdout1         ; Yes
                      03653 
000156 0E3A           03654         movlw   high 15100      ; Wait at least 15ms
000158 6E13           03655         movwf   R0 + 1
00015A 0EFC           03656         movlw   low 15100
00015C EC7F F001      03657         call    PAUSEUS
                      03658 
000160 0E33           03659         movlw   33h             ; Init lcd
000162 6E1E           03660         movwf   R3              ; Save char
000164 D830           03661         rcall   lcdloop         ; Send init
                      03662 
000166 0E10           03663         movlw   high 4200       ; Wait at least 4.1ms
000168 6E13           03664         movwf   R0 + 1
00016A 0E68           03665         movlw   low 4200
00016C EC7F F001      03666         call    PAUSEUS
                      03667 
000170 D82A           03668         rcall   lcdloop         ; Send init (33) again
                      03669 
000172 0E64           03670         movlw   100             ; Wait at least 100us
000174 EC7E F001      03671         call    PAUSEUSB
                      03672 
000178 D826           03673         rcall   lcdloop         ; Send init (33) more time
                      03674 
                      03675     if ((LCD_BITS) == 8)
                      03676       if ((LCD_LINES) == 1)
                      03677         movlw   30h             ; 8-bit mode, 1 line, 5x7 font
                      03678       else
                      03679         movlw   38h             ; 8-bit mode, 2+ lines, 5x7 font
                      03680       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03681     else
00017A 0E22           03682         movlw   22h             ; Send init to 4-bit mode
00017C 6E1E           03683         movwf   R3              ; Save character
00017E D823           03684         rcall   lcdloop         ; Set interface to 4-bit mode
                      03685       if ((LCD_LINES) == 1)
                      03686         movlw   20h             ; 4-bit mode, 1 line, 5x7 font
                      03687       else
000180 0E28           03688         movlw   28h             ; 4-bit mode, 2+ lines, 5x7 font
                      03689       endif
                      03690     endif
000182 D809           03691         rcall   lcdoutcom       ; Send function set
                      03692 
000184 0E0C           03693         movlw   0ch             ; Display on, no cursor, no blink
000186 D807           03694         rcall   lcdoutcom
                      03695 
000188 0E01           03696         movlw   01h             ; Display clear
00018A D805           03697         rcall   lcdoutcom
                      03698 
00018C 0E06           03699         movlw   06h             ; Lcd entry mode set, increment, no shift
00018E D803           03700         rcall   lcdoutcom
                      03701 
000190 8200           03702         bsf     LCDINITFLAG     ; Set to initialized
                      03703 
000192 501F           03704         movf    R3 + 1, W       ; Get saved char back (again)
000194 D001           03705         bra     lcdout1
                      03706 
000196 8000           03707 lcdoutcom bsf   LCDCDFLAG       ; Set for command
                      03708 
000198 6E1E           03709 lcdout1 movwf   R3              ; Save char
00019A A000           03710         btfss   LCDCDFLAG       ; Command this time?
00019C D00B           03711         bra     lcdchkcd        ; No
                      03712 
00019E 9A80           03713         bcf     LCD_RSREG, LCD_RSBIT    ; Set command register select
0001A0 0803           03714         sublw   3               ; Is it a slow command (clear screen or home)?
0001A2 E30F           03715         bnc     lcdsend         ; Short delay
                      03716 
0001A4 D80E           03717         rcall   lcdsend         ; Long delay (includes short delay)
0001A6 0E07           03718         movlw   high LCD_COMMANDUS      ; Wait for command to complete
0001A8 6E13           03719         movwf   R0 + 1
0001AA 0ED0           03720         movlw   low LCD_COMMANDUS
0001AC EC7F F001      03721         call    PAUSEUS
0001B0 80D8           03722         bsf     STATUS, C       ; Set no timeout for Serout2mod
0001B2 0012           03723         return
                      03724 
0001B4 8000           03725 lcdchkcd bsf    LCDCDFLAG       ; Indicate first nibble (or command next time)
0001B6 08FE           03726         sublw   0feh            ; Command next time? (char still in W)
0001B8 B4D8           03727         btfsc   STATUS, Z
0001BA EFA5 F002      03728         goto    DUNN            ; Yes - nothing to do this time (C set for no timeout for Serout2mod)
                      03729 
0001BE 8A80           03730         bsf     LCD_RSREG, LCD_RSBIT    ; Set data register select
0001C0 D000           03731         bra     $ + 2  ;
                      03732 
0001C2                03733 lcdsend
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03734     if ((LCD_BITS) == 8)
                      03735 lcdloop bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03736         movf    R3, W           ; Get char back
                      03737         movwf   LCD_DREG        ; Write char to the port
                      03738       if (OSC > 16)
                      03739         nop                     ; Minimum 1us enable time
                      03740       endif
                      03741       if (OSC > 20)
                      03742         nop
                      03743       endif
                      03744       if (OSC > 24)
                      03745         bra     $ + 2
                      03746       endif
                      03747       if (OSC > 32)
                      03748         bra     $ + 2
                      03749       endif
                      03750       if (OSC > 40)
                      03751         bra     $ + 2
                      03752       endif
                      03753       if (OSC > 48)
                      03754         bra     $ + 2
                      03755         bra     $ + 2
                      03756       endif
                      03757         bcf     LCDCDFLAG       ; Indicate data next time
                      03758         bcf     LCD_EREG, LCD_EBIT      ; Not enabled
                      03759     else
                      03760 
                      03761       if ((LCD_DBIT) == 0)
0001C2 3A1E           03762         swapf   R3, F           ; Swap top and bottom nibbles
                      03763       endif
                      03764 
0001C4 A000           03765         btfss   LCDCDFLAG       ; First time through only
0001C6 9000           03766 lcdloop bcf     LCDCDFLAG       ; Indicate second nibble (and data next time)
                      03767 
0001C8 8880           03768         bsf     LCD_EREG, LCD_EBIT      ; Enabled
                      03769 
                      03770       if ((LCD_DBIT) == 0)
0001CA 0EF0           03771         movlw   0f0h            ; Clear lcd data port
                      03772       else
                      03773         movlw   0fh             ; Clear lcd data port
                      03774       endif
0001CC 1680           03775         andwf   LCD_DREG, F
                      03776 
0001CE 501E           03777         movf    R3, W           ; Isolate proper nibble of char
                      03778       if ((LCD_DBIT) == 0)
0001D0 0B0F           03779         andlw   0fh
                      03780       else
                      03781         andlw   0f0h
                      03782       endif
0001D2 1280           03783         iorwf   LCD_DREG, F     ; Write char to port
                      03784 
                      03785       if (OSC > 24)
                      03786         bra     $ + 2           ; Minimum 1us enable time
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03787       endif
                      03788       if (OSC > 32)
                      03789         bra     $ + 2
                      03790       endif
                      03791       if (OSC > 40)
                      03792         bra     $ + 2
                      03793       endif
                      03794       if (OSC > 48)
                      03795         bra     $ + 2
                      03796         bra     $ + 2
                      03797       endif
                      03798 
0001D4 9880           03799         bcf     LCD_EREG, LCD_EBIT      ; Not enabled - that's four
0001D6 3A1E           03800         swapf   R3, F           ; Get to other nibble
                      03801 
                      03802       if (OSC > 24)
                      03803         bra     $ + 2           ; Minimum 1us not enabled time
                      03804       endif
                      03805       if (OSC > 32)
                      03806         bra     $ + 2
                      03807       endif
                      03808       if (OSC > 40)
                      03809         bra     $ + 2
                      03810       endif
                      03811       if (OSC > 48)
                      03812         bra     $ + 2
                      03813         bra     $ + 2
                      03814       endif
                      03815 
0001D8 B000           03816         btfsc   LCDCDFLAG       ; Need to send 4 more?
0001DA D7F5           03817         bra     lcdloop         ; Send lower 4 to lcd
                      03818     endif
                      03819 
0001DC 0E32           03820         movlw   LCD_DATAUS      ; Wait for data operation to complete
0001DE EC7E F001      03821         call    PAUSEUSB
0001E2 80D8           03822         bsf     STATUS, C       ; Set no timeout for Serout2mod
0001E4 0012           03823         return
                      05734   LIST
0001E6 9E01           05735 SEROUT2HEX bcf  GOP, 7          ; Blanking off
0001E8 5003           05736         movf    R4 + 1, W       ; If 0 digits called for then blanking on
0001EA B4D8           05737         btfsc   STATUS, Z
0001EC 8E01           05738         bsf     GOP, 7          ; Blanking on
0001EE 0E08           05739         movlw   8               ; 8 nibbles max to do
0001F0 6E02           05740         movwf   R4
0001F2 381D           05741         swapf   R2 + 3, W       ; Get first nibble
0001F4 D80D           05742         rcall   serout2hdig
                      05743       ifdef SEROUT2TO_USED
                      05744         btfss   STATUS, C       ; Timed out?
                      05745         return                  ; Yes
                      05746       endif
0001F6 501D           05747         movf    R2 + 3, W       ; Get second nibble
0001F8 D80B           05748         rcall   serout2hdig
                      05749       ifdef SEROUT2TO_USED
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05750         btfss   STATUS, C       ; Timed out?
                      05751         return                  ; Yes
                      05752       endif
0001FA 381C           05753         swapf   R2 + 2, W       ; Get third nibble
0001FC D809           05754         rcall   serout2hdig
                      05755       ifdef SEROUT2TO_USED
                      05756         btfss   STATUS, C       ; Timed out?
                      05757         return                  ; Yes
                      05758       endif
0001FE 501C           05759         movf    R2 + 2, W       ; Get fourth nibble
000200 D807           05760         rcall   serout2hdig
                      05761       ifdef SEROUT2TO_USED
                      05762         btfss   STATUS, C       ; Timed out?
                      05763         return                  ; Yes
                      05764       endif
000202 381B           05765         swapf   R2 + 1, W       ; Get fifth nibble
000204 D805           05766         rcall   serout2hdig
                      05767       ifdef SEROUT2TO_USED
                      05768         btfss   STATUS, C       ; Timed out?
                      05769         return                  ; Yes
                      05770       endif
000206 501B           05771         movf    R2 + 1, W       ; Get sixth nibble
000208 D803           05772         rcall   serout2hdig
                      05773       ifdef SEROUT2TO_USED
                      05774         btfss   STATUS, C       ; Timed out?
                      05775         return                  ; Yes
                      05776       endif
00020A 381A           05777         swapf   R2, W           ; Get seventh nibble
00020C D801           05778         rcall   serout2hdig
                      05779       ifdef SEROUT2TO_USED
                      05780         btfss   STATUS, C       ; Timed out?
                      05781         return                  ; Yes
                      05782       endif
00020E 501A           05783         movf    R2, W           ; Get final nibble and fall through
                      05784 
000210 0B0F           05785 serout2hdig andlw 0fh           ; Isolate lower nibble
000212 0FF6           05786         addlw   -10             ; Change to 0 - F
000214 B0D8           05787         btfsc   STATUS, C
000216 0F07           05788         addlw   7               ; Bump to A - F
000218 0F0A           05789         addlw   10
00021A D04F           05790         bra     SEROUT2SEND     ; Send nibble
                      05841   LIST
00021C 9E01           05842 SEROUT2DEC bcf  GOP, 7          ; Blanking off
00021E 5003           05843         movf    R4 + 1, W       ; If 0 digits called for then blanking on
000220 B4D8           05844         btfsc   STATUS, Z
000222 8E01           05845         bsf     GOP, 7          ; Yes, blanking on
000224 0E0A           05846         movlw   10              ; 10 digits max to do
000226 6E02           05847         movwf   R4
000228 0E3B           05848         movlw   1000000000 >> 24        ; Find 1,000,000,000s
00022A 6E19           05849         movwf   R1 + 3
00022C 0E9A           05850         movlw   upper 1000000000
00022E 6E18           05851         movwf   R1 + 2
000230 0ECA           05852         movlw   high 1000000000
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000232 6E17           05853         movwf   R1 + 1
000234 0E00           05854         movlw   low 1000000000
000236 D835           05855         rcall   serout2ddig     ; Do the work
                      05856       ifdef SEROUT2TO_USED
                      05857         btfss   STATUS, C       ; Timed out?
                      05858         return                  ; Yes
                      05859       endif
000238 0E05           05860         movlw   100000000 >> 24 ; Find 100,000,000s
00023A 6E19           05861         movwf   R1 + 3
00023C 0EF5           05862         movlw   upper 100000000
00023E 6E18           05863         movwf   R1 + 2
000240 0EE1           05864         movlw   high 100000000
000242 6E17           05865         movwf   R1 + 1
000244 0E00           05866         movlw   low 100000000
000246 D82D           05867         rcall   serout2ddig     ; Do the work
                      05868       ifdef SEROUT2TO_USED
                      05869         btfss   STATUS, C       ; Timed out?
                      05870         return                  ; Yes
                      05871       endif
000248 6A19           05872         clrf    R1 + 3
00024A 0E98           05873         movlw   upper 10000000  ; Find 10,000,000s
00024C 6E18           05874         movwf   R1 + 2
00024E 0E96           05875         movlw   high 10000000
000250 6E17           05876         movwf   R1 + 1
000252 0E80           05877         movlw   low 10000000
000254 D826           05878         rcall   serout2ddig     ; Do the work
                      05879       ifdef SEROUT2TO_USED
                      05880         btfss   STATUS, C       ; Timed out?
                      05881         return                  ; Yes
                      05882       endif
000256 6A19           05883         clrf    R1 + 3
000258 0E0F           05884         movlw   upper 1000000   ; Find 1,000,000s
00025A 6E18           05885         movwf   R1 + 2
00025C 0E42           05886         movlw   high 1000000
00025E 6E17           05887         movwf   R1 + 1
000260 0E40           05888         movlw   low 1000000
000262 D81F           05889         rcall   serout2ddig     ; Do the work
                      05890       ifdef SEROUT2TO_USED
                      05891         btfss   STATUS, C       ; Timed out?
                      05892         return          ; Yes
                      05893       endif
000264 6A19           05894         clrf    R1 + 3
000266 0E01           05895         movlw   upper 100000    ; Find 100,000s
000268 6E18           05896         movwf   R1 + 2
00026A 0E86           05897         movlw   high 100000
00026C 6E17           05898         movwf   R1 + 1
00026E 0EA0           05899         movlw   low 100000
000270 D818           05900         rcall   serout2ddig     ; Do the work
                      05901       ifdef SEROUT2TO_USED
                      05902         btfss   STATUS, C       ; Timed out?
                      05903         return          ; Yes
                      05904       endif
000272 6A19           05905         clrf    R1 + 3
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000274 6A18           05906         clrf    R1 + 2
000276 0E27           05907         movlw   high 10000      ; Find 10,000s
000278 6E17           05908         movwf   R1 + 1
00027A 0E10           05909         movlw   low 10000
00027C D812           05910         rcall   serout2ddig     ; Do the work
                      05911       ifdef SEROUT2TO_USED
                      05912         btfss   STATUS, C       ; Timed out?
                      05913         return          ; Yes
                      05914       endif
00027E 6A19           05915         clrf    R1 + 3
000280 6A18           05916         clrf    R1 + 2
000282 0E03           05917         movlw   high 1000       ; Find 1,000s
000284 6E17           05918         movwf   R1 + 1
000286 0EE8           05919         movlw   low 1000
000288 D80C           05920         rcall   serout2ddig     ; Do the work
                      05921       ifdef SEROUT2TO_USED
                      05922         btfss   STATUS, C       ; Timed out?
                      05923         return                  ; Yes
                      05924       endif
00028A 6A19           05925         clrf    R1 + 3
00028C 6A18           05926         clrf    R1 + 2
00028E 6A17           05927         clrf    R1 + 1          ; Find 100s
000290 0E64           05928         movlw   100
000292 D807           05929         rcall   serout2ddig     ; Do the work
                      05930       ifdef SEROUT2TO_USED
                      05931         btfss   STATUS, C       ; Timed out?
                      05932         return                  ; Yes
                      05933       endif
000294 6A19           05934         clrf    R1 + 3
000296 6A18           05935         clrf    R1 + 2
000298 6A17           05936         clrf    R1 + 1          ; Find 10s
00029A 0E0A           05937         movlw   10
00029C D802           05938         rcall   serout2ddig     ; Do the work
                      05939       ifdef SEROUT2TO_USED
                      05940         btfss   STATUS, C       ; Timed out?
                      05941         return                  ; Yes
                      05942       endif
00029E 501A           05943         movf    R2, W           ; Get the 1s
0002A0 D00C           05944         bra     SEROUT2SEND     ; Send the 1s and exit
                      05945 
0002A2 6E16           05946 serout2ddig movwf R1            ; Save last piece
0002A4 501D           05947         movf    R2 + 3, W       ; Move remainder to dividend
0002A6 6E15           05948         movwf   R0 + 3
0002A8 501C           05949         movf    R2 + 2, W
0002AA 6E14           05950         movwf   R0 + 2
0002AC 501B           05951         movf    R2 + 1, W
0002AE 6E13           05952         movwf   R0 + 1
0002B0 501A           05953         movf    R2, W
0002B2 6E12           05954         movwf   R0
0002B4 ECD9 F001      05955         call    DIV             ; Do the math
0002B8 5012           05956         movf    R0, W           ; Get the result
                      05957 ;       bra     SEROUT2SEND     ; Fall through
                      05964   LIST
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002BA 6E12           05965 SEROUT2SEND movwf R0            ; Save char for a moment
0002BC 4E02           05966         dcfsnz  R4, F           ; Bump down count while we're here
0002BE 9E01           05967         bcf     GOP, 7
0002C0 5003           05968         movf    R4 + 1, W       ; Get number of digits to send
0002C2 E003           05969         bz      serout2send1    ; If zero digits skip count compare
0002C4 5C02           05970         subwf   R4, W           ; Send if within count
0002C6 B0D8           05971         btfsc   STATUS, C
0002C8 0012           05972         return                  ; Carry set for no timeout
0002CA 5012           05973 serout2send1 movf R0, W         ; Get char back
                      05974       ifdef SEROUT2TO_USED
                      05975         bsf     STATUS, C       ; Set carry for no timeout in case of blanking
                      05976       endif
0002CC A4D8           05977         btfss   STATUS, Z       ; If char zero, goto blank check
0002CE 9E01           05978         bcf     GOP, 7          ; Not zero so clear blank
0002D0 BE01           05979         btfsc   GOP, 7          ; If blanking on, don't send
0002D2 0012           05980         return
0002D4 0F30           05981         addlw   '0'             ; Add ASCII offset
0002D6 EF9F F002      05982         goto    JUMPMAN         ; Send it
                      07088   LIST
0002DA 6A17           07089 PAUSEB  clrf    R1 + 1
0002DC 6A18           07090 PAUSEW  clrf    R1 + 2
0002DE 6A19           07091         clrf    R1 + 3
0002E0 6E16           07092 PAUSE   movwf   R1
0002E2 6AE8           07093 pauseloop clrf  WREG            ; 1 (10) Clear W for subtracts
0002E4 0616           07094         decf    R1, F           ; 1
0002E6 5A17           07095         subwfb  R1 + 1, F       ; 1
0002E8 5A18           07096         subwfb  R1 + 2, F       ; 1
0002EA 5A19           07097         subwfb  R1 + 3, F       ; 1
0002EC A0D8           07098         btfss   STATUS, C       ; 2
0002EE EFA5 F002      07099         goto    DUNN
0002F2 0E03           07100         movlw   (PAUSE_DELAY) >> 8      ; 1
0002F4 6E13           07101         movwf   R0 + 1          ; 1
0002F6 0EE5           07102         movlw   low (PAUSE_DELAY)       ; 1
0002F8 D802           07103         rcall   PAUSEUS         ; -2 (PAUSEUS gives you 2 less than you ask for)
0002FA D7F3           07104         bra     pauseloop       ; 2
                      07272   LIST
0002FC 6A13           07273 PAUSEUSB clrf   R0 + 1          ; 1
0002FE 0FFB           07274 PAUSEUS addlw   -5              ; 1 Subtract overhead
000300 6E12           07275         movwf   R0              ; 1
000302 D000           07276         bra     $ + 2           ; 2
000304 6AE8           07277         clrf    WREG            ; 1
000306 D001           07278         bra     pauseush        ; 2
000308 0612           07279 pauseusloop decf R0, F          ; 1
00030A 5A13           07280 pauseush subwfb R0 + 1, F       ; 1
00030C E2FD           07281         bc      pauseusloop     ; 1 / 2
                      07282         CLRWDT?NOP              ; 1
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     else
00030E 0000               M         nop
                          M     endif
000310 0012           07283         return                  ; 2 + 3 (call + setup)
                      08002   LIST
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000312 90D8           08003 shiftlloop bcf  STATUS, C       ; Shift in 0 bits
000314 3612           08004         rlcf    R0, F           ; Shift left once
000316 3613           08005         rlcf    R0 + 1, F
000318 3614           08006         rlcf    R0 + 2, F
00031A 3615           08007         rlcf    R0 + 3, F
00031C 0FFF           08008 SHIFTL  addlw   -1
00031E E2F9           08009         bc      shiftlloop      ; Done?
000320 5012           08010         movf    R0, W           ; Move low part of result to W
000322 EFA5 F002      08011         goto    DUNN
                      08027   LIST
000326 90D8           08028 shiftrloop bcf  STATUS, C       ; Shift in 0 bits
000328 3215           08029         rrcf    R0 + 3, F       ; Shift right once
00032A 3214           08030         rrcf    R0 + 2, F
00032C 3213           08031         rrcf    R0 + 1, F
00032E 3212           08032         rrcf    R0, F
000330 0FFF           08033 SHIFTR  addlw   -1
000332 E2F9           08034         bc      shiftrloop      ; Done?
000334 5012           08035         movf    R0, W           ; Move low part of result to W
000336 EFA5 F002      08036         goto    DUNN
                      08169   LIST
00033A 6E16           08170 CMPEQW  movwf   R1
00033C 0E02           08171         movlw   2               ; Mask for =
00033E D009           08172         bra     CMPW
                      08280   LIST
000340 6E16           08281 CMPLEW  movwf   R1
000342 0E06           08282         movlw   6               ; Mask for < =
000344 D006           08283         bra     CMPW
                      08317   LIST
000346 6E16           08318 CMPLTW  movwf   R1
000348 0E04           08319         movlw   4               ; Mask for <
00034A D003           08320         bra     CMPW
                      08363   LIST
00034C 6E16           08364 CMPNE   movwf   R1
00034E 0E05           08365         movlw   5               ; Mask for < >
000350 D002           08366         bra     CMP
                      08390   LIST
000352 6E02           08391 CMPW    movwf   R4              ; Save compare state
000354 D00A           08392         bra     cmpw1           ; Compare unsigned words
                      08398   LIST
000356 6E02           08399 CMP     movwf   R4              ; Save compare state
000358 5019           08400         movf    R1 + 3, W       ; Compare signed longs
00035A 1815           08401         xorwf   R0 + 3, W       ; Check signs
00035C E615           08402         bn      cmpdiff         ; Different signs
00035E 5019           08403         movf    R1 + 3, W       ; Flags = MSB(R0) - MSB(R1)
000360 5C15           08404         subwf   R0 + 3, W
000362 E108           08405         bnz     cmpnoteq        ; If unequal then done
000364 5018           08406         movf    R1 + 2, W
000366 5C14           08407         subwf   R0 + 2, W
000368 E105           08408         bnz     cmpnoteq        ; If unequal then done
00036A 5017           08409 cmpw1   movf    R1 + 1, W
00036C 5C13           08410         subwf   R0 + 1, W
00036E E102           08411         bnz     cmpnoteq        ; If unequal then done
000370 5016           08412 cmpb1   movf    R1, W           ; Flags = LSB(R0) - LSB(R1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000372 5C12           08413         subwf   R0, W
000374 0E04           08414 cmpnoteq movlw  4               ; W = 4 if R0 < R1
000376 B0D8           08415         btfsc   STATUS, C
000378 0E01           08416         movlw   1               ; W = 1 if R0 > R1
00037A B4D8           08417         btfsc   STATUS, Z
00037C 0E02           08418         movlw   2               ; W = 2 if R0 == R1
00037E 1402           08419         andwf   R4, W           ; Mask for compare state
000380 A4D8           08420         btfss   STATUS, Z
000382 0EFF           08421         movlw   -1
000384 EFA5 F002      08422         goto    DUNN
                      08423 
000388 5015           08424 cmpdiff movf    R0 + 3, W       ; Different signs so flip compare to accomodate
00038A 5C19           08425         subwf   R1 + 3, W       ; Flags = MSB(R1) - MSB(R0)
00038C D7F3           08426         bra     cmpnoteq        ; Will always be not equal
                      08598   LIST
00038E 6A21           08599 DIVS    clrf    R3 + 3          ; Clear sign difference indicator
000390 AE15           08600         btfss   R0 + 3, 7       ; Check for R0 negative
000392 D006           08601         bra     divchkr1        ; Not negative
000394 7E21           08602         btg     R3 + 3, 7       ; Flip sign indicator
000396 6AE8           08603         clrf    WREG            ; Clear W for subtracts
000398 6C12           08604         negf    R0              ; Flip value to plus
00039A 5613           08605         subfwb  R0 + 1, F
00039C 5614           08606         subfwb  R0 + 2, F
00039E 5615           08607         subfwb  R0 + 3, F
0003A0 AE19           08608 divchkr1 btfss  R1 + 3, 7       ; Check for R1 negative
0003A2 D008           08609         bra     divdo           ; Not negative
0003A4 7E21           08610         btg     R3 + 3, 7       ; Flip sign indicator
0003A6 6AE8           08611         clrf    WREG            ; Clear W for subtracts
0003A8 6C16           08612         negf    R1              ; Flip value to plus
0003AA 5617           08613         subfwb  R1 + 1, F
0003AC 5618           08614         subfwb  R1 + 2, F
0003AE 5619           08615         subfwb  R1 + 3, F
0003B0 D001           08616         bra     divdo           ; Skip unsigned entry
                      08622   LIST
0003B2                08623 DIV
                      08624       ifdef DIVS_USED
0003B2 6A21           08625         clrf    R3 + 3          ; Clear sign difference indicator       
                      08626       endif
0003B4 6A1A           08627 divdo   clrf    R2              ; Do the divide
0003B6 6A1B           08628         clrf    R2 + 1
0003B8 6A1C           08629         clrf    R2 + 2
0003BA 6A1D           08630         clrf    R2 + 3
                      08631 
0003BC 0E20           08632         movlw   32
0003BE 6E1E           08633         movwf   R3
                      08634 
0003C0 3415           08635 divloop rlcf    R0 + 3, W
0003C2 361A           08636         rlcf    R2, F
0003C4 361B           08637         rlcf    R2 + 1, F
0003C6 361C           08638         rlcf    R2 + 2, F
0003C8 361D           08639         rlcf    R2 + 3, F
0003CA 5016           08640         movf    R1, W
0003CC 5E1A           08641         subwf   R2, F
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003CE 5017           08642         movf    R1 + 1, W
0003D0 5A1B           08643         subwfb  R2 + 1, F
0003D2 5018           08644         movf    R1 + 2, W
0003D4 5A1C           08645         subwfb  R2 + 2, F
0003D6 5019           08646         movf    R1 + 3, W
0003D8 5A1D           08647         subwfb  R2 + 3, F
                      08648 
0003DA E209           08649         bc      divok
0003DC 5016           08650         movf    R1, W
0003DE 261A           08651         addwf   R2, F
0003E0 5017           08652         movf    R1 + 1, W
0003E2 221B           08653         addwfc  R2 + 1, F
0003E4 5018           08654         movf    R1 + 2, W
0003E6 221C           08655         addwfc  R2 + 2, F
0003E8 5019           08656         movf    R1 + 3, W
0003EA 221D           08657         addwfc  R2 + 3, F
                      08658 
0003EC 90D8           08659         bcf     STATUS, C
                      08660 
0003EE 3612           08661 divok   rlcf    R0, F
0003F0 3613           08662         rlcf    R0 + 1, F
0003F2 3614           08663         rlcf    R0 + 2, F
0003F4 3615           08664         rlcf    R0 + 3, F
                      08665 
0003F6 2E1E           08666         decfsz  R3, F
0003F8 D7E3           08667         bra     divloop
                      08668 
                      08669       ifdef DIVS_USED
0003FA AE21           08670         btfss   R3 + 3, 7       ; Should result be negative?
0003FC D009           08671         bra     divdone         ; Not negative
0003FE 6AE8           08672         clrf    WREG            ; Clear W for subtracts
000400 6C12           08673         negf    R0              ; Flip quotient to minus
000402 5613           08674         subfwb  R0 + 1, F
000404 5614           08675         subfwb  R0 + 2, F
000406 5615           08676         subfwb  R0 + 3, F
000408 6C1A           08677         negf    R2              ; Flip remainder to minus
00040A 561B           08678         subfwb  R2 + 1, F
00040C 561C           08679         subfwb  R2 + 2, F
00040E 561D           08680         subfwb  R2 + 3, F
000410                08681 divdone
                      08682     endif
                      08683 
000410 5012           08684         movf    R0, W           ; Get low byte to W
000412 EFA5 F002      08685         goto    DUNN
                      08701   LIST
000416 5016           08702 MUL     movf    R1, W
000418 021E           08703         mulwf   R3              ; AARGB3 * BARGB3 = PRODHL
00041A CFF3 F01A      08704         movff   PRODL, R2
00041E CFF4 F01B      08705         movff   PRODH, R2 + 1
                      08706 
000422 5017           08707         movf    R1 + 1, W
000424 021F           08708         mulwf   R3 + 1          ; AARGB2 * BARGB2 = PRODHL
000426 CFF3 F01C      08709         movff   PRODL, R2 + 2
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00042A CFF4 F01D      08710         movff   PRODH, R2 + 3
                      08711 
                      08712 ;       movf    R1 + 1, W       ; W still has R1 + 1 from above
00042E 021E           08713         mulwf   R3              ; AARGB2 * BARGB3 = PRODHL
000430 50F3           08714         movf    PRODL, W        ; Add cross products
000432 261B           08715         addwf   R2 + 1, F
000434 50F4           08716         movf    PRODH, W
000436 221C           08717         addwfc  R2 + 2, F
000438 6AE8           08718         clrf    WREG
00043A 221D           08719         addwfc  R2 + 3, F
                      08720 
00043C 5016           08721         movf    R1, W
00043E 021F           08722         mulwf   R3 + 1          ; AARGB3 * BARGB2 = PRODHL
000440 50F3           08723         movf    PRODL, W        ; Add cross products
000442 261B           08724         addwf   R2 + 1, F
000444 50F4           08725         movf    PRODH, W
000446 221C           08726         addwfc  R2 + 2, F
000448 6AE8           08727         clrf    WREG
00044A 221D           08728         addwfc  R2 + 3, F
                      08729 
00044C 5018           08730         movf    R1 + 2, W
00044E 021E           08731         mulwf   R3              ; AARGB1 * BARGB3 = PRODHL
000450 50F3           08732         movf    PRODL, W        ; Add cross products
000452 261C           08733         addwf   R2 + 2, F
000454 50F4           08734         movf    PRODH, W
000456 221D           08735         addwfc  R2 + 3, F
000458 5018           08736         movf    R1 + 2, W
00045A 021F           08737         mulwf   R3 + 1          ; AARGB1 * BARGB2 = PRODHL
00045C 6AE8           08738         clrf    WREG            ; Add cross products
00045E 6A12           08739         clrf    R0
000460 2212           08740         addwfc  R0, F
000462 50F3           08741         movf    PRODL, W
000464 261D           08742         addwf   R2 + 3, F
000466 50F4           08743         movf    PRODH, W
000468 2212           08744         addwfc  R0, F
                      08745 
00046A 5016           08746         movf    R1, W
00046C 0220           08747         mulwf   R3 + 2          ; AARGB3 * BARGB1 = PRODHL
00046E 50F3           08748         movf    PRODL, W        ; Add cross products
000470 261C           08749         addwf   R2 + 2, F
000472 50F4           08750         movf    PRODH, W
000474 221D           08751         addwfc  R2 + 3, F
000476 6AE8           08752         clrf    WREG
000478 6A13           08753         clrf    R0 + 1
00047A 2212           08754         addwfc  R0, F
00047C 2213           08755         addwfc  R0 + 1, F
                      08756 
00047E 5017           08757         movf    R1 + 1, W
000480 0220           08758         mulwf   R3 + 2          ; AARGB2 * BARGB1 = PRODHL
000482 50F3           08759         movf    PRODL, W        ; Add cross products
000484 261D           08760         addwf   R2 + 3, F
000486 50F4           08761         movf    PRODH, W
000488 2212           08762         addwfc  R0, F
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00048A 6AE8           08763         clrf    WREG
00048C 2213           08764         addwfc  R0 + 1, F
                      08765 
00048E 5018           08766         movf    R1 + 2, W
000490 0220           08767         mulwf   R3 + 2          ; AARGB1 * BARGB1 = PRODHL
000492 50F3           08768         movf    PRODL, W        ; Add cross products
000494 2612           08769         addwf   R0, F
000496 50F4           08770         movf    PRODH, W
000498 2213           08771         addwfc  R0 + 1, F
                      08772 
00049A 5019           08773         movf    R1 + 3, W
00049C 021F           08774         mulwf   R3 + 1          ; AARGB0 * BARGB2 = PRODHL
00049E 50F3           08775         movf    PRODL, W        ; Add cross products
0004A0 2612           08776         addwf   R0, F
0004A2 50F4           08777         movf    PRODH, W
0004A4 2213           08778         addwfc  R0 + 1, F
0004A6 5019           08779         movf    R1 + 3, W
0004A8 0220           08780         mulwf   R3 + 2          ; AARGB0 * BARGB1 = PRODHL
0004AA 6AE8           08781         clrf    WREG            ; Add cross products
0004AC 6A14           08782         clrf    R0 + 2
0004AE 2214           08783         addwfc  R0 + 2, F
0004B0 50F3           08784         movf    PRODL, W
0004B2 2613           08785         addwf   R0 + 1, F
0004B4 50F4           08786         movf    PRODH, W
0004B6 2214           08787         addwfc  R0 + 2, F
                      08788 
0004B8 5019           08789         movf    R1 + 3, W
0004BA 021E           08790         mulwf   R3              ; AARGB0 * BARGB3 = PRODHL
0004BC 50F3           08791         movf    PRODL, W        ; Add cross products
0004BE 261D           08792         addwf   R2 + 3, F
0004C0 50F4           08793         movf    PRODH, W
0004C2 2212           08794         addwfc  R0, F
0004C4 6AE8           08795         clrf    WREG
0004C6 2213           08796         addwfc  R0 + 1, F
0004C8 2214           08797         addwfc  R0 + 2, F
                      08798 
0004CA 5019           08799         movf    R1 + 3, W
0004CC 0221           08800         mulwf   R3 + 3          ; AARGB0 * BARGB0 = PRODHL
0004CE CFF4 F015      08801         movff   PRODH, R0 + 3   ; Add cross products
0004D2 50F3           08802         movf    PRODL, W
0004D4 2614           08803         addwf   R0 + 2, F
0004D6 6AE8           08804         clrf    WREG
0004D8 2215           08805         addwfc  R0 + 3, F
                      08806 
0004DA 5016           08807         movf    R1, W
0004DC 0221           08808         mulwf   R3 + 3          ; AARGB3 * BARGB0 = PRODHL
0004DE 50F3           08809         movf    PRODL, W        ; Add cross products
0004E0 261D           08810         addwf   R2 + 3, F
0004E2 50F4           08811         movf    PRODH, W
0004E4 2212           08812         addwfc  R0, F
0004E6 6AE8           08813         clrf    WREG
0004E8 2213           08814         addwfc  R0 + 1, F
0004EA 2214           08815         addwfc  R0 + 2, F
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004EC 2215           08816         addwfc  R0 + 3, F
                      08817 
0004EE 5017           08818         movf    R1 + 1, W
0004F0 0221           08819         mulwf   R3 + 3          ; AARGB2 * BARGB0 = PRODHL
0004F2 50F3           08820         movf    PRODL, W        ; Add cross products
0004F4 2612           08821         addwf   R0, F
0004F6 50F4           08822         movf    PRODH, W
0004F8 2213           08823         addwfc  R0 + 1, F
0004FA 6AE8           08824         clrf    WREG
0004FC 2214           08825         addwfc  R0 + 2, F
0004FE 2215           08826         addwfc  R0 + 3, F
                      08827 
000500 5018           08828         movf    R1 + 2, W
000502 0221           08829         mulwf   R3 + 3          ; AARGB1 * BARGB0 = PRODHL
000504 50F3           08830         movf    PRODL, W        ; Add cross products
000506 2613           08831         addwf   R0 + 1, F
000508 50F4           08832         movf    PRODH, W
00050A 2214           08833         addwfc  R0 + 2, F
00050C 6AE8           08834         clrf    WREG
00050E 2215           08835         addwfc  R0 + 3, F
                      08836 
000510 AE21           08837         btfss   R3 + 3, 7
000512 D008           08838         bra     mulsign
000514 5016           08839         movf    R1, W
000516 5E12           08840         subwf   R0, F
000518 5017           08841         movf    R1 + 1, W
00051A 5A13           08842         subwfb  R0 + 1, F
00051C 5018           08843         movf    R1 + 2, W
00051E 5A14           08844         subwfb  R0 + 2, F
000520 5019           08845         movf    R1 + 3, W
000522 5A15           08846         subwfb  R0 + 3, F
                      08847 
000524 AE19           08848 mulsign btfss   R1 + 3, 7
000526 D008           08849         bra     muldone
000528 501E           08850         movf    R3, W
00052A 5E12           08851         subwf   R0, F
00052C 501F           08852         movf    R3 + 1, W
00052E 5A13           08853         subwfb  R0 + 1, F
000530 5020           08854         movf    R3 + 2, W
000532 5A14           08855         subwfb  R0 + 2, F
000534 5021           08856         movf    R3 + 3, W
000536 5A15           08857         subwfb  R0 + 3, F
                      08858 
000538 501A           08859 muldone movf    R2, W           ; Get low byte to W
00053A EFA5 F002      08860         goto    DUNN
                      08876   LIST
00053E 6EE9           08877 JUMPMAN movwf   FSR0L
000540 6AFB           08878         clrf    PCLATU
000542 500B           08879         movf    R8 + 1, W
000544 6EFA           08880         movwf   PCLATH
000546 500A           08881         movf    R8, W
000548 6EF9           08882         movwf   PCL
                      08896   LIST
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00054A 0100           08897 DUNN    movlb   0               ; 1 Reset banks to 0
                      08898 DUNN5   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     else
00054C 0000               M         nop
                          M     endif
00054E 0012           08899         return                  ; 2 Done
                      08912   LIST
000550                08913 INIT
                      08949   LIST
000550                08950 main
                      00310 
                      00311 
                      00312 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00036   #HEADER
                      00313 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00062   #CONFIG
                      00314 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00282   BANKA   $0000, $005F
                      00315 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00283   BANK0   $0060, $00FF
                      00316 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00284   BANK1   $0100, $01FF
                      00317 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00285   BANK2   $0200, $02FF
                      00318 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00286   BANK3   $0300, $03FF
                      00319 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00287   BANK4   $0400, $04FF
                      00320 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00288   BANK5   $0500, $05FF
                      00321 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00290   'EEPROM  $F00000, $F000FF
                      00322 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00292       #MSG "LONG Variables enabled (PBPL used)"
                      00323 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00293       LIBRARY  "PBPPI18L"
                      00324 
                      00325 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00294       INCLUDE "PBPPI18L.RAM"
                      00326 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00297       INCLUDE "PBPPIC18.RAM"
                      00327 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00298   #ENDIF
                      00328 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00299   DEFINE  ADC_CHANNELS  1
                      00329 ; C:\PBP3\DEVICES\PIC18F25K22.PBPINC    00307   #HEADER
                      00330 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00001   define OSC 16
                      00331 
                      00332 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00002   include "HPWM10_L.pbp"
                      00333 
                      00334 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00018   disable debug
                      00335         DDISABLE?       
                      00336 
                      00337 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00019   asm
                      00338 
                      00339         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00340 
                      00341   if (R1 - R0 == 4)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00342   else
                      00343     messg You must use PBPL
                      00344   endif
                      00345 ;____[ HPWM10: 10-bit HPWM, with up to 5 CCP modules ]_____________
                      00346 
                      00347 HPWM10 macro  Channel, Duty, Freq   
                      00348     if Channel < 6 
                      00349       MOVE?CB Channel, _HP_Channel      ; Save channel from constant
                      00350     else
                      00351       MOVE?BB Channel, _HP_Channel      ; Save channel from BYTE var
                      00352     endif
                      00353     MOVE?WW   Duty, _HP_Duty
                      00354     MOVE?WW   Freq, _HP_Freq
                      00355     L?CALL    _HPWM10_UPD    
                      00356     endm
                      00357 
                      00358 
                      00359         ENDASM?
                      00360 
                      00361 
                      00362 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00056   goto OverHPWM10
                      00363         GOTO?L  _OverHPWM10
                          M         L?GOTO  _OverHPWM10
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_OverHPWM10))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _OverHPWM10
                          M     else
                          M       if ((_OverHPWM10) < 1)
                          M         goto    _OverHPWM10
                          M       else
                          M         if ((_OverHPWM10) > $)
000550 EF5A F004          M         goto    _OverHPWM10
                          M         else
                          M           if ((_OverHPWM10) < ($ - 3ffh))
                          M         goto    _OverHPWM10
                          M           else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bra     _OverHPWM10
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00364 
                      00365 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00058   @PS = ((OSC * 1000000) / 1024)
                      00366 
                      00367         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
  00003D09            00368 PS = ((OSC * 1000000) / 1024)
                      00369 
                      00370         ENDASM?
                      00371 
                      00372 
                      00373 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00059   @PR2const = ((OSC * 1000000) / 4)  ;<----Added
                      00374 
                      00375         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
  003D0900            00376 PR2const = ((OSC * 1000000) / 4)  ;<----Added
                      00377 
                      00378         ENDASM?
                      00379 
                      00380 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00060   PS  CON EXT                        ;<----Added
                      00381 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00061   PR2const CON EXT
                      00382 
                      00383 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00062   HPWM10_UPD:  
                      00384 
                      00385         LABEL?L _HPWM10_UPD     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _HPWM10_UPD
                          M         XALL
                          M     else
000554                    M _HPWM10_UPD
                          M     endif
                      00386 
                      00387 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00064       HP_Temp = PS / HP_Freq
                      00388         DIV?CWW PS, _HP_Freq, _HP_Temp
                          M         MOVE?CN PS,  R0
                          M     ifdef USE_LINKER
                          M         CHK?RP  R0
                          M         movlw   low (PS)
                          M         movwf   R0
                          M         movlw   high (PS)
                          M         movwf   (R0)   + 1
                          M         movlw   upper (PS)
                          M         movwf   (R0)   + 2
                          M         movlw   (PS)  >> 24
                          M         movwf   (R0)   + 3
                          M     else
                          M         MOVE?CB low (PS),  R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     if (low (low (PS)) == 0)
                          M         clrf    R0
                          M     else
                          M       if (low (low (PS)) == 255)
                          M         setf    R0
                          M       else
000554 0E09               M         movlw   low (low (PS))
000556 6E12               M         movwf   R0
                          M       endif
                          M     endif
                          M         MOVE?CB high (PS),  (R0)   + 1
                          M         CHK?RP  (R0) + 1
                          M     if ((((R0) + 1) & 8000h) != PREV_ALT)
                          M       if (((R0) + 1) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 1) & 8000h
                          M     endif
                          M     if (((((R0) + 1) & 0fffh) > BANKA_END) & ((((R0) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 1)
                          M PREV_BANK = high ((R0) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (PS)) == 0)
                          M         clrf    (R0) + 1
                          M     else
                          M       if (low (high (PS)) == 255)
                          M         setf    (R0) + 1
                          M       else
000558 0E3D               M         movlw   low (high (PS))
00055A 6E13               M         movwf   (R0) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (PS),  (R0)   + 2
                          M         CHK?RP  (R0) + 2
                          M     if ((((R0) + 2) & 8000h) != PREV_ALT)
                          M       if (((R0) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 2) & 8000h
                          M     endif
                          M     if (((((R0) + 2) & 0fffh) > BANKA_END) & ((((R0) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 2)
                          M PREV_BANK = high ((R0) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (PS)) == 0)
00055C 6A14               M         clrf    (R0) + 2
                          M     else
                          M       if (low (upper (PS)) == 255)
                          M         setf    (R0) + 2
                          M       else
                          M         movlw   low (upper (PS))
                          M         movwf   (R0) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (PS)  >> 24, (R0)   + 3
                          M         CHK?RP  (R0) + 3
                          M     if ((((R0) + 3) & 8000h) != PREV_ALT)
                          M       if (((R0) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 3) & 8000h
                          M     endif
                          M     if (((((R0) + 3) & 0fffh) > BANKA_END) & ((((R0) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 3)
                          M PREV_BANK = high ((R0) + 3)
                          M       endif
                          M     endif
                          M     if (low ((PS) >> 24) == 0)
00055E 6A15               M         clrf    (R0) + 3
                          M     else
                          M       if (low ((PS) >> 24) == 255)
                          M         setf    (R0) + 3
                          M       else
                          M         movlw   low ((PS) >> 24)
                          M         movwf   (R0) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         MOVE?WN _HP_Freq, R1
                          M         MOVE?BB _HP_Freq, R1
000560 C039 F016          M         movff   _HP_Freq, R1
                          M         MOVE?BB (_HP_Freq) + 1, (R1) + 1
000564 C03A F017          M         movff   (_HP_Freq) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
000568 6A18               M         clrf    (R1)   + 2
00056A 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
00056C DF10               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
00056E 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000570 C013 F03C          M         movff   (R0) + 1, (_HP_Temp) + 1
                      00389 
                      00390 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00065       if HP_Temp >= 4 then
                      00391         CMPLT?WCL       _HP_Temp, 004h, L00003
                          M     if ((004h) >= 10000h)
                          M         L?GOTO  L00003
                          M     else
                          M       if ((004h) > 0)
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
000574 C03B F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
000578 C03C F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?CB (004h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((004h) >> 8) == 0)
00057C 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low ((004h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low ((004h) >> 8)
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (004h)
00057E 0E04               M         movlw   low (low (004h))
                          M         L?CALL  CMPLTW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLTW
                          M     else
                          M       if ((CMPLTW) < 1)
                          M         call    CMPLTW
                          M       else
                          M         if ((CMPLTW) > $)
                          M         call    CMPLTW
                          M         else
                          M           if ((CMPLTW) < ($ - 3ffh))
                          M         call    CMPLTW
                          M           else
000580 DEE2               M         rcall   CMPLTW
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00003
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00003))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00003
                          M             else
                          M         bov     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000582 A4D8               M         btfss   STATUS, Z
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00003
                          M       else
                          M         if ((L00003) < 1)
                          M         goto    L00003
                          M         else
                          M           if ((L00003) > $)
000584 EFD0 F002          M         goto    L00003
                          M           else
                          M             if ((L00003) < ($ - 3ffh))
                          M         goto    L00003
                          M             else
                          M         bra     L00003
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       endif
                          M     endif
                      00392 
                      00393 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00066           if PS1 <> 1 then PSchanged = 1 
                      00394         CMPEQ?TCL       _PS1, 001h, L00005
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 001h, L00005
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00005))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00005
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((L00005) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00005
                          M             else
                          M         bov     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
000588 B247               M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00005
                          M       else
                          M         if ((L00005) < 1)
                          M         goto    L00005
                          M         else
                          M           if ((L00005) > $)
00058A EFC8 F002          M         goto    L00005
                          M           else
                          M             if ((L00005) < ($ - 3ffh))
                          M         goto    L00005
                          M             else
                          M         bra     L00005
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00395         MOVE?CT 001h, _PSchanged
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00058E 8447               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00396         LABEL?L L00005  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00005
                          M         XALL
                          M     else
000590                    M L00005
                          M     endif
                      00397 
                      00398 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00067           PS1 = 1
                      00399         MOVE?CT 001h, _PS1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000590 8247               M         bsf     _HP_Flags, 001h
                          M     else
                          M         bcf     _HP_Flags, 001h
                          M     endif
                      00400 
                      00401 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00068           if PS0 <> 1 then PSchanged = 1 
                      00402         CMPEQ?TCL       _PS0, 001h, L00007
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 000h, L00007
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00007))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00007
                          M             else
                          M         bov     L00007
                          M             endif
                          M           endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
000592 B047               M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00007
                          M       else
                          M         if ((L00007) < 1)
                          M         goto    L00007
                          M         else
                          M           if ((L00007) > $)
000594 EFCD F002          M         goto    L00007
                          M           else
                          M             if ((L00007) < ($ - 3ffh))
                          M         goto    L00007
                          M             else
                          M         bra     L00007
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00403         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000598 8447               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00404         LABEL?L L00007  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00007
                          M         XALL
                          M     else
00059A                    M L00007
                          M     endif
                      00405 
                      00406 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00069           PS0 = 1
                      00407         MOVE?CT 001h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00059A 8047               M         bsf     _HP_Flags, 000h
                          M     else
                          M         bcf     _HP_Flags, 000h
                          M     endif
                      00408 
                      00409 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00070       else
                      00410         GOTO?L  L00004
                          M         L?GOTO  L00004
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00004))
                          M         CLRWDT?
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00004
                          M     else
                          M       if ((L00004) < 1)
                          M         goto    L00004
                          M       else
                          M         if ((L00004) > $)
00059C EFEB F002          M         goto    L00004
                          M         else
                          M           if ((L00004) < ($ - 3ffh))
                          M         goto    L00004
                          M           else
                          M         bra     L00004
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00411         LABEL?L L00003  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00003
                          M         XALL
                          M     else
0005A0                    M L00003
                          M     endif
                      00412 
                      00413 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00071           if PS1 <> 0 then PSchanged = 1 
                      00414         CMPEQ?TCL       _PS1, 000h, L00009
                          M     if (((000h) == 0) | ((000h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 000h, _HP_Flags, 001h, L00009
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00009))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((000h)   == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00009
                          M             else
                          M         bov     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((000h)   == 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005A0 A247               M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00009
                          M       else
                          M         if ((L00009) < 1)
                          M         goto    L00009
                          M         else
                          M           if ((L00009) > $)
0005A2 EFD4 F002          M         goto    L00009
                          M           else
                          M             if ((L00009) < ($ - 3ffh))
                          M         goto    L00009
                          M             else
                          M         bra     L00009
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00415         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0005A6 8447               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00416         LABEL?L L00009  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00009
                          M         XALL
                          M     else
0005A8                    M L00009
                          M     endif
                      00417 
                      00418 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00072           PS1 = 0
                      00419         MOVE?CT 000h, _PS1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 001h
                          M     else
0005A8 9247               M         bcf     _HP_Flags, 001h
                          M     endif
                      00420 
                      00421 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00073           if HP_Temp > 0 then 
                      00422         CMPLE?WCL       _HP_Temp, 000h, L00011
                          M     if ((000h) >= 0ffffh)
                          M         L?GOTO  L00011
                          M     else
                          M       if ((000h) >= 0)
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
0005AA C03B F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
0005AE C03C F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?CB (000h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((000h) >> 8) == 0)
0005B2 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low ((000h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low ((000h) >> 8)
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (000h)
0005B4 0E00               M         movlw   low (low (000h))
                          M         L?CALL  CMPLEW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPLEW
                          M     else
                          M       if ((CMPLEW) < 1)
                          M         call    CMPLEW
                          M       else
                          M         if ((CMPLEW) > $)
                          M         call    CMPLEW
                          M         else
                          M           if ((CMPLEW) < ($ - 3ffh))
                          M         call    CMPLEW
                          M           else
0005B6 DEC4               M         rcall   CMPLEW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00011
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00011))
                          M         CLRWDT?
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M         else
                          M           if ((L00011) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00011
                          M             else
                          M         bov     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0005B8 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00011
                          M       else
                          M         if ((L00011) < 1)
                          M         goto    L00011
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((L00011) > $)
0005BA EFE6 F002          M         goto    L00011
                          M           else
                          M             if ((L00011) < ($ - 3ffh))
                          M         goto    L00011
                          M             else
                          M         bra     L00011
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       endif
                          M     endif
                      00423 
                      00424 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00074               if PS0 <> 1 then PSchanged = 1 
                      00425         CMPEQ?TCL       _PS0, 001h, L00013
                          M     if (((001h) == 0) | ((001h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 001h, _HP_Flags, 000h, L00013
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00013))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00013
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00013) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00013
                          M             else
                          M         bov     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((001h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
0005BE B047               M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00013
                          M       else
                          M         if ((L00013) < 1)
                          M         goto    L00013
                          M         else
                          M           if ((L00013) > $)
0005C0 EFE3 F002          M         goto    L00013
                          M           else
                          M             if ((L00013) < ($ - 3ffh))
                          M         goto    L00013
                          M             else
                          M         bra     L00013
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00426         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0005C4 8447               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00427         LABEL?L L00013  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00013
                          M         XALL
                          M     else
0005C6                    M L00013
                          M     endif
                      00428 
                      00429 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00075               PS0 = 1
                      00430         MOVE?CT 001h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0005C6 8047               M         bsf     _HP_Flags, 000h
                          M     else
                          M         bcf     _HP_Flags, 000h
                          M     endif
                      00431 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00432 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00076           else
                      00433         GOTO?L  L00012
                          M         L?GOTO  L00012
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00012))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00012
                          M     else
                          M       if ((L00012) < 1)
                          M         goto    L00012
                          M       else
                          M         if ((L00012) > $)
0005C8 EFEB F002          M         goto    L00012
                          M         else
                          M           if ((L00012) < ($ - 3ffh))
                          M         goto    L00012
                          M           else
                          M         bra     L00012
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00434         LABEL?L L00011  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00011
                          M         XALL
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005CC                    M L00011
                          M     endif
                      00435 
                      00436 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00077               if PS0 <> 0 then PSchanged = 1 
                      00437         CMPEQ?TCL       _PS0, 000h, L00015
                          M     if (((000h) == 0) | ((000h) == 1))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 000h, _HP_Flags, 000h, L00015
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00015))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((000h)   == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00015
                          M             else
                          M         bov     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((000h)   == 0)
0005CC A047               M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00015
                          M       else
                          M         if ((L00015) < 1)
                          M         goto    L00015
                          M         else
                          M           if ((L00015) > $)
0005CE EFEA F002          M         goto    L00015
                          M           else
                          M             if ((L00015) < ($ - 3ffh))
                          M         goto    L00015
                          M             else
                          M         bra     L00015
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00438         MOVE?CT 001h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0005D2 8447               M         bsf     _HP_Flags, 002h
                          M     else
                          M         bcf     _HP_Flags, 002h
                          M     endif
                      00439         LABEL?L L00015  
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00015
                          M         XALL
                          M     else
0005D4                    M L00015
                          M     endif
                      00440 
                      00441 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00078               PS0 = 0
                      00442         MOVE?CT 000h, _PS0
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 000h
                          M     else
0005D4 9047               M         bcf     _HP_Flags, 000h
                          M     endif
                      00443 
                      00444 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00079           endif
                      00445         LABEL?L L00012  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M L00012
                          M         XALL
                          M     else
0005D6                    M L00012
                          M     endif
                      00446 
                      00447 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00080       endif
                      00448         LABEL?L L00004  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00004
                          M         XALL
                          M     else
0005D6                    M L00004
                          M     endif
                      00449 
                      00450 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00091       HP_Temp =PR2const/HP_Freq 'DIV32 HP_Freq <--
                            -----------------changed
                      00451         DIV?CWW PR2const, _HP_Freq, _HP_Temp
                          M         MOVE?CN PR2const, R0
                          M     ifdef USE_LINKER
                          M         CHK?RP  R0
                          M         movlw   low (PR2const)
                          M         movwf   R0
                          M         movlw   high (PR2const)
                          M         movwf   (R0)   + 1
                          M         movlw   upper (PR2const)
                          M         movwf   (R0)   + 2
                          M         movlw   (PR2const) >> 24
                          M         movwf   (R0)   + 3
                          M     else
                          M         MOVE?CB low (PR2const), R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
                          M     if (low (low (PR2const)) == 0)
0005D6 6A12               M         clrf    R0
                          M     else
                          M       if (low (low (PR2const)) == 255)
                          M         setf    R0
                          M       else
                          M         movlw   low (low (PR2const))
                          M         movwf   R0
                          M       endif
                          M     endif
                          M         MOVE?CB high (PR2const), (R0) + 1
                          M         CHK?RP  (R0) + 1
                          M     if ((((R0) + 1) & 8000h) != PREV_ALT)
                          M       if (((R0) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 1) & 8000h
                          M     endif
                          M     if (((((R0) + 1) & 0fffh) > BANKA_END) & ((((R0) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 1)
                          M PREV_BANK = high ((R0) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (PR2const)) == 0)
                          M         clrf    (R0) + 1
                          M     else
                          M       if (low (high (PR2const)) == 255)
                          M         setf    (R0) + 1
                          M       else
0005D8 0E09               M         movlw   low (high (PR2const))
0005DA 6E13               M         movwf   (R0) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (PR2const), (R0) + 2
                          M         CHK?RP  (R0) + 2
                          M     if ((((R0) + 2) & 8000h) != PREV_ALT)
                          M       if (((R0) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 2) & 8000h
                          M     endif
                          M     if (((((R0) + 2) & 0fffh) > BANKA_END) & ((((R0) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 2)
                          M PREV_BANK = high ((R0) + 2)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (low (upper (PR2const)) == 0)
                          M         clrf    (R0) + 2
                          M     else
                          M       if (low (upper (PR2const)) == 255)
                          M         setf    (R0) + 2
                          M       else
0005DC 0E3D               M         movlw   low (upper (PR2const))
0005DE 6E14               M         movwf   (R0) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (PR2const) >> 24, (R0) + 3
                          M         CHK?RP  (R0) + 3
                          M     if ((((R0) + 3) & 8000h) != PREV_ALT)
                          M       if (((R0) + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R0) + 3) & 8000h
                          M     endif
                          M     if (((((R0) + 3) & 0fffh) > BANKA_END) & ((((R0) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R0) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R0) + 3)
                          M PREV_BANK = high ((R0) + 3)
                          M       endif
                          M     endif
                          M     if (low ((PR2const) >> 24) == 0)
0005E0 6A15               M         clrf    (R0) + 3
                          M     else
                          M       if (low ((PR2const) >> 24) == 255)
                          M         setf    (R0) + 3
                          M       else
                          M         movlw   low ((PR2const) >> 24)
                          M         movwf   (R0) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         MOVE?WN _HP_Freq, R1
                          M         MOVE?BB _HP_Freq, R1
0005E2 C039 F016          M         movff   _HP_Freq, R1
                          M         MOVE?BB (_HP_Freq) + 1, (R1) + 1
0005E6 C03A F017          M         movff   (_HP_Freq) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
0005EA 6A18               M         clrf    (R1)   + 2
0005EC 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
0005EE DECF               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005F0 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
0005F2 C013 F03C          M         movff   (R0) + 1, (_HP_Temp) + 1
                      00452 
                      00453 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00093       if PS0 then HP_Temp = HP_Temp >> 2  ; /4
                      00454         CMPF?TL _PS0, L00017
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 000h, L00017
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00017))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00017
                          M             else
                          M         bov     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0005F6 A047               M         btfss   _HP_Flags, 000h
                          M       else
                          M         btfsc   _HP_Flags, 000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00017
                          M       else
                          M         if ((L00017) < 1)
                          M         goto    L00017
                          M         else
                          M           if ((L00017) > $)
0005F8 EF09 F003          M         goto    L00017
                          M           else
                          M             if ((L00017) < ($ - 3ffh))
                          M         goto    L00017
                          M             else
                          M         bra     L00017
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00455         SHIFTR?WCW      _HP_Temp, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Temp))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Temp
                          M         rrcf    (_HP_Temp) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
0005FC C03B F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
000600 C03C F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000604 6A14               M         clrf    (R0)   + 2
000606 6A15               M         clrf    (R0)   + 3
000608 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
00060A DE92               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
00060C 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
00060E C013 F03C          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00456         LABEL?L L00017  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00017
                          M         XALL
                          M     else
000612                    M L00017
                          M     endif
                      00457 
                      00458 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00094       if PS1 then HP_Temp = HP_Temp >> 2  ; /4 or 
                            16
                      00459         CMPF?TL _PS1, L00019
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 001h, L00019
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00019))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00019
                          M             else
                          M         bov     L00019
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000612 A247               M         btfss   _HP_Flags, 001h
                          M       else
                          M         btfsc   _HP_Flags, 001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00019
                          M       else
                          M         if ((L00019) < 1)
                          M         goto    L00019
                          M         else
                          M           if ((L00019) > $)
000614 EF17 F003          M         goto    L00019
                          M           else
                          M             if ((L00019) < ($ - 3ffh))
                          M         goto    L00019
                          M             else
                          M         bra     L00019
                          M             endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00460         SHIFTR?WCW      _HP_Temp, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Temp))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Temp
                          M         rrcf    (_HP_Temp) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
000618 C03B F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
00061C C03C F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000620 6A14               M         clrf    (R0)   + 2
000622 6A15               M         clrf    (R0)   + 3
000624 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
                          M         call    SHIFTR
                          M           else
000626 DE84               M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000628 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
00062A C013 F03C          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00461         LABEL?L L00019  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00019
                          M         XALL
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
00062E                    M L00019
                          M     endif
                      00462 
                      00463 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00095       HP_PR2 = HP_Temp.lowbyte - 1
                      00464         SUB?BCB _HP_Temp??LOWBYTE, 001h, _HP_PR2
                          M     if ((_HP_PR2) == (_HP_Temp??LOWBYTE))
                          M       if ((001h) == 1)
                          M         CHK?RP  _HP_PR2
                          M         decf    _HP_PR2, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _HP_PR2
                          M         subwf   _HP_PR2, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M     if (((_HP_Temp??LOWBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??LOWBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??LOWBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??LOWBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??LOWBYTE) & 0fffh) < (0f01h + BANKA_EN
                            D)))
                          M       if (((_HP_Temp??LOWBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??LOWBYTE)
                          M PREV_BANK = high (_HP_Temp??LOWBYTE)
                          M       endif
                          M     endif
00062E 043B               M         decf    _HP_Temp??LOWBYTE, W
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M         subwf   _HP_Temp??LOWBYTE, W
                          M       endif
                          M         MOVE?AB _HP_PR2
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000630 6E48               M         movwf   _HP_PR2
                          M     endif
                      00465 
                      00466 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00096       if HP_PR2 <> PR2 then PR2changed = 1
                      00467         CMPEQ?BBL       _HP_PR2, PR2, L00021
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         MOVE?BA _HP_PR2
                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
000632 5048               M         movf    _HP_PR2, W
                          M         CHK?RP  PR2
                          M     if (((PR2)   & 8000h) != PREV_ALT)
                          M       if ((PR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PR2)   & 8000h
                          M     endif
                          M     if ((((PR2)   & 0fffh) > BANKA_END) & (((PR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PR2)
                          M PREV_BANK = high (PR2)
                          M       endif
                          M     endif
000634 5CBB               M         subwf   PR2,  W
                          M         BIT?GOTO 1, STATUS, Z, L00021
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00021))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((1)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00021
                          M             else
                          M         bov     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   STATUS, Z
                          M       else
000636 B4D8               M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00021
                          M       else
                          M         if ((L00021) < 1)
                          M         goto    L00021
                          M         else
                          M           if ((L00021) > $)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000638 EF1F F003          M         goto    L00021
                          M           else
                          M             if ((L00021) < ($ - 3ffh))
                          M         goto    L00021
                          M             else
                          M         bra     L00021
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00468         MOVE?CT 001h, _PR2changed
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00063C 8647               M         bsf     _HP_Flags, 003h
                          M     else
                          M         bcf     _HP_Flags, 003h
                          M     endif
                      00469         LABEL?L L00021  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00021
                          M         XALL
                          M     else
00063E                    M L00021
                          M     endif
                      00470 
                      00471 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00100       HP_Temp = (HP_PR2 + 1) << 2  ; * 4
                      00472         ADD?BCN _HP_PR2, 001h, T1
                          M     if ((001h) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _HP_PR2
                          M     if (((_HP_PR2) & 8000h) != PREV_ALT)
                          M       if ((_HP_PR2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_PR2) & 8000h
                          M     endif
                          M     if ((((_HP_PR2) & 0fffh) > BANKA_END) & (((_HP_PR2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_PR2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_PR2)
                          M PREV_BANK = high (_HP_PR2)
                          M       endif
                          M     endif
00063E 2848               M         incf    _HP_PR2, W
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000640 6E22               M         movwf   T1
000642 6A23               M         clrf    (T1)   + 1
000644 6A24               M         clrf    (T1)   + 2
000646 6A25               M         clrf    (T1)   + 3
000648 3623               M         rlcf    (T1)   + 1, F
                          M     else
                          M         movlw   low (001h)
                          M         CHK?RP  _HP_PR2
                          M         addwf   _HP_PR2, W
                          M         MOVE?AN T1
                          M         movlw   high (001h)
                          M         addwfc  (T1)   + 1, F
                          M         movlw   upper (001h)
                          M         addwfc  (T1)   + 2, F
                          M         movlw   (001h) >> 24
                          M         addwfc  (T1)   + 3, F
                          M     endif
                      00473         SHIFTL?NCW      T1, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M         CHK?RP  T1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rlcf    T1,  W
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M     else
                          M         MOVE?NW T1,  R0
                          M         MOVE?BB T1,  R0
00064A C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
00064E C023 F013          M         movff   (T1) + 1, (R0) + 1
000652 0E02               M         movlw   002h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
                          M         call    SHIFTL
                          M           else
000654 DE63               M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000656 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000658 C013 F03C          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00474 
                      00475 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00102       HP_Duty = (HP_Temp * HP_Duty)/1023 'DIV32 10
                            23 <-------------------changed
                      00476         MUL?WWN _HP_Temp, _HP_Duty, T1
                          M         MOVE?WN _HP_Temp, R3
                          M         MOVE?BB _HP_Temp, R3
00065C C03B F01E          M         movff   _HP_Temp, R3
                          M         MOVE?BB (_HP_Temp) + 1, (R3) + 1
000660 C03C F01F          M         movff   (_HP_Temp) + 1, (R3) + 1
                          M         CHK?RP  R3
                          M     if (((R3)    & 8000h) != PREV_ALT)
                          M       if ((R3)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R3)    & 8000h
                          M     endif
                          M     if ((((R3)    & 0fffh) > BANKA_END) & (((R3)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R3)
                          M PREV_BANK = high (R3)
                          M       endif
                          M     endif
000664 6A20               M         clrf    (R3)   + 2
000666 6A21               M         clrf    (R3)   + 3
                          M         MOVE?WN _HP_Duty, R1
                          M         MOVE?BB _HP_Duty, R1
000668 C037 F016          M         movff   _HP_Duty, R1
                          M         MOVE?BB (_HP_Duty) + 1, (R1) + 1
00066C C038 F017          M         movff   (_HP_Duty) + 1, (R1) + 1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000670 6A18               M         clrf    (R1)   + 2
000672 6A19               M         clrf    (R1)   + 3
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
000674 DED0               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R2, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
000676 6E22               M         movwf   T1
                          M         MOVE?BB (R2)  + 1, (T1)   + 1
000678 C01B F023          M         movff   (R2) + 1, (T1) + 1
                          M         MOVE?BB (R2)  + 2, (T1)   + 2
00067C C01C F024          M         movff   (R2) + 2, (T1) + 2
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?BB (R2)  + 3, (T1)   + 3
000680 C01D F025          M         movff   (R2) + 3, (T1) + 3
                      00477         DIV?NCW T1, 0000003FFh, _HP_Duty
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000684 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
000688 C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
00068C C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
000690 C025 F015          M         movff   (T1) + 3, (R0) + 3
                          M         MOVE?CN 0000003FFh, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (0000003FFh)
                          M         movwf   R1
                          M         movlw   high (0000003FFh)
                          M         movwf   (R1)   + 1
                          M         movlw   upper (0000003FFh)
                          M         movwf   (R1)   + 2
                          M         movlw   (0000003FFh) >> 24
                          M         movwf   (R1)   + 3
                          M     else
                          M         MOVE?CB low (0000003FFh), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (0000003FFh)) == 0)
                          M         clrf    R1
                          M     else
                          M       if (low (low (0000003FFh)) == 255)
000694 6816               M         setf    R1
                          M       else
                          M         movlw   low (low (0000003FFh))
                          M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (0000003FFh), (R1) + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (0000003FFh)) == 0)
                          M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (0000003FFh)) == 255)
                          M         setf    (R1) + 1
                          M       else
000696 0E03               M         movlw   low (high (0000003FFh))
000698 6E17               M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M         MOVE?CB upper (0000003FFh), (R1) + 2
                          M         CHK?RP  (R1) + 2
                          M     if ((((R1) + 2) & 8000h) != PREV_ALT)
                          M       if (((R1) + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 2) & 8000h
                          M     endif
                          M     if (((((R1) + 2) & 0fffh) > BANKA_END) & ((((R1) + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 2)
                          M PREV_BANK = high ((R1) + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (0000003FFh)) == 0)
00069A 6A18               M         clrf    (R1) + 2
                          M     else
                          M       if (low (upper (0000003FFh)) == 255)
                          M         setf    (R1) + 2
                          M       else
                          M         movlw   low (upper (0000003FFh))
                          M         movwf   (R1) + 2
                          M       endif
                          M     endif
                          M         MOVE?CB (0000003FFh) >> 24, (R1) + 3
                          M         CHK?RP  (R1) + 3
                          M     if ((((R1) + 3) & 8000h) != PREV_ALT)
                          M       if (((R1) + 3) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 3) & 8000h
                          M     endif
                          M     if (((((R1) + 3) & 0fffh) > BANKA_END) & ((((R1) + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 3)
                          M PREV_BANK = high ((R1) + 3)
                          M       endif
                          M     endif
                          M     if (low ((0000003FFh) >> 24) == 0)
00069C 6A19               M         clrf    (R1) + 3
                          M     else
                          M       if (low ((0000003FFh) >> 24) == 255)
                          M         setf    (R1) + 3
                          M       else
                          M         movlw   low ((0000003FFh) >> 24)
                          M         movwf   (R1) + 3
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  DIVS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    DIVS
                          M     else
                          M       if ((DIVS)  < 1)
                          M         call    DIVS
                          M       else
                          M         if ((DIVS)  > $)
                          M         call    DIVS
                          M         else
                          M           if ((DIVS)  < ($ - 3ffh))
                          M         call    DIVS
                          M           else
00069E DE77               M         rcall   DIVS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Duty
                          M         MOVE?AB _HP_Duty
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
0006A0 6E37               M         movwf   _HP_Duty
                          M         MOVE?BB (R0)  + 1, (_HP_Duty) + 1
0006A2 C013 F038          M         movff   (R0) + 1, (_HP_Duty) + 1
                      00478 
                      00479 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00107       Branch HP_Channel,[GetCH_Done,GetCH_1,GetCH_
                            2,GetCH_3,GetCH_4,GetCH_5]
                      00480         BRANCH?BCL      _HP_Channel, 006h, L00001
  0000                    M     local jmptbl
                          M         MOVE?BA _HP_Channel
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
0006A6 5046               M         movf    _HP_Channel, W
0006A8 6E12               M         movwf   R0
0006AA 0805               M         sublw   (006h) - 1
                          M         BIT?GOTO 0, STATUS, C, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0006AC A0D8               M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
0006AE EF6B F003          M         goto    L00001
                          M           else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
                          M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0006B2 6AFA               M         clrf    PCLATH
0006B4 6AFB               M         clrf    PCLATU
0006B6 3612               M         rlcf    R0, F
0006B8 36FA               M         rlcf    PCLATH, F
0006BA 0ECA               M         movlw   low (jmptbl)
0006BC 2612               M         addwf   R0, F
0006BE 0E06               M         movlw   high (jmptbl)
0006C0 22FA               M         addwfc  PCLATH, F
0006C2 0E00               M         movlw   upper (jmptbl)
0006C4 22FB               M         addwfc  PCLATU, F
0006C6 5012               M         movf    R0, W
0006C8 6EF9               M         movwf   PCL
0006CA                    M jmptbl
                      00481         BRGOTO?L        _GetCH_Done
0006CA D021               M         bra     _GetCH_Done
                      00482         BRGOTO?L        _GetCH_1
0006CC D004               M         bra     _GetCH_1
                      00483         BRGOTO?L        _GetCH_2
0006CE D009               M         bra     _GetCH_2
                      00484         BRGOTO?L        _GetCH_3
0006D0 D00E               M         bra     _GetCH_3
                      00485         BRGOTO?L        _GetCH_4
0006D2 D013               M         bra     _GetCH_4
                      00486         BRGOTO?L        _GetCH_5
0006D4 D018               M         bra     _GetCH_5
                      00487 
                      00488         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
0006D6                    M L00001
                          M     endif
                      00489 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00490 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00109       GetCH_1:
                      00491 
                      00492         LABEL?L _GetCH_1        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_1
                          M         XALL
                          M     else
0006D6                    M _GetCH_1
                          M     endif
                      00493 
                      00494 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00110               ASM
                      00495 
                      00496         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00497 
                      00498               ifdef CCP1CON  
                      00499                 MOVE?BB  CCPR1L,  _HP_Temp
0006D6 CFBE F03B          M         movff   CCPR1L, _HP_Temp
                      00500                 MOVE?BB  CCP1CON, _HP_Temp + 1
0006DA CFBD F03C          M         movff   CCP1CON, _HP_Temp + 1
0006DE EF87 F003      00501                 goto _GetCH_Done        
                      00502               endif  
                      00503             
                      00504 
                      00505         ENDASM?
                      00506 
                      00507 
                      00508 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00117       GetCH_2:  
                      00509 
                      00510         LABEL?L _GetCH_2        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_2
                          M         XALL
                          M     else
0006E2                    M _GetCH_2
                          M     endif
                      00511 
                      00512 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00118               ASM
                      00513 
                      00514         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00515 
                      00516               ifdef CCP2CON  
                      00517                 MOVE?BB  CCPR2L,  _HP_Temp
0006E2 CF67 F03B          M         movff   CCPR2L, _HP_Temp
                      00518                 MOVE?BB  CCP2CON, _HP_Temp + 1
0006E6 CF66 F03C          M         movff   CCP2CON, _HP_Temp + 1
0006EA EF87 F003      00519                 goto _GetCH_Done        
                      00520               endif  
                      00521             
                      00522 
                      00523         ENDASM?
                      00524 
                      00525 
                      00526 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00125       GetCH_3:  
                      00527 
                      00528         LABEL?L _GetCH_3        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_3
                          M         XALL
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
0006EE                    M _GetCH_3
                          M     endif
                      00529 
                      00530 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00126               ASM
                      00531 
                      00532         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00533 
                      00534               ifdef CCP3CON  
                      00535                 MOVE?BB  CCPR3L,  _HP_Temp
0006EE CF5E F03B          M         movff   CCPR3L, _HP_Temp
                      00536                 MOVE?BB  CCP3CON, _HP_Temp + 1
0006F2 CF5D F03C          M         movff   CCP3CON, _HP_Temp + 1
0006F6 EF87 F003      00537                 goto _GetCH_Done        
                      00538               endif  
                      00539             
                      00540 
                      00541         ENDASM?
                      00542 
                      00543 
                      00544 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00133       GetCH_4:  
                      00545 
                      00546         LABEL?L _GetCH_4        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_4
                          M         XALL
                          M     else
0006FA                    M _GetCH_4
                          M     endif
                      00547 
                      00548 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00134               ASM
                      00549 
                      00550         ASM?
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00551 
                      00552               ifdef CCP4CON  
                      00553                 MOVE?BB  CCPR4L,  _HP_Temp
0006FA CF58 F03B          M         movff   CCPR4L, _HP_Temp
                      00554                 MOVE?BB  CCP4CON, _HP_Temp + 1
0006FE CF57 F03C          M         movff   CCP4CON, _HP_Temp + 1
000702 EF87 F003      00555                 goto _GetCH_Done        
                      00556               endif  
                      00557             
                      00558 
                      00559         ENDASM?
                      00560 
                      00561 
                      00562 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00141       GetCH_5:  
                      00563 
                      00564         LABEL?L _GetCH_5        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_5
                          M         XALL
                          M     else
000706                    M _GetCH_5
                          M     endif
                      00565 
                      00566 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00142               ASM
                      00567 
                      00568         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00569 
                      00570               ifdef CCP5CON  
                      00571                 MOVE?BB  CCPR5L,  _HP_Temp
000706 CF55 F03B          M         movff   CCPR5L, _HP_Temp
                      00572                 MOVE?BB  CCP5CON, _HP_Temp + 1
00070A CF54 F03C          M         movff   CCP5CON, _HP_Temp + 1
                      00573               endif  
                      00574             
                      00575 
                      00576         ENDASM?
                      00577 
                      00578 
                      00579 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00149   GetCH_Done:
                      00580 
                      00581         LABEL?L _GetCH_Done     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _GetCH_Done
                          M         XALL
                          M     else
00070E                    M _GetCH_Done
                          M     endif
                      00582 
                      00583 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00150       HP_Temp = (HP_Temp.lowbyte << 2) | ((HP_Temp
                            .highbyte & %110000) >> 4)
                      00584         SHIFTL?BCN      _HP_Temp??LOWBYTE, 002h, T1
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M         CHK?RP  _HP_Temp??LOWBYTE
                          M         rlcf    _HP_Temp??LOWBYTE, W
                          M         MOVE?AN T1
                          M         rlcf    (T1)   + 1, F
                          M     else
                          M         MOVE?BN _HP_Temp??LOWBYTE, R0
                          M         MOVE?BB _HP_Temp??LOWBYTE, R0
00070E C03B F012          M         movff   _HP_Temp??LOWBYTE, R0
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000712 6A13               M         clrf    (R0)   + 1
000714 6A14               M         clrf    (R0)   + 2
000716 6A15               M         clrf    (R0)   + 3
000718 0E02               M         movlw   002h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
                          M         call    SHIFTL
                          M           else
00071A DE00               M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00071C 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
00071E C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
000722 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
000726 C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      00585         AND?BCN _HP_Temp??HIGHBYTE, 030h, T2
00072A 0E30               M         movlw   030h
                          M         CHK?RP  _HP_Temp??HIGHBYTE
                          M     if (((_HP_Temp??HIGHBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??HIGHBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??HIGHBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??HIGHBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??HIGHBYTE) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if (((_HP_Temp??HIGHBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??HIGHBYTE)
                          M PREV_BANK = high (_HP_Temp??HIGHBYTE)
                          M       endif
                          M     endif
00072C 143C               M         andwf   _HP_Temp??HIGHBYTE, W
                          M         MOVE?AN T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00072E 6E26               M         movwf   T2
000730 6A27               M         clrf    (T2)   + 1
000732 6A28               M         clrf    (T2)   + 2
000734 6A29               M         clrf    (T2)   + 3
                      00586         SHIFTR?NCN      T2, 004h, T2
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((T2)   == (T2))
                          M         CHK?RP  T2
                          M         rrcf    (T2)   + 3, F
                          M         rrcf    (T2)   + 2, F
                          M         rrcf    (T2)   + 1, F
                          M         rrcf    T2,   F
                          M       else
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 3, W
                          M         MOVE?AB (T2)   + 3
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 2, W
                          M         MOVE?AB (T2)   + 2
                          M         CHK?RP  T2
                          M         rrcf    (T2)  + 1, W
                          M         MOVE?AB (T2)   + 1
                          M         CHK?RP  T2
                          M         rrcf    T2,  W
                          M         MOVE?AB T2
                          M       endif
                          M     else
                          M         MOVE?NN T2,  R0
                          M         MOVE?BB T2,  R0
000736 C026 F012          M         movff   T2,  R0
                          M         MOVE?BB (T2)  + 1, (R0)   + 1
00073A C027 F013          M         movff   (T2) + 1, (R0) + 1
                          M         MOVE?BB (T2)  + 2, (R0)   + 2
00073E C028 F014          M         movff   (T2) + 2, (R0) + 2
                          M         MOVE?BB (T2)  + 3, (R0)   + 3
000742 C029 F015          M         movff   (T2) + 3, (R0) + 3
000746 0E04               M         movlw   004h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
000748 EC98 F001          M         call    SHIFTR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T2
                          M         MOVE?AB T2
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00074C 6E26               M         movwf   T2
                          M         MOVE?BB (R0)  + 1, (T2)   + 1
00074E C013 F027          M         movff   (R0) + 1, (T2) + 1
                          M         MOVE?BB (R0)  + 2, (T2)   + 2
000752 C014 F028          M         movff   (R0) + 2, (T2) + 2
                          M         MOVE?BB (R0)  + 3, (T2)   + 3
000756 C015 F029          M         movff   (R0) + 3, (T2) + 3
                          M     endif
                      00587         OR?NNW  T1, T2, _HP_Temp
                          M         MOVE?BA T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00075A 5022               M         movf    T1,  W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
00075C 1026               M         iorwf   T2,   W
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
00075E 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BA T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) & 8000h) != PREV_ALT)
                          M       if ((T1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1 + 1) & 8000h
                          M     endif
                          M     if ((((T1 + 1) & 0fffh) > BANKA_END) & (((T1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
000760 5023               M         movf    T1 + 1, W
                          M         CHK?RP  T2
                          M     if (((T2)    & 8000h) != PREV_ALT)
                          M       if ((T2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (T2)    & 8000h
                          M     endif
                          M     if ((((T2)    & 0fffh) > BANKA_END) & (((T2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2)
                          M PREV_BANK = high (T2)
                          M       endif
                          M     endif
000762 1027               M         iorwf   T2   + 1, W
                          M         MOVE?AB _HP_Temp + 1
                          M         CHK?RP  _HP_Temp + 1
                          M     if (((_HP_Temp + 1) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp + 1) & 8000h
                          M     endif
                          M     if ((((_HP_Temp + 1) & 0fffh) > BANKA_END) & (((_HP_Temp + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp + 1)
                          M PREV_BANK = high (_HP_Temp + 1)
                          M       endif
                          M     endif
000764 6E3C               M         movwf   _HP_Temp + 1
                      00588 
                      00589 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00154       if HP_Temp <> HP_Duty then  ; if DutyCycle C
                            hanged
                      00590         CMPEQ?WWL       _HP_Temp, _HP_Duty, L00023
                          M         MOVE?WW _HP_Temp, R0
                          M         MOVE?BB _HP_Temp, R0
000766 C03B F012          M         movff   _HP_Temp, R0
                          M         MOVE?BB (_HP_Temp) + 1, (R0) + 1
00076A C03C F013          M         movff   (_HP_Temp) + 1, (R0) + 1
                          M         MOVE?WWA _HP_Duty, R1
                          M         MOVE?BB (_HP_Duty) + 1, (R1) + 1
00076E C038 F017          M         movff   (_HP_Duty) + 1, (R1) + 1
                          M         MOVE?BA _HP_Duty
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000772 5037               M         movf    _HP_Duty, W
                          M         L?CALL  CMPEQW
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPEQW
                          M     else
                          M       if ((CMPEQW) < 1)
                          M         call    CMPEQW
                          M       else
                          M         if ((CMPEQW) > $)
                          M         call    CMPEQW
                          M         else
                          M           if ((CMPEQW) < ($ - 3ffh))
000774 EC9D F001          M         call    CMPEQW
                          M           else
                          M         rcall   CMPEQW
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00023
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00023))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((L00023) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00023
                          M             else
                          M         bov     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000778 A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00023
                          M       else
                          M         if ((L00023) < 1)
                          M         goto    L00023
                          M         else
                          M           if ((L00023) > $)
00077A EF24 F004          M         goto    L00023
                          M           else
                          M             if ((L00023) < ($ - 3ffh))
                          M         goto    L00023
                          M             else
                          M         bra     L00023
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00591 
                      00592 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00156           HP_Temp = HP_Duty >> 2        ; for CCP?
                            CON
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00593         SHIFTR?WCW      _HP_Duty, 002h, _HP_Temp
                          M     if ((002h) == 1)
                          M         bcf     STATUS, C
                          M       if ((_HP_Temp) == (_HP_Duty))
                          M         CHK?RP  _HP_Temp
                          M         rrcf    _HP_Temp + 1, F
                          M         rrcf    _HP_Temp, F
                          M       else
                          M         CHK?RP  _HP_Duty
                          M         rrcf    (_HP_Duty) + 1, W
                          M         MOVE?AB (_HP_Temp) + 1
                          M         CHK?RP  _HP_Duty
                          M         rrcf    _HP_Duty, W
                          M         MOVE?AB _HP_Temp
                          M       endif
                          M     else
                          M         MOVE?WN _HP_Duty, R0
                          M         MOVE?BB _HP_Duty, R0
00077E C037 F012          M         movff   _HP_Duty, R0
                          M         MOVE?BB (_HP_Duty) + 1, (R0) + 1
000782 C038 F013          M         movff   (_HP_Duty) + 1, (R0) + 1
                          M         CHK?RP  R0
                          M     if (((R0)    & 8000h) != PREV_ALT)
                          M       if ((R0)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R0)    & 8000h
                          M     endif
                          M     if ((((R0)    & 0fffh) > BANKA_END) & (((R0)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R0)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R0)
                          M PREV_BANK = high (R0)
                          M       endif
                          M     endif
000786 6A14               M         clrf    (R0)   + 2
000788 6A15               M         clrf    (R0)   + 3
00078A 0E02               M         movlw   002h
                          M         L?CALL  SHIFTR
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTR
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((SHIFTR) < 1)
                          M         call    SHIFTR
                          M       else
                          M         if ((SHIFTR) > $)
                          M         call    SHIFTR
                          M         else
                          M           if ((SHIFTR) < ($ - 3ffh))
00078C EC98 F001          M         call    SHIFTR
                          M           else
                          M         rcall   SHIFTR
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AWW R0, _HP_Temp
                          M         MOVE?AB _HP_Temp
                          M         CHK?RP  _HP_Temp
                          M     if (((_HP_Temp) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp) & 8000h
                          M     endif
                          M     if ((((_HP_Temp) & 0fffh) > BANKA_END) & (((_HP_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp)
                          M PREV_BANK = high (_HP_Temp)
                          M       endif
                          M     endif
000790 6E3B               M         movwf   _HP_Temp
                          M         MOVE?BB (R0)  + 1, (_HP_Temp) + 1
000792 C013 F03C          M         movff   (R0) + 1, (_HP_Temp) + 1
                          M     endif
                      00594 
                      00595 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00157           HP_Temp.highbyte =  %1100 | ((HP_Duty & 
                            %11) << 4)
                      00596         AND?WCN _HP_Duty, 003h, T1
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000796 0E03               M         movlw   low (003h)
000798 1437               M         andwf   _HP_Duty, W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00079A 6E22               M         movwf   T1
00079C 0E00               M         movlw   (003h) >> 8
                          M         CHK?RP  _HP_Duty
                          M     if (((_HP_Duty) & 8000h) != PREV_ALT)
                          M       if ((_HP_Duty) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Duty) & 8000h
                          M     endif
                          M     if ((((_HP_Duty) & 0fffh) > BANKA_END) & (((_HP_Duty) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Duty) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Duty)
                          M PREV_BANK = high (_HP_Duty)
                          M       endif
                          M     endif
00079E 1438               M         andwf   _HP_Duty + 1, W
                          M         MOVE?AB T1   + 1
                          M         CHK?RP  T1 + 1
                          M     if (((T1 + 1) & 8000h) != PREV_ALT)
                          M       if ((T1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1 + 1) & 8000h
                          M     endif
                          M     if ((((T1 + 1) & 0fffh) > BANKA_END) & (((T1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1 + 1)
                          M PREV_BANK = high (T1 + 1)
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007A0 6E23               M         movwf   T1 + 1
0007A2 6A24               M         clrf    T1   + 2
0007A4 6A25               M         clrf    T1   + 3
                      00597         SHIFTL?NCN      T1, 004h, T1
                          M     if ((004h) == 1)
                          M         bcf     STATUS, C
                          M       if ((T1)   == (T1))
                          M         CHK?RP  T1
                          M         rlcf    T1,   F
                          M         rlcf    (T1)   + 1, F
                          M         rlcf    (T1)   + 2, F
                          M         rlcf    (T1)   + 3, F
                          M       else
                          M         CHK?RP  T1
                          M         rlcf    T1,  W
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 1, W
                          M         MOVE?AB (T1)   + 1
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M         CHK?RP  T1
                          M         rlcf    (T1)  + 2, W
                          M         MOVE?AB (T1)   + 2
                          M       endif
                          M     else
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
0007A6 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
0007AA C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
0007AE C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
0007B2 C025 F015          M         movff   (T1) + 3, (R0) + 3
0007B6 0E04               M         movlw   004h
                          M         L?CALL  SHIFTL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SHIFTL
                          M     else
                          M       if ((SHIFTL) < 1)
                          M         call    SHIFTL
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((SHIFTL) > $)
                          M         call    SHIFTL
                          M         else
                          M           if ((SHIFTL) < ($ - 3ffh))
0007B8 EC8E F001          M         call    SHIFTL
                          M           else
                          M         rcall   SHIFTL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?ANN R0, T1
                          M         MOVE?AB T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
0007BC 6E22               M         movwf   T1
                          M         MOVE?BB (R0)  + 1, (T1)   + 1
0007BE C013 F023          M         movff   (R0) + 1, (T1) + 1
                          M         MOVE?BB (R0)  + 2, (T1)   + 2
0007C2 C014 F024          M         movff   (R0) + 2, (T1) + 2
                          M         MOVE?BB (R0)  + 3, (T1)   + 3
0007C6 C015 F025          M         movff   (R0) + 3, (T1) + 3
                          M     endif
                      00598         OR?CNB  00Ch, T1, _HP_Temp??HIGHBYTE
0007CA 0E0C               M         movlw   00Ch
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0007CC 1022               M         iorwf   T1,  W
                          M         MOVE?AB _HP_Temp??HIGHBYTE
                          M         CHK?RP  _HP_Temp??HIGHBYTE
                          M     if (((_HP_Temp??HIGHBYTE) & 8000h) != PREV_ALT)
                          M       if ((_HP_Temp??HIGHBYTE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Temp??HIGHBYTE) & 8000h
                          M     endif
                          M     if ((((_HP_Temp??HIGHBYTE) & 0fffh) > BANKA_END) & (((_HP_Temp??HIGHBYTE) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if (((_HP_Temp??HIGHBYTE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Temp??HIGHBYTE)
                          M PREV_BANK = high (_HP_Temp??HIGHBYTE)
                          M       endif
                          M     endif
0007CE 6E3C               M         movwf   _HP_Temp??HIGHBYTE
                      00599 
                      00600 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00159           if TMR2ON then              ; if Timer2 
                            is running
                      00601         CMPF?TL _TMR2ON, L00025
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, T2CON, 002h,  L00025
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00025))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  T2CON
                          M       if ((0)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         btfsc   STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00025
                          M             else
                          M         bov     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0007D0 A4BA               M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00025
                          M       else
                          M         if ((L00025) < 1)
                          M         goto    L00025
                          M         else
                          M           if ((L00025) > $)
0007D2 EFF0 F003          M         goto    L00025
                          M           else
                          M             if ((L00025) < ($ - 3ffh))
                          M         goto    L00025
                          M             else
                          M         bra     L00025
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00602 
                      00603 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00160               TMR2IF = 0
                      00604         MOVE?CT 000h, _TMR2IF
                          M         CHK?RP  PIR1
                          M     if (((PIR1)  & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((PIR1)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PIR1)  & 8000h
                          M     endif
                          M     if ((((PIR1)  & 0fffh) > BANKA_END) & (((PIR1)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PIR1)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PIR1)
                          M PREV_BANK = high (PIR1)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PIR1,   001h
                          M     else
0007D6 929E               M         bcf     PIR1,   001h
                          M     endif
                      00605 
                      00606 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00161               while TMR2IF = 0 : wend ; let curren
                            t cycle complete
                      00607         LABEL?L L00027  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00027
                          M         XALL
                          M     else
0007D8                    M L00027
                          M     endif
                      00608         CMPNE?TCL       _TMR2IF, 000h, L00028
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PIR1,  001h,  L00028
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00028))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((PIR1)  > BANKA_END) & ((PIR1)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PIR1
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
                          M         btfsc   PIR1,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M       else
                          M         if ((L00028) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M         else
                          M           if ((L00028) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M           else
                          M             if ((L00028) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00028
                          M             else
                          M         bov     L00028
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
0007D8 B29E               M         btfsc   PIR1,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00028
                          M       else
                          M         if ((L00028) < 1)
                          M         goto    L00028
                          M         else
                          M           if ((L00028) > $)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007DA EFF0 F003          M         goto    L00028
                          M           else
                          M             if ((L00028) < ($ - 3ffh))
                          M         goto    L00028
                          M             else
                          M         bra     L00028
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
                          M         BIT?GOTO 0, PIR1,  001h,  L00028
                          M       else
                          M         L?GOTO  L00028
                          M       endif
                          M     endif
                      00609 
                      00610 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00161               while TMR2IF = 0 : wend ; let curren
                            t cycle complete
                      00611         GOTO?L  L00027
                          M         L?GOTO  L00027
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00027))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00027
                          M     else
                          M       if ((L00027) < 1)
                          M         goto    L00027
                          M       else
                          M         if ((L00027) > $)
                          M         goto    L00027
                          M         else
                          M           if ((L00027) < ($ - 3ffh))
                          M         goto    L00027
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
0007DE D7FC               M         bra     L00027
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00612         LABEL?L L00028  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00028
                          M         XALL
                          M     else
0007E0                    M L00028
                          M     endif
                      00613 
                      00614 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00162           endif
                      00615         LABEL?L L00025  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00025
                          M         XALL
                          M     else
0007E0                    M L00025
                          M     endif
                      00616 
                      00617 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00164           Branch HP_Channel,[PutCH_Done,PutCH_1,Pu
                            tCH_2,PutCH_3,PutCH_4,PutCH_5]
                      00618         BRANCH?BCL      _HP_Channel, 006h, L00002
  0000                    M     local jmptbl
                          M         MOVE?BA _HP_Channel
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
0007E0 5046               M         movf    _HP_Channel, W
0007E2 6E12               M         movwf   R0
0007E4 0805               M         sublw   (006h) - 1
                          M         BIT?GOTO 0, STATUS, C, L00002
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00002))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M       else
                          M         if ((L00002) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M         else
                          M           if ((L00002) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M           else
                          M             if ((L00002) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00002
                          M             else
                          M         bov     L00002
                          M             endif
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0007E6 A0D8               M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00002
                          M       else
                          M         if ((L00002) < 1)
                          M         goto    L00002
                          M         else
                          M           if ((L00002) > $)
0007E8 EF08 F004          M         goto    L00002
                          M           else
                          M             if ((L00002) < ($ - 3ffh))
                          M         goto    L00002
                          M             else
                          M         bra     L00002
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0007EC 6AFA               M         clrf    PCLATH
0007EE 6AFB               M         clrf    PCLATU
0007F0 3612               M         rlcf    R0, F
0007F2 36FA               M         rlcf    PCLATH, F
0007F4 0E04               M         movlw   low (jmptbl)
0007F6 2612               M         addwf   R0, F
0007F8 0E08               M         movlw   high (jmptbl)
0007FA 22FA               M         addwfc  PCLATH, F
0007FC 0E00               M         movlw   upper (jmptbl)
0007FE 22FB               M         addwfc  PCLATU, F
000800 5012               M         movf    R0, W
000802 6EF9               M         movwf   PCL
000804                    M jmptbl
                      00619         BRGOTO?L        _PutCH_Done
000804 D021               M         bra     _PutCH_Done
                      00620         BRGOTO?L        _PutCH_1
000806 D004               M         bra     _PutCH_1
                      00621         BRGOTO?L        _PutCH_2
000808 D009               M         bra     _PutCH_2
                      00622         BRGOTO?L        _PutCH_3
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00080A D00E               M         bra     _PutCH_3
                      00623         BRGOTO?L        _PutCH_4
00080C D013               M         bra     _PutCH_4
                      00624         BRGOTO?L        _PutCH_5
00080E D018               M         bra     _PutCH_5
                      00625 
                      00626         LABEL?L L00002  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00002
                          M         XALL
                          M     else
000810                    M L00002
                          M     endif
                      00627 
                      00628 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00166           PutCH_1:  
                      00629 
                      00630         LABEL?L _PutCH_1        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_1
                          M         XALL
                          M     else
000810                    M _PutCH_1
                          M     endif
                      00631 
                      00632 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00167                   ASM
                      00633 
                      00634         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00635 
                      00636                   ifdef CCP1CON
                      00637                     MOVE?BB  _HP_Temp, CCPR1L
000810 C03B FFBE          M         movff   _HP_Temp, CCPR1L
                      00638                     MOVE?BB  _HP_Temp + 1, CCP1CON
000814 C03C FFBD          M         movff   _HP_Temp + 1, CCP1CON
000818 EF24 F004      00639                     goto _PutCH_Done
                      00640                   endif  
                      00641                 
                      00642 
                      00643         ENDASM?
                      00644 
                      00645 
                      00646 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00174           PutCH_2:  
                      00647 
                      00648         LABEL?L _PutCH_2        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_2
                          M         XALL
                          M     else
00081C                    M _PutCH_2
                          M     endif
                      00649 
                      00650 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00175                   ASM
                      00651 
                      00652         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00653 
                      00654                   ifdef CCP2CON  
                      00655                     MOVE?BB  _HP_Temp, CCPR2L
00081C C03B FF67          M         movff   _HP_Temp, CCPR2L
                      00656                     MOVE?BB  _HP_Temp + 1, CCP2CON
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000820 C03C FF66          M         movff   _HP_Temp + 1, CCP2CON
000824 EF24 F004      00657                     goto _PutCH_Done
                      00658                   endif  
                      00659                 
                      00660 
                      00661         ENDASM?
                      00662 
                      00663 
                      00664 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00182           PutCH_3:  
                      00665 
                      00666         LABEL?L _PutCH_3        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_3
                          M         XALL
                          M     else
000828                    M _PutCH_3
                          M     endif
                      00667 
                      00668 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00183                   ASM
                      00669 
                      00670         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00671 
                      00672                   ifdef CCP3CON  
                      00673                     MOVE?BB  _HP_Temp, CCPR3L
000828 C03B FF5E          M         movff   _HP_Temp, CCPR3L
                      00674                     MOVE?BB  _HP_Temp + 1, CCP3CON
00082C C03C FF5D          M         movff   _HP_Temp + 1, CCP3CON
000830 EF24 F004      00675                     goto _PutCH_Done
                      00676                   endif  
                      00677                 
                      00678 
                      00679         ENDASM?
                      00680 
                      00681 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00682 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00190           PutCH_4:  
                      00683 
                      00684         LABEL?L _PutCH_4        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_4
                          M         XALL
                          M     else
000834                    M _PutCH_4
                          M     endif
                      00685 
                      00686 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00191                   ASM
                      00687 
                      00688         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00689 
                      00690                   ifdef CCP4CON  
                      00691                     MOVE?BB  _HP_Temp, CCPR4L
000834 C03B FF58          M         movff   _HP_Temp, CCPR4L
                      00692                     MOVE?BB  _HP_Temp + 1, CCP4CON
000838 C03C FF57          M         movff   _HP_Temp + 1, CCP4CON
00083C EF24 F004      00693                     goto _PutCH_Done
                      00694                   endif  
                      00695                 
                      00696 
                      00697         ENDASM?
                      00698 
                      00699 
                      00700 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00198           PutCH_5:
                      00701 
                      00702         LABEL?L _PutCH_5        
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_5
                          M         XALL
                          M     else
000840                    M _PutCH_5
                          M     endif
                      00703 
                      00704 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00199                   ASM
                      00705 
                      00706         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00707 
                      00708                   ifdef CCP5CON  
                      00709                     MOVE?BB  _HP_Temp, CCPR5L
000840 C03B FF55          M         movff   _HP_Temp, CCPR5L
                      00710                     MOVE?BB  _HP_Temp + 1, CCP5CON
000844 C03C FF54          M         movff   _HP_Temp + 1, CCP5CON
                      00711                   endif  
                      00712                 
                      00713 
                      00714         ENDASM?
                      00715 
                      00716 
                      00717 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00206       PutCH_Done:
                      00718 
                      00719         LABEL?L _PutCH_Done     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _PutCH_Done
                          M         XALL
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000848                    M _PutCH_Done
                          M     endif
                      00720 
                      00721 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00207       endif
                      00722         LABEL?L L00023  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00023
                          M         XALL
                          M     else
000848                    M L00023
                          M     endif
                      00723 
                      00724 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00211       if TMR2ON = 0 then TMR2ON = 1     ; Start Ti
                            mer2 if not already running
                      00725         CMPNE?TCL       _TMR2ON, 000h, L00029
                          M     if ((000h) == 0)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, T2CON, 002h,  L00029
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00029))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((T2CON) > BANKA_END) & ((T2CON) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  T2CON
                          M       if ((1)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
                          M         btfsc   T2CON, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if ((L00029) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00029
                          M             else
                          M         bov     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   T2CON, 002h
                          M       else
000848 B4BA               M         btfsc   T2CON, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00029
                          M       else
                          M         if ((L00029) < 1)
                          M         goto    L00029
                          M         else
                          M           if ((L00029) > $)
00084A EF28 F004          M         goto    L00029
                          M           else
                          M             if ((L00029) < ($ - 3ffh))
                          M         goto    L00029
                          M             else
                          M         bra     L00029
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if ((000h) == 1)
                          M         CLRWDT?
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         BIT?GOTO 0, T2CON, 002h,  L00029
                          M       else
                          M         L?GOTO  L00029
                          M       endif
                          M     endif
                      00726         MOVE?CT 001h, _TMR2ON
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00084E 84BA               M         bsf     T2CON,  002h
                          M     else
                          M         bcf     T2CON,  002h
                          M     endif
                      00727         LABEL?L L00029  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00029
                          M         XALL
                          M     else
000850                    M L00029
                          M     endif
                      00728 
                      00729 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00213       if (PSchanged | PR2changed) = 1 then
                      00730         OR?TTN  _PSchanged, _PR2changed, T1
000850 6AE8               M         clrf    WREG
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
000852 B447               M         btfsc   _HP_Flags, 002h
000854 0F01               M         addlw   1
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
000856 B647               M         btfsc   _HP_Flags, 003h
000858 0901               M         iorlw   1
                          M         MOVE?AN T1
                          M         CHK?RP  T1
                          M     if (((T1)    & 8000h) != PREV_ALT)
                          M       if ((T1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1)    & 8000h
                          M     endif
                          M     if ((((T1)    & 0fffh) > BANKA_END) & (((T1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1)
                          M PREV_BANK = high (T1)
                          M       endif
                          M     endif
00085A 6E22               M         movwf   T1
00085C 6A23               M         clrf    (T1)   + 1
00085E 6A24               M         clrf    (T1)   + 2
000860 6A25               M         clrf    (T1)   + 3
                      00731         CMPNE?NCL       T1, 001h, L00031
                          M         MOVE?NN T1,  R0
                          M         MOVE?BB T1,  R0
000862 C022 F012          M         movff   T1,  R0
                          M         MOVE?BB (T1)  + 1, (R0)   + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000866 C023 F013          M         movff   (T1) + 1, (R0) + 1
                          M         MOVE?BB (T1)  + 2, (R0)   + 2
00086A C024 F014          M         movff   (T1) + 2, (R0) + 2
                          M         MOVE?BB (T1)  + 3, (R0)   + 3
00086E C025 F015          M         movff   (T1) + 3, (R0) + 3
                          M         MOVE?CB (001h) >> 24, R1 + 3
                          M         CHK?RP  R1 + 3
                          M     if (((R1 + 3) & 8000h) != PREV_ALT)
                          M       if ((R1 + 3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 3) & 8000h
                          M     endif
                          M     if ((((R1 + 3) & 0fffh) > BANKA_END) & (((R1 + 3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 3)
                          M PREV_BANK = high (R1 + 3)
                          M       endif
                          M     endif
                          M     if (low ((001h) >> 24) == 0)
000872 6A19               M         clrf    R1 + 3
                          M     else
                          M       if (low ((001h) >> 24) == 255)
                          M         setf    R1 + 3
                          M       else
                          M         movlw   low ((001h) >> 24)
                          M         movwf   R1 + 3
                          M       endif
                          M     endif
                          M         MOVE?CB upper (001h), R1 + 2
                          M         CHK?RP  R1 + 2
                          M     if (((R1 + 2) & 8000h) != PREV_ALT)
                          M       if ((R1 + 2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 2) & 8000h
                          M     endif
                          M     if ((((R1 + 2) & 0fffh) > BANKA_END) & (((R1 + 2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 2)
                          M PREV_BANK = high (R1 + 2)
                          M       endif
                          M     endif
                          M     if (low (upper (001h)) == 0)
000874 6A18               M         clrf    R1 + 2
                          M     else
                          M       if (low (upper (001h)) == 255)
                          M         setf    R1 + 2
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   low (upper (001h))
                          M         movwf   R1 + 2
                          M       endif
                          M     endif
                          M         MOVE?CB high (001h), R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low (high (001h)) == 0)
000876 6A17               M         clrf    R1 + 1
                          M     else
                          M       if (low (high (001h)) == 255)
                          M         setf    R1 + 1
                          M       else
                          M         movlw   low (high (001h))
                          M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (001h)
000878 0E01               M         movlw   low (low (001h))
                          M         L?CALL  CMPNE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    CMPNE
                          M     else
                          M       if ((CMPNE) < 1)
                          M         call    CMPNE
                          M       else
                          M         if ((CMPNE) > $)
                          M         call    CMPNE
                          M         else
                          M           if ((CMPNE) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00087A ECA6 F001          M         call    CMPNE
                          M           else
                          M         rcall   CMPNE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, STATUS, Z, L00031
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00031))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00031
                          M             else
                          M         bov     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00087E A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00031
                          M       else
                          M         if ((L00031) < 1)
                          M         goto    L00031
                          M         else
                          M           if ((L00031) > $)
000880 EF59 F004          M         goto    L00031
                          M           else
                          M             if ((L00031) < ($ - 3ffh))
                          M         goto    L00031
                          M             else
                          M         bra     L00031
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00732 
                      00733 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00214           TMR2IF = 0
                      00734         MOVE?CT 000h, _TMR2IF
                          M         CHK?RP  PIR1
                          M     if (((PIR1)  & 8000h) != PREV_ALT)
                          M       if ((PIR1)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PIR1)  & 8000h
                          M     endif
                          M     if ((((PIR1)  & 0fffh) > BANKA_END) & (((PIR1)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PIR1)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PIR1)
                          M PREV_BANK = high (PIR1)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PIR1,   001h
                          M     else
000884 929E               M         bcf     PIR1,   001h
                          M     endif
                      00735 
                      00736 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00215           while !TMR2IF : wend          ; let curr
                            ent cycle complete
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00737         LABEL?L L00033  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00033
                          M         XALL
                          M     else
000886                    M L00033
                          M     endif
                      00738         CMPT?TL _TMR2IF, L00034
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PIR1,  001h,  L00034
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00034))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PIR1)  > BANKA_END) & ((PIR1)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PIR1
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
                          M         btfsc   PIR1,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M       else
                          M         if ((L00034) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M         else
                          M           if ((L00034) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M           else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if ((L00034) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00034
                          M             else
                          M         bov     L00034
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PIR1,  001h
                          M       else
000886 B29E               M         btfsc   PIR1,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00034
                          M       else
                          M         if ((L00034) < 1)
                          M         goto    L00034
                          M         else
                          M           if ((L00034) > $)
000888 EF47 F004          M         goto    L00034
                          M           else
                          M             if ((L00034) < ($ - 3ffh))
                          M         goto    L00034
                          M             else
                          M         bra     L00034
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00739 
                      00740 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00215           while !TMR2IF : wend          ; let curr
                            ent cycle complete
                      00741         GOTO?L  L00033
                          M         L?GOTO  L00033
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00033))
                          M         CLRWDT?
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00033
                          M     else
                          M       if ((L00033) < 1)
                          M         goto    L00033
                          M       else
                          M         if ((L00033) > $)
                          M         goto    L00033
                          M         else
                          M           if ((L00033) < ($ - 3ffh))
                          M         goto    L00033
                          M           else
00088C D7FC               M         bra     L00033
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00742         LABEL?L L00034  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00034
                          M         XALL
                          M     else
00088E                    M L00034
                          M     endif
                      00743 
                      00744 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00217           if PSchanged then             ; set T2 p
                            rescaler
                      00745         CMPF?TL _PSchanged, L00035
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 002h, L00035
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00035))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 002h
                          M       else
                          M         btfsc   _HP_Flags, 002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00035
                          M             else
                          M         bov     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
00088E A447               M         btfss   _HP_Flags, 002h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   _HP_Flags, 002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00035
                          M       else
                          M         if ((L00035) < 1)
                          M         goto    L00035
                          M         else
                          M           if ((L00035) > $)
000890 EF53 F004          M         goto    L00035
                          M           else
                          M             if ((L00035) < ($ - 3ffh))
                          M         goto    L00035
                          M             else
                          M         bra     L00035
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00746 
                      00747 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00218               PSchanged = 0
                      00748         MOVE?CT 000h, _PSchanged
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 002h
                          M     else
000894 9447               M         bcf     _HP_Flags, 002h
                          M     endif
                      00749 
                      00750 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00219               T2CKPS0 = PS0
                      00751         MOVE?TT _PS0, _T2CKPS0
                          M     if (((_HP_Flags) <= BANKA_END) | ((_HP_Flags) >= (0f01h + BANKA_END)))
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
000896 B047               M         btfsc   _HP_Flags, 000h
000898 80BA               M         bsf     T2CON,  000h
00089A A047               M         btfss   _HP_Flags, 000h
00089C 90BA               M         bcf     T2CON,  000h
                          M     else
                          M       if (((_HP_Flags) & 0f00h) == ((T2CON) & 0f00h))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 000h
                          M         bsf     T2CON,  000h
                          M         btfss   _HP_Flags, 000h
                          M         bcf     T2CON,  000h
                          M       else
                          M           if (((T2CON)  <= BANKA_END) | ((T2CON)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 000h
                          M         bsf     T2CON,  000h
                          M         btfss   _HP_Flags, 000h
                          M         bcf     T2CON,  000h
                          M           else
                          M         MOVE?TA _HP_Flags, 000h
                          M         MOVE?AT T2CON,  000h
                          M           endif
                          M       endif
                          M     endif
                      00752 
                      00753 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00220               T2CKPS1 = PS1
                      00754         MOVE?TT _PS1, _T2CKPS1
                          M     if (((_HP_Flags) <= BANKA_END) | ((_HP_Flags) >= (0f01h + BANKA_END)))
                          M         CHK?RP  T2CON
                          M     if (((T2CON) & 8000h) != PREV_ALT)
                          M       if ((T2CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T2CON) & 8000h
                          M     endif
                          M     if ((((T2CON) & 0fffh) > BANKA_END) & (((T2CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T2CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T2CON)
                          M PREV_BANK = high (T2CON)
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00089E B247               M         btfsc   _HP_Flags, 001h
0008A0 82BA               M         bsf     T2CON,  001h
0008A2 A247               M         btfss   _HP_Flags, 001h
0008A4 92BA               M         bcf     T2CON,  001h
                          M     else
                          M       if (((_HP_Flags) & 0f00h) == ((T2CON) & 0f00h))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 001h
                          M         bsf     T2CON,  001h
                          M         btfss   _HP_Flags, 001h
                          M         bcf     T2CON,  001h
                          M       else
                          M           if (((T2CON)  <= BANKA_END) | ((T2CON)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  _HP_Flags
                          M         btfsc   _HP_Flags, 001h
                          M         bsf     T2CON,  001h
                          M         btfss   _HP_Flags, 001h
                          M         bcf     T2CON,  001h
                          M           else
                          M         MOVE?TA _HP_Flags, 001h
                          M         MOVE?AT T2CON,  001h
                          M           endif
                          M       endif
                          M     endif
                      00755 
                      00756 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00221           endif
                      00757         LABEL?L L00035  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00035
                          M         XALL
                          M     else
0008A6                    M L00035
                          M     endif
                      00758 
                      00759 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00223           if PR2changed then            ; set PR2
                      00760         CMPF?TL _PR2changed, L00037
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, _HP_Flags, 003h, L00037
                          M     ifdef USE_LINKER
                          M         CLRWDT?
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ($ == (L00037))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((_HP_Flags) > BANKA_END) & ((_HP_Flags) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  _HP_Flags
                          M       if ((0)      == 0)
                          M         btfss   _HP_Flags, 003h
                          M       else
                          M         btfsc   _HP_Flags, 003h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00037
                          M             else
                          M         bov     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0008A6 A647               M         btfss   _HP_Flags, 003h
                          M       else
                          M         btfsc   _HP_Flags, 003h
                          M       endif
                          M       ifdef USE_LINKER
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00037
                          M       else
                          M         if ((L00037) < 1)
                          M         goto    L00037
                          M         else
                          M           if ((L00037) > $)
0008A8 EF59 F004          M         goto    L00037
                          M           else
                          M             if ((L00037) < ($ - 3ffh))
                          M         goto    L00037
                          M             else
                          M         bra     L00037
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00761 
                      00762 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00224               PR2changed = 0
                      00763         MOVE?CT 000h, _PR2changed
                          M         CHK?RP  _HP_Flags
                          M     if (((_HP_Flags) & 8000h) != PREV_ALT)
                          M       if ((_HP_Flags) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Flags) & 8000h
                          M     endif
                          M     if ((((_HP_Flags) & 0fffh) > BANKA_END) & (((_HP_Flags) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Flags) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Flags)
                          M PREV_BANK = high (_HP_Flags)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _HP_Flags, 003h
                          M     else
0008AC 9647               M         bcf     _HP_Flags, 003h
                          M     endif
                      00764 
                      00765 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00225               PR2 = HP_PR2
                      00766         MOVE?BB _HP_PR2, PR2
0008AE C048 FFBB          M         movff   _HP_PR2, PR2
                      00767 
                      00768 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00226           endif
                      00769         LABEL?L L00037  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00037
                          M         XALL
                          M     else
0008B2                    M L00037
                          M     endif
                      00770 
                      00771 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00227       endif
                      00772         LABEL?L L00031  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00031
                          M         XALL
                          M     else
0008B2                    M L00031
                          M     endif
                      00773 
                      00774 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00228   return
                      00775         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
0008B2 0012               M         return
                      00776 
                      00777 ; C:\USERS\ADMIN\DESKTOP\TEST\HPWM10_L.PBP      00231   OverHPWM10:
                      00778 
                      00779         LABEL?L _OverHPWM10     
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _OverHPWM10
                          M         XALL
                          M     else
0008B4                    M _OverHPWM10
                          M     endif
                      00780 
                      00781 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00003   include "ALLDIGITAL.pbp"
                      00782 
                      00783 ; C:\USERS\ADMIN\DESKTOP\TEST\ALLDIGITAL.PBP    00026   ASM
                      00784 
                      00785         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      00786 
                      00787 ;----[Module defaults]------------------------------------------------------
                      00788   #define SHOWDIGITALDEFAULT  0
                      00789   ifdef SHOWDIGITAL
                      00790 SHOWDIGITALRESULT = SHOWDIGITAL
                      00791   else
  00000000            00792 SHOWDIGITALRESULT = SHOWDIGITALDEFAULT
                      00793   endif
                      00794   ifndef PM_USED
                      00795     ifndef ADLISTALL
                          M         list
                          M       endif
                          M       MOVE?CB  0,   ANSELA
                          M         CHK?RP  ANSELA
                          M     if (((ANSELA) & 8000h) != PREV_ALT)
                          M       if ((ANSELA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELA) & 8000h
                          M     endif
                          M     if ((((ANSELA) & 0fffh) > BANKA_END) & (((ANSELA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELA) & 0f00h) != (PREV_BANK << 8))
0008B4 010F               M         movlb   high (ANSELA)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000F                M PREV_BANK = high (ANSELA)
                          M       endif
                          M     endif
                          M     if (low (0)   == 0)
0008B6 6B38               M         clrf    ANSELA
                          M     else
                          M       if (low (0)   == 255)
                          M         setf    ANSELA
                          M       else
                          M         movlw   low (0)
                          M         movwf   ANSELA
                          M       endif
                          M     endif
                          M       if (SHOWDIGITALRESULT == 1)
                          M         ifndef PM_USED
                          M           messg ANSELA = 0
                          M         endif
                          M       endif
                          M       ifndef PM_USED
                          M         ifndef ADLISTALL
                          M         list
                          M       endif
                          M       MOVE?CB  0,   ANSELB
                          M         CHK?RP  ANSELB
                          M     if (((ANSELB) & 8000h) != PREV_ALT)
                          M       if ((ANSELB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELB) & 8000h
                          M     endif
                          M     if ((((ANSELB) & 0fffh) > BANKA_END) & (((ANSELB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELB)
                          M PREV_BANK = high (ANSELB)
                          M       endif
                          M     endif
                          M     if (low (0)   == 0)
0008B8 6B39               M         clrf    ANSELB
                          M     else
                          M       if (low (0)   == 255)
                          M         setf    ANSELB
                          M       else
                          M         movlw   low (0)
                          M         movwf   ANSELB
                          M       endif
                          M     endif
                          M       if (SHOWDIGITALRESULT == 1)
                          M         ifndef PM_USED
                          M           messg ANSELB = 0
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifndef PM_USED
                          M         ifndef ADLISTALL
                      00956     list
                      00957   endif
                      00958 
                      00959 
                      00960         ENDASM?
                      00961 
                      00962 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00005   #CONFIG
                      00963 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00046   DEFINE LCD_DREG PORTA 
                      00964 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00047   DEFINE LCD_DBIT 0
                      00965 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00048   DEFINE LCD_RSREG PORTA
                      00966 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00049   DEFINE LCD_RSBIT 5 
                      00967 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00050   DEFINE LCD_EREG PORTA
                      00968 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00051   DEFINE LCD_EBIT 4 
                      00969 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00052   DEFINE LCD_BITS 4 
                      00970 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00053   DEFINE LCD_LINE 2
                      00971 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00054   DEFINE I2C_SCLOUT 1
                      00972 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00055   DEFINE I2C_SLOW 1
                      00973 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00056   define NO_CLRWDT 1
                      00974 
                      00975 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00058   INTCON2.7 = 0 
                      00976         MOVE?CT 000h, _INTCON2??7
                          M         CHK?RP  INTCON2
                          M     if (((INTCON2) & 8000h) != PREV_ALT)
                          M       if ((INTCON2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (INTCON2) & 8000h
                          M     endif
                          M     if ((((INTCON2) & 0fffh) > BANKA_END) & (((INTCON2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((INTCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (INTCON2)
                          M PREV_BANK = high (INTCON2)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     INTCON2, 007h
                          M     else
0008BA 9EF1               M         bcf     INTCON2, 007h
                          M     endif
                      00977 
                      00978 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00060   WPUB = %11110111
                      00979         MOVE?CB 0F7h, WPUB
                          M         CHK?RP  WPUB
                          M     if (((WPUB)  & 8000h) != PREV_ALT)
                          M       if ((WPUB)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = (WPUB)  & 8000h
                          M     endif
                          M     if ((((WPUB)  & 0fffh) > BANKA_END) & (((WPUB)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((WPUB)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (WPUB)
                          M PREV_BANK = high (WPUB)
                          M       endif
                          M     endif
                          M     if (low (0F7h) == 0)
                          M         clrf    WPUB
                          M     else
                          M       if (low (0F7h) == 255)
                          M         setf    WPUB
                          M       else
0008BC 0EF7               M         movlw   low (0F7h)
0008BE 6E61               M         movwf   WPUB
                          M       endif
                          M     endif
                      00980 
                      00981 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00062   OSCCON  = %1111000
                      00982         MOVE?CB 078h, OSCCON
                          M         CHK?RP  OSCCON
                          M     if (((OSCCON) & 8000h) != PREV_ALT)
                          M       if ((OSCCON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON) & 8000h
                          M     endif
                          M     if ((((OSCCON) & 0fffh) > BANKA_END) & (((OSCCON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (078h) == 0)
                          M         clrf    OSCCON
                          M     else
                          M       if (low (078h) == 255)
                          M         setf    OSCCON
                          M       else
0008C0 0E78               M         movlw   low (078h)
0008C2 6ED3               M         movwf   OSCCON
                          M       endif
                          M     endif
                      00983 
                      00984 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00063   OSCCON2 = %0000000
                      00985         MOVE?CB 000h, OSCCON2
                          M         CHK?RP  OSCCON2
                          M     if (((OSCCON2) & 8000h) != PREV_ALT)
                          M       if ((OSCCON2) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON2) & 8000h
                          M     endif
                          M     if ((((OSCCON2) & 0fffh) > BANKA_END) & (((OSCCON2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON2)
                          M PREV_BANK = high (OSCCON2)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0008C4 6AD2               M         clrf    OSCCON2
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    OSCCON2
                          M       else
                          M         movlw   low (000h)
                          M         movwf   OSCCON2
                          M       endif
                          M     endif
                      00986 
                      00987 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00064   OSCTUNE = %10000000
                      00988         MOVE?CB 080h, OSCTUNE
                          M         CHK?RP  OSCTUNE
                          M     if (((OSCTUNE) & 8000h) != PREV_ALT)
                          M       if ((OSCTUNE) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCTUNE) & 8000h
                          M     endif
                          M     if ((((OSCTUNE) & 0fffh) > BANKA_END) & (((OSCTUNE) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCTUNE) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCTUNE)
                          M PREV_BANK = high (OSCTUNE)
                          M       endif
                          M     endif
                          M     if (low (080h) == 0)
                          M         clrf    OSCTUNE
                          M     else
                          M       if (low (080h) == 255)
                          M         setf    OSCTUNE
                          M       else
0008C6 0E80               M         movlw   low (080h)
0008C8 6E9B               M         movwf   OSCTUNE
                          M       endif
                          M     endif
                      00989 
                      00990 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00065   T1CON = %00000111
                      00991         MOVE?CB 007h, T1CON
                          M         CHK?RP  T1CON
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((T1CON) & 8000h) != PREV_ALT)
                          M       if ((T1CON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (T1CON) & 8000h
                          M     endif
                          M     if ((((T1CON) & 0fffh) > BANKA_END) & (((T1CON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((T1CON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (T1CON)
                          M PREV_BANK = high (T1CON)
                          M       endif
                          M     endif
                          M     if (low (007h) == 0)
                          M         clrf    T1CON
                          M     else
                          M       if (low (007h) == 255)
                          M         setf    T1CON
                          M       else
0008CA 0E07               M         movlw   low (007h)
0008CC 6ECD               M         movwf   T1CON
                          M       endif
                          M     endif
                      00992 
                      00993 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00066   ANSELA = 0
                      00994         MOVE?CB 000h, ANSELA
                          M         CHK?RP  ANSELA
                          M     if (((ANSELA) & 8000h) != PREV_ALT)
                          M       if ((ANSELA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELA) & 8000h
                          M     endif
                          M     if ((((ANSELA) & 0fffh) > BANKA_END) & (((ANSELA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELA)
                          M PREV_BANK = high (ANSELA)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0008CE 6B38               M         clrf    ANSELA
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ANSELA
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ANSELA
                          M       endif
                          M     endif
                      00995 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00996 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00067   ANSELB = 0
                      00997         MOVE?CB 000h, ANSELB
                          M         CHK?RP  ANSELB
                          M     if (((ANSELB) & 8000h) != PREV_ALT)
                          M       if ((ANSELB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELB) & 8000h
                          M     endif
                          M     if ((((ANSELB) & 0fffh) > BANKA_END) & (((ANSELB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELB)
                          M PREV_BANK = high (ANSELB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
0008D0 6B39               M         clrf    ANSELB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ANSELB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ANSELB
                          M       endif
                          M     endif
                      00998 
                      00999 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00068   ANSELC = %000010
                      01000         MOVE?CB 002h, ANSELC
                          M         CHK?RP  ANSELC
                          M     if (((ANSELC) & 8000h) != PREV_ALT)
                          M       if ((ANSELC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANSELC) & 8000h
                          M     endif
                          M     if ((((ANSELC) & 0fffh) > BANKA_END) & (((ANSELC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANSELC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANSELC)
                          M PREV_BANK = high (ANSELC)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    ANSELC
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    ANSELC
                          M       else
0008D2 0E02               M         movlw   low (002h)
0008D4 6F3A               M         movwf   ANSELC
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      01001 
                      01002 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00069   TRISC = 255
                      01003         MOVE?CB 0FFh, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) & 8000h) != PREV_ALT)
                          M       if ((TRISC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISC) & 8000h
                          M     endif
                          M     if ((((TRISC) & 0fffh) > BANKA_END) & (((TRISC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISC
                          M     else
                          M       if (low (0FFh) == 255)
0008D6 6894               M         setf    TRISC
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   TRISC
                          M       endif
                          M     endif
                      01004 
                      01005 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00070   TRISA = 255
                      01006         MOVE?CB 0FFh, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) & 8000h) != PREV_ALT)
                          M       if ((TRISA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISA) & 8000h
                          M     endif
                          M     if ((((TRISA) & 0fffh) > BANKA_END) & (((TRISA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISA
                          M     else
                          M       if (low (0FFh) == 255)
0008D8 6892               M         setf    TRISA
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   TRISA
                          M       endif
                          M     endif
                      01007 
                      01008 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00071   TRISB = 255
                      01009         MOVE?CB 0FFh, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) & 8000h) != PREV_ALT)
                          M       if ((TRISB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISB) & 8000h
                          M     endif
                          M     if ((((TRISB) & 0fffh) > BANKA_END) & (((TRISB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISB)
                          M PREV_BANK = high (TRISB)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    TRISB
                          M     else
                          M       if (low (0FFh) == 255)
0008DA 6893               M         setf    TRISB
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   TRISB
                          M       endif
                          M     endif
                      01010 
                      01011 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00073   LOW portc.6
                      01012         LOW?T   _PORTC??6
                          M         MOVE?CT 0, PORTC, 006h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     PORTC,  006h
                          M     else
0008DC 9C82               M         bcf     PORTC,  006h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 006h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 006h
                          M     else
0008DE 9C94               M         bcf     ((PORTC) + 12h), 006h
                          M     endif
                      01013 
                      01014 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00074   low portb.3
                      01015         LOW?T   _PORTB??3
                          M         MOVE?CT 0, PORTB, 003h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTB,  003h
                          M     else
0008E0 9681               M         bcf     PORTB,  003h
                          M     endif
                          M         MOVE?CT 0, ((PORTB) + 12h), 003h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 003h
                          M     else
0008E2 9693               M         bcf     ((PORTB) + 12h), 003h
                          M     endif
                      01016 
                      01017 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00075   low portb.0
                      01018         LOW?T   _PORTB??0
                          M         MOVE?CT 0, PORTB, 000h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTB,  000h
                          M     else
0008E4 9081               M         bcf     PORTB,  000h
                          M     endif
                          M         MOVE?CT 0, ((PORTB) + 12h), 000h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTB) + 12h), 000h
                          M     else
0008E6 9093               M         bcf     ((PORTB) + 12h), 000h
                          M     endif
                      01019 
                      01020 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00076   low portc.2
                      01021         LOW?T   _PORTC??2
                          M         MOVE?CT 0, PORTC, 002h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  002h
                          M     else
0008E8 9482               M         bcf     PORTC,  002h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 002h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 002h
                          M     else
0008EA 9494               M         bcf     ((PORTC) + 12h), 002h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01022 
                      01023 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00078   pause 200
                      01024         PAUSE?C 0C8h
                          M     if (((0C8h) >> 8) == 0)
                          M         MOVE?CA 0C8h
0008EC 0EC8               M         movlw   low (0C8h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
0008EE 0100               M         movlb   0
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
0008F0 EC6D F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((0C8h) >> 16) == 0)
                          M         MOVE?CB high (0C8h), R1 + 1
                          M         MOVE?CA low (0C8h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (0C8h) >> 24, R1 + 3
                          M         MOVE?CB upper (0C8h), R1 + 2
                          M         MOVE?CB high (0C8h), R1 + 1
                          M         MOVE?CA low (0C8h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01025 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00079   RTC             con %10100010
                      01026 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00080   EPROM           CON %10100000
                      01027 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00081   LM75            CON %10010000
                      01028 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00082   Strelica        con 126 
                      01029 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00084   symbol BCKLIGHT        = PORTC.3
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01030 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00085   symbol SDA             = PORTC.0
                      01031 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00086   symbol SCL             = PORTC.1
                      01032 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00087   symbol RELEJ1          = PORTC.4
                      01033 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00088   symbol RELEJ2          = PORTC.5
                      01034 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00090   symbol TASTLEVO        = PORTB.1
                      01035 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00091   symbol TASTOK          = PORTB.2
                      01036 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00092   symbol TASTDESNO       = PORTB.4
                      01037 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00093   symbol TASTGORE        = PORTB.6
                      01038 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00094   symbol TASTDOLE        = PORTB.5
                      01039 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00095   symbol TASTODRZAVANJE  = PORTB.7
                      01040 
                      01041 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00097   low bcklight
                      01042         LOW?T   _BCKLIGHT
                          M         MOVE?CT 0, PORTC, 003h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  003h
                          M     else
0008F4 9682               M         bcf     PORTC,  003h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 003h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 003h
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008F6 9694               M         bcf     ((PORTC) + 12h), 003h
                          M     endif
                      01043 
                      01044 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00098   low relej1
                      01045         LOW?T   _RELEJ1
                          M         MOVE?CT 0, PORTC, 004h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  004h
                          M     else
0008F8 9882               M         bcf     PORTC,  004h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 004h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 004h
                          M     else
0008FA 9894               M         bcf     ((PORTC) + 12h), 004h
                          M     endif
                      01046 
                      01047 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00099   low relej2
                      01048         LOW?T   _RELEJ2
                          M         MOVE?CT 0, PORTC, 005h
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     PORTC,  005h
                          M     else
0008FC 9A82               M         bcf     PORTC,  005h
                          M     endif
                          M         MOVE?CT 0, ((PORTC) + 12h), 005h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 005h
                          M     else
0008FE 9A94               M         bcf     ((PORTC) + 12h), 005h
                          M     endif
                      01049 
                      01050 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00101   input tastlevo
                      01051         INPUT?T _TASTLEVO
                          M         MOVE?CT 1, ((PORTB) + 12h), 001h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000900 8293               M         bsf     ((PORTB) + 12h), 001h
                          M     else
                          M         bcf     ((PORTB) + 12h), 001h
                          M     endif
                      01052 
                      01053 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00102   input tastdesno
                      01054         INPUT?T _TASTDESNO
                          M         MOVE?CT 1, ((PORTB) + 12h), 004h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000902 8893               M         bsf     ((PORTB) + 12h), 004h
                          M     else
                          M         bcf     ((PORTB) + 12h), 004h
                          M     endif
                      01055 
                      01056 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00103   input tastdole
                      01057         INPUT?T _TASTDOLE
                          M         MOVE?CT 1, ((PORTB) + 12h), 005h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((1)   & 1) == 1)
000904 8A93               M         bsf     ((PORTB) + 12h), 005h
                          M     else
                          M         bcf     ((PORTB) + 12h), 005h
                          M     endif
                      01058 
                      01059 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00104   input tastgore
                      01060         INPUT?T _TASTGORE
                          M         MOVE?CT 1, ((PORTB) + 12h), 006h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000906 8C93               M         bsf     ((PORTB) + 12h), 006h
                          M     else
                          M         bcf     ((PORTB) + 12h), 006h
                          M     endif
                      01061 
                      01062 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00105   input tastodrzavanje
                      01063         INPUT?T _TASTODRZAVANJE
                          M         MOVE?CT 1, ((PORTB) + 12h), 007h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
000908 8E93               M         bsf     ((PORTB) + 12h), 007h
                          M     else
                          M         bcf     ((PORTB) + 12h), 007h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01064 
                      01065 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00106   input tastok
                      01066         INPUT?T _TASTOK
                          M         MOVE?CT 1, ((PORTB) + 12h), 002h
                          M         CHK?RP  ((PORTB) + 12h)
                          M     if (((((PORTB) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTB) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTB) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTB) + 12h)) & 0fffh) > BANKA_END) & (((((PORTB) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTB) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTB) + 12h))
                          M PREV_BANK = high (((PORTB) + 12h))
                          M       endif
                          M     endif
                          M     if (((1)   & 1) == 1)
00090A 8493               M         bsf     ((PORTB) + 12h), 002h
                          M     else
                          M         bcf     ((PORTB) + 12h), 002h
                          M     endif
                      01067 
                      01068 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00150     clear 
                      01069         CLEAR?  
  0000                    M     local loop
                          M       ifdef USE_LFSR
                          M         lfsr    0, RAM_END
                          M       else
                          M         MOVE?CW RAM_END, FSR0L
                          M     ifdef USE_LINKER
                          M         CHK?RP  FSR0L
                          M         movlw   low (RAM_END)
                          M         movwf   FSR0L
                          M         movlw   high (RAM_END)
                          M         movwf   (FSR0L) + 1
                          M     else
                          M         MOVE?CB low (RAM_END), FSR0L
                          M         CHK?RP  FSR0L
                          M     if (((FSR0L) & 8000h) != PREV_ALT)
                          M       if ((FSR0L) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (FSR0L) & 8000h
                          M     endif
                          M     if ((((FSR0L) & 0fffh) > BANKA_END) & (((FSR0L) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((FSR0L) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (FSR0L)
                          M PREV_BANK = high (FSR0L)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     if (low (low (RAM_END)) == 0)
                          M         clrf    FSR0L
                          M     else
                          M       if (low (low (RAM_END)) == 255)
00090C 68E9               M         setf    FSR0L
                          M       else
                          M         movlw   low (low (RAM_END))
                          M         movwf   FSR0L
                          M       endif
                          M     endif
                          M         MOVE?CB high (RAM_END), (FSR0L) + 1
                          M         CHK?RP  (FSR0L) + 1
                          M     if ((((FSR0L) + 1) & 8000h) != PREV_ALT)
                          M       if (((FSR0L) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((FSR0L) + 1) & 8000h
                          M     endif
                          M     if (((((FSR0L) + 1) & 0fffh) > BANKA_END) & ((((FSR0L) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((FSR0L) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((FSR0L) + 1)
                          M PREV_BANK = high ((FSR0L) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (RAM_END)) == 0)
                          M         clrf    (FSR0L) + 1
                          M     else
                          M       if (low (high (RAM_END)) == 255)
                          M         setf    (FSR0L) + 1
                          M       else
00090E 0E05               M         movlw   low (high (RAM_END))
000910 6EEA               M         movwf   (FSR0L) + 1
                          M       endif
                          M     endif
                          M     endif
                          M       endif
000912 6AED               M loop    clrf    POSTDEC0
000914 50E9               M         movf    FSR0L, W
000916 10EA               M         iorwf   FSR0H, W
000918 E1FC               M         bnz     loop
00091A 6AEF               M         clrf    INDF0
                      01070 
                      01071 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00152   Frequency = 30000
                      01072         MOVE?CW 000007530h, _Frequency
                          M     ifdef USE_LINKER
                          M         CHK?RP  _Frequency
                          M         movlw   low (000007530h)
                          M         movwf   _Frequency
                          M         movlw   high (000007530h)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (_Frequency) + 1
                          M     else
                          M         MOVE?CB low (000007530h), _Frequency
                          M         CHK?RP  _Frequency
                          M     if (((_Frequency) & 8000h) != PREV_ALT)
                          M       if ((_Frequency) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Frequency) & 8000h
                          M     endif
                          M     if ((((_Frequency) & 0fffh) > BANKA_END) & (((_Frequency) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Frequency) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Frequency)
                          M PREV_BANK = high (_Frequency)
                          M       endif
                          M     endif
                          M     if (low (low (000007530h)) == 0)
                          M         clrf    _Frequency
                          M     else
                          M       if (low (low (000007530h)) == 255)
                          M         setf    _Frequency
                          M       else
00091C 0E30               M         movlw   low (low (000007530h))
00091E 6E35               M         movwf   _Frequency
                          M       endif
                          M     endif
                          M         MOVE?CB high (000007530h), (_Frequency) + 1
                          M         CHK?RP  (_Frequency) + 1
                          M     if ((((_Frequency) + 1) & 8000h) != PREV_ALT)
                          M       if (((_Frequency) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_Frequency) + 1) & 8000h
                          M     endif
                          M     if (((((_Frequency) + 1) & 0fffh) > BANKA_END) & ((((_Frequency) + 1) & 0fffh) < (0f01h + BANKA_END)
                            ))
                          M       if ((((_Frequency) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_Frequency) + 1)
                          M PREV_BANK = high ((_Frequency) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000007530h)) == 0)
                          M         clrf    (_Frequency) + 1
                          M     else
                          M       if (low (high (000007530h)) == 255)
                          M         setf    (_Frequency) + 1
                          M       else
000920 0E75               M         movlw   low (high (000007530h))
000922 6E36               M         movwf   (_Frequency) + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                          M     endif
                      01073 
                      01074 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00153   gosub UpisiVreme 
                      01075         GOSUB?L _UpisiVreme
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _UpisiVreme
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _UpisiVreme
                          M     else
                          M       if ((_UpisiVreme) < 1)
                          M         call    _UpisiVreme
                          M       else
                          M         if ((_UpisiVreme) > $)
000924 EC9D F005          M         call    _UpisiVreme
                          M         else
                          M           if ((_UpisiVreme) < ($ - 3ffh))
                          M         call    _UpisiVreme
                          M           else
                          M         rcall   _UpisiVreme
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000928                    M dlabel
                      01076 
                      01077 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00154       DutyCycleL1 = 512
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01078         MOVE?CW 000000200h, _DutyCycleL1
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL1
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL1
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL1) + 1
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL1
                          M         CHK?RP  _DutyCycleL1
                          M     if (((_DutyCycleL1) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL1) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL1) & 0fffh) > BANKA_END) & (((_DutyCycleL1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL1)
                          M PREV_BANK = high (_DutyCycleL1)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
000928 6A2D               M         clrf    _DutyCycleL1
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL1
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL1
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL1) + 1
                          M         CHK?RP  (_DutyCycleL1) + 1
                          M     if ((((_DutyCycleL1) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL1) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL1) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL1) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL1) + 1)
                          M PREV_BANK = high ((_DutyCycleL1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL1) + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL1) + 1
                          M       else
00092A 0E02               M         movlw   low (high (000000200h))
00092C 6E2E               M         movwf   (_DutyCycleL1) + 1
                          M       endif
                          M     endif
                          M     endif
                      01079 
                      01080 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00155       DutyCycleL2 = 512
                      01081         MOVE?CW 000000200h, _DutyCycleL2
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL2
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL2
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL2) + 1
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL2
                          M         CHK?RP  _DutyCycleL2
                          M     if (((_DutyCycleL2) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL2) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL2) & 0fffh) > BANKA_END) & (((_DutyCycleL2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL2)
                          M PREV_BANK = high (_DutyCycleL2)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
00092E 6A2F               M         clrf    _DutyCycleL2
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL2
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL2
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL2) + 1
                          M         CHK?RP  (_DutyCycleL2) + 1
                          M     if ((((_DutyCycleL2) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL2) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = ((_DutyCycleL2) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL2) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL2) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL2) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL2) + 1)
                          M PREV_BANK = high ((_DutyCycleL2) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL2) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL2) + 1
                          M       else
000930 0E02               M         movlw   low (high (000000200h))
000932 6E30               M         movwf   (_DutyCycleL2) + 1
                          M       endif
                          M     endif
                          M     endif
                      01082 
                      01083 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00156       DutyCycleL3 = 512
                      01084         MOVE?CW 000000200h, _DutyCycleL3
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL3
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL3
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL3) + 1
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL3
                          M         CHK?RP  _DutyCycleL3
                          M     if (((_DutyCycleL3) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL3) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL3) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL3) & 0fffh) > BANKA_END) & (((_DutyCycleL3) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL3) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DutyCycleL3)
                          M PREV_BANK = high (_DutyCycleL3)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
000934 6A31               M         clrf    _DutyCycleL3
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL3
                          M       else
                          M         movlw   low (low (000000200h))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   _DutyCycleL3
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL3) + 1
                          M         CHK?RP  (_DutyCycleL3) + 1
                          M     if ((((_DutyCycleL3) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL3) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL3) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL3) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL3) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL3) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL3) + 1)
                          M PREV_BANK = high ((_DutyCycleL3) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL3) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL3) + 1
                          M       else
000936 0E02               M         movlw   low (high (000000200h))
000938 6E32               M         movwf   (_DutyCycleL3) + 1
                          M       endif
                          M     endif
                          M     endif
                      01085 
                      01086 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00157       DutyCycleL4 = 512
                      01087         MOVE?CW 000000200h, _DutyCycleL4
                          M     ifdef USE_LINKER
                          M         CHK?RP  _DutyCycleL4
                          M         movlw   low (000000200h)
                          M         movwf   _DutyCycleL4
                          M         movlw   high (000000200h)
                          M         movwf   (_DutyCycleL4) + 1
                          M     else
                          M         MOVE?CB low (000000200h), _DutyCycleL4
                          M         CHK?RP  _DutyCycleL4
                          M     if (((_DutyCycleL4) & 8000h) != PREV_ALT)
                          M       if ((_DutyCycleL4) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DutyCycleL4) & 8000h
                          M     endif
                          M     if ((((_DutyCycleL4) & 0fffh) > BANKA_END) & (((_DutyCycleL4) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DutyCycleL4) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_DutyCycleL4)
                          M PREV_BANK = high (_DutyCycleL4)
                          M       endif
                          M     endif
                          M     if (low (low (000000200h)) == 0)
00093A 6A33               M         clrf    _DutyCycleL4
                          M     else
                          M       if (low (low (000000200h)) == 255)
                          M         setf    _DutyCycleL4
                          M       else
                          M         movlw   low (low (000000200h))
                          M         movwf   _DutyCycleL4
                          M       endif
                          M     endif
                          M         MOVE?CB high (000000200h), (_DutyCycleL4) + 1
                          M         CHK?RP  (_DutyCycleL4) + 1
                          M     if ((((_DutyCycleL4) + 1) & 8000h) != PREV_ALT)
                          M       if (((_DutyCycleL4) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((_DutyCycleL4) + 1) & 8000h
                          M     endif
                          M     if (((((_DutyCycleL4) + 1) & 0fffh) > BANKA_END) & ((((_DutyCycleL4) + 1) & 0fffh) < (0f01h + BANKA_
                            END)))
                          M       if ((((_DutyCycleL4) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((_DutyCycleL4) + 1)
                          M PREV_BANK = high ((_DutyCycleL4) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (000000200h)) == 0)
                          M         clrf    (_DutyCycleL4) + 1
                          M     else
                          M       if (low (high (000000200h)) == 255)
                          M         setf    (_DutyCycleL4) + 1
                          M       else
00093C 0E02               M         movlw   low (high (000000200h))
00093E 6E34               M         movwf   (_DutyCycleL4) + 1
                          M       endif
                          M     endif
                          M     endif
                      01088 
                      01089 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00159       @ HPWM10 4, _DutyCycleL4, _Frequency
                      01090 
                      01091         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                      01092  HPWM10 4, _DutyCycleL4, _Frequency
                          M     if 4       < 6 
                          M       MOVE?CB 4,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (4)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (4)   == 255)
                          M         setf    _HP_Channel
                          M       else
000940 0E04               M         movlw   low (4)
000942 6E46               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 4,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL4, _HP_Duty
                          M         MOVE?BB _DutyCycleL4, _HP_Duty
000944 C033 F037          M         movff   _DutyCycleL4, _HP_Duty
                          M         MOVE?BB (_DutyCycleL4) + 1, (_HP_Duty) + 1
000948 C034 F038          M         movff   (_DutyCycleL4) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
00094C C035 F039          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000950 C036 F03A          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000954 ECAA F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01093 
                      01094         ENDASM?
                      01095 
                      01096 
                      01097 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00160       @ HPWM10 3, _DutyCycleL3, _Frequency
                      01098 
                      01099         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      01100  HPWM10 3, _DutyCycleL3, _Frequency
                          M     if 3       < 6 
                          M       MOVE?CB 3,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (3)   == 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (3)   == 255)
                          M         setf    _HP_Channel
                          M       else
000958 0E03               M         movlw   low (3)
00095A 6E46               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 3,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL3, _HP_Duty
                          M         MOVE?BB _DutyCycleL3, _HP_Duty
00095C C031 F037          M         movff   _DutyCycleL3, _HP_Duty
                          M         MOVE?BB (_DutyCycleL3) + 1, (_HP_Duty) + 1
000960 C032 F038          M         movff   (_DutyCycleL3) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000964 C035 F039          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000968 C036 F03A          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
00096C ECAA F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01101 
                      01102         ENDASM?
                      01103 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01104 
                      01105 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00161       @ HPWM10 2, _DutyCycleL2, _Frequency
                      01106 
                      01107         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      01108  HPWM10 2, _DutyCycleL2, _Frequency
                          M     if 2       < 6 
                          M       MOVE?CB 2,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (2)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (2)   == 255)
                          M         setf    _HP_Channel
                          M       else
000970 0E02               M         movlw   low (2)
000972 6E46               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 2,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL2, _HP_Duty
                          M         MOVE?BB _DutyCycleL2, _HP_Duty
000974 C02F F037          M         movff   _DutyCycleL2, _HP_Duty
                          M         MOVE?BB (_DutyCycleL2) + 1, (_HP_Duty) + 1
000978 C030 F038          M         movff   (_DutyCycleL2) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
00097C C035 F039          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000980 C036 F03A          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
000984 ECAA F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01109 
                      01110         ENDASM?
                      01111 
                      01112 
                      01113 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00162       @ HPWM10 1, _DutyCycleL1, _Frequency
                      01114 
                      01115         ASM?
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                      01116  HPWM10 1, _DutyCycleL1, _Frequency
                          M     if 1       < 6 
                          M       MOVE?CB 1,       _HP_Channel      ; Save channel from constant
                          M         CHK?RP  _HP_Channel
                          M     if (((_HP_Channel) & 8000h) != PREV_ALT)
                          M       if ((_HP_Channel) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_HP_Channel) & 8000h
                          M     endif
                          M     if ((((_HP_Channel) & 0fffh) > BANKA_END) & (((_HP_Channel) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_HP_Channel) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_HP_Channel)
                          M PREV_BANK = high (_HP_Channel)
                          M       endif
                          M     endif
                          M     if (low (1)   == 0)
                          M         clrf    _HP_Channel
                          M     else
                          M       if (low (1)   == 255)
                          M         setf    _HP_Channel
                          M       else
000988 0E01               M         movlw   low (1)
00098A 6E46               M         movwf   _HP_Channel
                          M       endif
                          M     endif
                          M     else
                          M       MOVE?BB 1,       _HP_Channel      ; Save channel from BYTE var
                          M     endif
                          M     MOVE?WW   _DutyCycleL1, _HP_Duty
                          M         MOVE?BB _DutyCycleL1, _HP_Duty
00098C C02D F037          M         movff   _DutyCycleL1, _HP_Duty
                          M         MOVE?BB (_DutyCycleL1) + 1, (_HP_Duty) + 1
000990 C02E F038          M         movff   (_DutyCycleL1) + 1, (_HP_Duty) + 1
                          M     MOVE?WW   _Frequency, _HP_Freq
                          M         MOVE?BB _Frequency, _HP_Freq
000994 C035 F039          M         movff   _Frequency, _HP_Freq
                          M         MOVE?BB (_Frequency) + 1, (_HP_Freq) + 1
000998 C036 F03A          M         movff   (_Frequency) + 1, (_HP_Freq) + 1
                          M     L?CALL    _HPWM10_UPD    
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _HPWM10_UPD
                          M     else
                          M       if ((_HPWM10_UPD) < 1)
                          M         call    _HPWM10_UPD
                          M       else
                          M         if ((_HPWM10_UPD) > $)
                          M         call    _HPWM10_UPD
                          M         else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((_HPWM10_UPD) < ($ - 3ffh))
00099C ECAA F002          M         call    _HPWM10_UPD
                          M           else
                          M         rcall   _HPWM10_UPD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01117 
                      01118         ENDASM?
                      01119 
                      01120 
                      01121 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00163   relej1 = 0 
                      01122         MOVE?CT 000h, _RELEJ1
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PORTC,  004h
                          M     else
0009A0 9882               M         bcf     PORTC,  004h
                          M     endif
                      01123 
                      01124 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00164   relej2 = 0    
                      01125         MOVE?CT 000h, _RELEJ2
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     PORTC,  005h
                          M     else
0009A2 9A82               M         bcf     PORTC,  005h
                          M     endif
                      01126 
                      01127 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00165   BCKLIGHT = 1
                      01128         MOVE?CT 001h, _BCKLIGHT
                          M         CHK?RP  PORTC
                          M     if (((PORTC) & 8000h) != PREV_ALT)
                          M       if ((PORTC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTC) & 8000h
                          M     endif
                          M     if ((((PORTC) & 0fffh) > BANKA_END) & (((PORTC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTC)
                          M PREV_BANK = high (PORTC)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
0009A4 8682               M         bsf     PORTC,  003h
                          M     else
                          M         bcf     PORTC,  003h
                          M     endif
                      01129 
                      01130 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00172   Main:
                      01131 
                      01132         LABEL?L _Main   
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _Main
                          M         XALL
                          M     else
0009A6                    M _Main
                          M     endif
                      01133 
                      01134 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00173   gosub OcitajTastere
                      01135         GOSUB?L _OcitajTastere
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _OcitajTastere
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _OcitajTastere
                          M     else
                          M       if ((_OcitajTastere) < 1)
                          M         call    _OcitajTastere
                          M       else
                          M         if ((_OcitajTastere) > $)
0009A6 EC1D F006          M         call    _OcitajTastere
                          M         else
                          M           if ((_OcitajTastere) < ($ - 3ffh))
                          M         call    _OcitajTastere
                          M           else
                          M         rcall   _OcitajTastere
                          M           endif
                          M         endif
                          M       endif
                          M     endif
0009AA                    M dlabel
                      01136 
                      01137 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00174     if ok = 1 then okvar = okvar + 1 
                      01138         CMPNE?TCL       _ok, 001h, L00039
                          M     if ((001h) == 0)
                          M         CLRWDT?
                          M         BIT?GOTO 1, PB02,  003h,  L00039
                          M     else
                          M       if ((001h) == 1)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         BIT?GOTO 0, PB02,  003h,  L00039
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00039))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((0)      == 0)
                          M         btfss   PB02,  003h
                          M       else
                          M         btfsc   PB02,  003h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M       else
                          M         if ((L00039) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M         else
                          M           if ((L00039) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M           else
                          M             if ((L00039) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00039
                          M             else
                          M         bov     L00039
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0009AA A62B               M         btfss   PB02,  003h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   PB02,  003h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00039
                          M       else
                          M         if ((L00039) < 1)
                          M         goto    L00039
                          M         else
                          M           if ((L00039) > $)
0009AC EFD9 F004          M         goto    L00039
                          M           else
                          M             if ((L00039) < ($ - 3ffh))
                          M         goto    L00039
                          M             else
                          M         bra     L00039
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       else
                          M         L?GOTO  L00039
                          M       endif
                          M     endif
                      01139         ADD?BCB _OkVar, 001h, _OkVar
                          M     if ((_OkVar) == (_OkVar))
                          M       if ((001h) == 1)
                          M         CHK?RP  _OkVar
                          M     if (((_OkVar) & 8000h) != PREV_ALT)
                          M       if ((_OkVar) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_OkVar) & 8000h
                          M     endif
                          M     if ((((_OkVar) & 0fffh) > BANKA_END) & (((_OkVar) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_OkVar) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_OkVar)
                          M PREV_BANK = high (_OkVar)
                          M       endif
                          M     endif
0009B0 2A4E               M         incf    _OkVar, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _OkVar
                          M         addwf   _OkVar, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _OkVar
                          M         incf    _OkVar, W
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB _OkVar
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _OkVar
                          M         addwf   _OkVar, W
                          M         MOVE?AB _OkVar
                          M       endif
                          M     endif
                      01140         LABEL?L L00039  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00039
                          M         XALL
                          M     else
0009B2                    M L00039
                          M     endif
                      01141 
                      01142 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00175     if levo = 1 then levovar = levovar + 1 
                      01143         CMPNE?TCL       _levo, 001h, L00041
                          M     if ((001h) == 0)
                          M         CLRWDT?
                          M         BIT?GOTO 1, PB01,  003h,  L00041
                          M     else
                          M       if ((001h) == 1)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, PB01,  003h,  L00041
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00041))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((0)      == 0)
                          M         btfss   PB01,  003h
                          M       else
                          M         btfsc   PB01,  003h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00041
                          M       else
                          M         if ((L00041) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00041
                          M         else
                          M           if ((L00041) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00041
                          M           else
                          M             if ((L00041) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00041
                          M             else
                          M         bov     L00041
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0009B2 A62A               M         btfss   PB01,  003h
                          M       else
                          M         btfsc   PB01,  003h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00041
                          M       else
                          M         if ((L00041) < 1)
                          M         goto    L00041
                          M         else
                          M           if ((L00041) > $)
0009B4 EFDD F004          M         goto    L00041
                          M           else
                          M             if ((L00041) < ($ - 3ffh))
                          M         goto    L00041
                          M             else
                          M         bra     L00041
                          M             endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       else
                          M         L?GOTO  L00041
                          M       endif
                          M     endif
                      01144         ADD?BCB _LevoVar, 001h, _LevoVar
                          M     if ((_LevoVar) == (_LevoVar))
                          M       if ((001h) == 1)
                          M         CHK?RP  _LevoVar
                          M     if (((_LevoVar) & 8000h) != PREV_ALT)
                          M       if ((_LevoVar) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_LevoVar) & 8000h
                          M     endif
                          M     if ((((_LevoVar) & 0fffh) > BANKA_END) & (((_LevoVar) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_LevoVar) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_LevoVar)
                          M PREV_BANK = high (_LevoVar)
                          M       endif
                          M     endif
0009B8 2A49               M         incf    _LevoVar, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _LevoVar
                          M         addwf   _LevoVar, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _LevoVar
                          M         incf    _LevoVar, W
                          M         MOVE?AB _LevoVar
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _LevoVar
                          M         addwf   _LevoVar, W
                          M         MOVE?AB _LevoVar
                          M       endif
                          M     endif
                      01145         LABEL?L L00041  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00041
                          M         XALL
                          M     else
0009BA                    M L00041
                          M     endif
                      01146 
                      01147 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00176     if desno = 1 then desnovar = desnovar + 1 
                      01148         CMPNE?TCL       _desno, 001h, L00043
                          M     if ((001h) == 0)
                          M         CLRWDT?
                          M         BIT?GOTO 1, PB01,  000h,  L00043
                          M     else
                          M       if ((001h) == 1)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, PB01,  000h,  L00043
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00043))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((0)      == 0)
                          M         btfss   PB01,  000h
                          M       else
                          M         btfsc   PB01,  000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00043
                          M       else
                          M         if ((L00043) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00043
                          M         else
                          M           if ((L00043) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00043
                          M           else
                          M             if ((L00043) < ($ - 7fh))
                          M         btfsc   STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00043
                          M             else
                          M         bov     L00043
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0009BA A02A               M         btfss   PB01,  000h
                          M       else
                          M         btfsc   PB01,  000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00043
                          M       else
                          M         if ((L00043) < 1)
                          M         goto    L00043
                          M         else
                          M           if ((L00043) > $)
0009BC EFE1 F004          M         goto    L00043
                          M           else
                          M             if ((L00043) < ($ - 3ffh))
                          M         goto    L00043
                          M             else
                          M         bra     L00043
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       else
                          M         L?GOTO  L00043
                          M       endif
                          M     endif
                      01149         ADD?BCB _DesnoVar, 001h, _DesnoVar
                          M     if ((_DesnoVar) == (_DesnoVar))
                          M       if ((001h) == 1)
                          M         CHK?RP  _DesnoVar
                          M     if (((_DesnoVar) & 8000h) != PREV_ALT)
                          M       if ((_DesnoVar) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_DesnoVar) & 8000h
                          M     endif
                          M     if ((((_DesnoVar) & 0fffh) > BANKA_END) & (((_DesnoVar) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DesnoVar) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DesnoVar)
                          M PREV_BANK = high (_DesnoVar)
                          M       endif
                          M     endif
0009C0 2A42               M         incf    _DesnoVar, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _DesnoVar
                          M         addwf   _DesnoVar, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _DesnoVar
                          M         incf    _DesnoVar, W
                          M         MOVE?AB _DesnoVar
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _DesnoVar
                          M         addwf   _DesnoVar, W
                          M         MOVE?AB _DesnoVar
                          M       endif
                          M     endif
                      01150         LABEL?L L00043  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00043
                          M         XALL
                          M     else
0009C2                    M L00043
                          M     endif
                      01151 
                      01152 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00177     if gore  = 1 then gorevar = gorevar + 1 
                      01153         CMPNE?TCL       _gore, 001h, L00045
                          M     if ((001h) == 0)
                          M         CLRWDT?
                          M         BIT?GOTO 1, PB01,  002h,  L00045
                          M     else
                          M       if ((001h) == 1)
                          M         CLRWDT?
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, PB01,  002h,  L00045
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00045))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((0)      == 0)
                          M         btfss   PB01,  002h
                          M       else
                          M         btfsc   PB01,  002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00045
                          M       else
                          M         if ((L00045) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00045
                          M         else
                          M           if ((L00045) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00045
                          M           else
                          M             if ((L00045) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00045
                          M             else
                          M         bov     L00045
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((0)      == 0)
0009C2 A42A               M         btfss   PB01,  002h
                          M       else
                          M         btfsc   PB01,  002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00045
                          M       else
                          M         if ((L00045) < 1)
                          M         goto    L00045
                          M         else
                          M           if ((L00045) > $)
0009C4 EFE5 F004          M         goto    L00045
                          M           else
                          M             if ((L00045) < ($ - 3ffh))
                          M         goto    L00045
                          M             else
                          M         bra     L00045
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       else
                          M         L?GOTO  L00045
                          M       endif
                          M     endif
                      01154         ADD?BCB _GoreVar, 001h, _GoreVar
                          M     if ((_GoreVar) == (_GoreVar))
                          M       if ((001h) == 1)
                          M         CHK?RP  _GoreVar
                          M     if (((_GoreVar) & 8000h) != PREV_ALT)
                          M       if ((_GoreVar) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_GoreVar) & 8000h
                          M     endif
                          M     if ((((_GoreVar) & 0fffh) > BANKA_END) & (((_GoreVar) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_GoreVar) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_GoreVar)
                          M PREV_BANK = high (_GoreVar)
                          M       endif
                          M     endif
0009C8 2A44               M         incf    _GoreVar, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _GoreVar
                          M         addwf   _GoreVar, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _GoreVar
                          M         incf    _GoreVar, W
                          M         MOVE?AB _GoreVar
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _GoreVar
                          M         addwf   _GoreVar, W
                          M         MOVE?AB _GoreVar
                          M       endif
                          M     endif
                      01155         LABEL?L L00045  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00045
                          M         XALL
                          M     else
0009CA                    M L00045
                          M     endif
                      01156 
                      01157 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00178     if dole = 1 then dolevar = dolevar + 1
                      01158         CMPNE?TCL       _dole, 001h, L00047
                          M     if ((001h) == 0)
                          M         CLRWDT?
                          M         BIT?GOTO 1, PB01,  001h,  L00047
                          M     else
                          M       if ((001h) == 1)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, PB01,  001h,  L00047
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00047))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((0)      == 0)
                          M         btfss   PB01,  001h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         btfsc   PB01,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00047
                          M       else
                          M         if ((L00047) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00047
                          M         else
                          M           if ((L00047) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00047
                          M           else
                          M             if ((L00047) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00047
                          M             else
                          M         bov     L00047
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0009CA A22A               M         btfss   PB01,  001h
                          M       else
                          M         btfsc   PB01,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00047
                          M       else
                          M         if ((L00047) < 1)
                          M         goto    L00047
                          M         else
                          M           if ((L00047) > $)
0009CC EFE9 F004          M         goto    L00047
                          M           else
                          M             if ((L00047) < ($ - 3ffh))
                          M         goto    L00047
                          M             else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bra     L00047
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       else
                          M         L?GOTO  L00047
                          M       endif
                          M     endif
                      01159         ADD?BCB _DoleVar, 001h, _DoleVar
                          M     if ((_DoleVar) == (_DoleVar))
                          M       if ((001h) == 1)
                          M         CHK?RP  _DoleVar
                          M     if (((_DoleVar) & 8000h) != PREV_ALT)
                          M       if ((_DoleVar) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_DoleVar) & 8000h
                          M     endif
                          M     if ((((_DoleVar) & 0fffh) > BANKA_END) & (((_DoleVar) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_DoleVar) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_DoleVar)
                          M PREV_BANK = high (_DoleVar)
                          M       endif
                          M     endif
0009D0 2A43               M         incf    _DoleVar, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _DoleVar
                          M         addwf   _DoleVar, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _DoleVar
                          M         incf    _DoleVar, W
                          M         MOVE?AB _DoleVar
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _DoleVar
                          M         addwf   _DoleVar, W
                          M         MOVE?AB _DoleVar
                          M       endif
                          M     endif
                      01160         LABEL?L L00047  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00047
                          M         XALL
                          M     else
0009D2                    M L00047
                          M     endif
                      01161 
                      01162 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00179     if odrzavanje = 1 then odrzvar = odrzvar + 1  
                      01163         CMPNE?TCL       _odrzavanje, 001h, L00049
                          M     if ((001h) == 0)
                          M         CLRWDT?
                          M         BIT?GOTO 1, PB02,  002h,  L00049
                          M     else
                          M       if ((001h) == 1)
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 0, PB02,  002h,  L00049
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00049))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((0)      == 0)
                          M         btfss   PB02,  002h
                          M       else
                          M         btfsc   PB02,  002h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00049
                          M       else
                          M         if ((L00049) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00049
                          M         else
                          M           if ((L00049) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00049
                          M           else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if ((L00049) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00049
                          M             else
                          M         bov     L00049
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0009D2 A42B               M         btfss   PB02,  002h
                          M       else
                          M         btfsc   PB02,  002h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00049
                          M       else
                          M         if ((L00049) < 1)
                          M         goto    L00049
                          M         else
                          M           if ((L00049) > $)
0009D4 EFED F004          M         goto    L00049
                          M           else
                          M             if ((L00049) < ($ - 3ffh))
                          M         goto    L00049
                          M             else
                          M         bra     L00049
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M       else
                          M         L?GOTO  L00049
                          M       endif
                          M     endif
                      01164         ADD?BCB _OdrzVar, 001h, _OdrzVar
                          M     if ((_OdrzVar) == (_OdrzVar))
                          M       if ((001h) == 1)
                          M         CHK?RP  _OdrzVar
                          M     if (((_OdrzVar) & 8000h) != PREV_ALT)
                          M       if ((_OdrzVar) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_OdrzVar) & 8000h
                          M     endif
                          M     if ((((_OdrzVar) & 0fffh) > BANKA_END) & (((_OdrzVar) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_OdrzVar) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_OdrzVar)
                          M PREV_BANK = high (_OdrzVar)
                          M       endif
                          M     endif
0009D8 2A4D               M         incf    _OdrzVar, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _OdrzVar
                          M         addwf   _OdrzVar, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _OdrzVar
                          M         incf    _OdrzVar, W
                          M         MOVE?AB _OdrzVar
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _OdrzVar
                          M         addwf   _OdrzVar, W
                          M         MOVE?AB _OdrzVar
                          M       endif
                          M     endif
                      01165         LABEL?L L00049  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00049
                          M         XALL
                          M     else
0009DA                    M L00049
                          M     endif
                      01166 
                      01167 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00181     Lcdout $fe, 1,dec2 Levovar,dec2 okvar, dec2 de
                            snovar, dec2 gorevar,dec2 dolevar,dec2 odrzvar
                      01168         LCDOUT?C        0FEh
0009DA 0EFE               M         movlw   0FEh
                          M         L?CALL  LCDOUT
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009DC EC9F F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01169         LCDOUT?C        001h
0009E0 0E01               M         movlw   001h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
0009E2 EC9F F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M       endif
                          M     endif
                      01170         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
0009E6 0E02               M         movlw   low (002h)
0009E8 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01171         LCDOUTNUM?B     _LevoVar
                          M         MOVE?BN _LevoVar, R2
                          M         MOVE?BB _LevoVar, R2
0009EA C049 F01A          M         movff   _LevoVar, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
0009EE 6A1B               M         clrf    (R2)   + 1
0009F0 6A1C               M         clrf    (R2)   + 2
0009F2 6A1D               M         clrf    (R2)   + 3
                      01172         LCDOUTDEC?      
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
0009F4 0E3C               M         movlw   low (low (LCDOUTJ))
0009F6 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
0009F8 0E01               M         movlw   low (high (LCDOUTJ))
0009FA 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
0009FC EC0E F001          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01173         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000A00 0E02               M         movlw   low (002h)
000A02 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01174         LCDOUTNUM?B     _OkVar
                          M         MOVE?BN _OkVar, R2
                          M         MOVE?BB _OkVar, R2
000A04 C04E F01A          M         movff   _OkVar, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A08 6A1B               M         clrf    (R2)   + 1
000A0A 6A1C               M         clrf    (R2)   + 2
000A0C 6A1D               M         clrf    (R2)   + 3
                      01175         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A0E 0E3C               M         movlw   low (low (LCDOUTJ))
000A10 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000A12 0E01               M         movlw   low (high (LCDOUTJ))
000A14 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A16 EC0E F001          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01176         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000A1A 0E02               M         movlw   low (002h)
000A1C 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01177         LCDOUTNUM?B     _DesnoVar
                          M         MOVE?BN _DesnoVar, R2
                          M         MOVE?BB _DesnoVar, R2
000A1E C042 F01A          M         movff   _DesnoVar, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A22 6A1B               M         clrf    (R2)   + 1
000A24 6A1C               M         clrf    (R2)   + 2
000A26 6A1D               M         clrf    (R2)   + 3
                      01178         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A28 0E3C               M         movlw   low (low (LCDOUTJ))
000A2A 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000A2C 0E01               M         movlw   low (high (LCDOUTJ))
000A2E 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A30 EC0E F001          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01179         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000A34 0E02               M         movlw   low (002h)
000A36 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01180         LCDOUTNUM?B     _GoreVar
                          M         MOVE?BN _GoreVar, R2
                          M         MOVE?BB _GoreVar, R2
000A38 C044 F01A          M         movff   _GoreVar, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A3C 6A1B               M         clrf    (R2)   + 1
000A3E 6A1C               M         clrf    (R2)   + 2
000A40 6A1D               M         clrf    (R2)   + 3
                      01181         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A42 0E3C               M         movlw   low (low (LCDOUTJ))
000A44 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000A46 0E01               M         movlw   low (high (LCDOUTJ))
000A48 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A4A EC0E F001          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01182         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000A4E 0E02               M         movlw   low (002h)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A50 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01183         LCDOUTNUM?B     _DoleVar
                          M         MOVE?BN _DoleVar, R2
                          M         MOVE?BB _DoleVar, R2
000A52 C043 F01A          M         movff   _DoleVar, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000A56 6A1B               M         clrf    (R2)   + 1
000A58 6A1C               M         clrf    (R2)   + 2
000A5A 6A1D               M         clrf    (R2)   + 3
                      01184         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A5C 0E3C               M         movlw   low (low (LCDOUTJ))
000A5E 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000A60 0E01               M         movlw   low (high (LCDOUTJ))
000A62 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A64 EC0E F001          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01185         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000A68 0E02               M         movlw   low (002h)
000A6A 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01186         LCDOUTNUM?B     _OdrzVar
                          M         MOVE?BN _OdrzVar, R2
                          M         MOVE?BB _OdrzVar, R2
000A6C C04D F01A          M         movff   _OdrzVar, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000A70 6A1B               M         clrf    (R2)   + 1
000A72 6A1C               M         clrf    (R2)   + 2
000A74 6A1D               M         clrf    (R2)   + 3
                      01187         LCDOUTDEC?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000A76 0E3C               M         movlw   low (low (LCDOUTJ))
000A78 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000A7A 0E01               M         movlw   low (high (LCDOUTJ))
000A7C 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2DEC
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2DEC
                          M     else
                          M       if ((SEROUT2DEC) < 1)
                          M         call    SEROUT2DEC
                          M       else
                          M         if ((SEROUT2DEC) > $)
                          M         call    SEROUT2DEC
                          M         else
                          M           if ((SEROUT2DEC) < ($ - 3ffh))
000A7E EC0E F001          M         call    SEROUT2DEC
                          M           else
                          M         rcall   SEROUT2DEC
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01188 
                      01189 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00182     lcdout $fe,$c0, #tastlevo,#tastok,#tastdesno,#
                            tastgore,#tastdole,#tastodrzavanje,hex2 hours,hex2 minutes ,hex2 seconds  
                      01190         LCDOUT?C        0FEh
000A82 0EFE               M         movlw   0FEh
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A84 EC9F F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01191         LCDOUT?C        0C0h
000A88 0EC0               M         movlw   0C0h
                          M         L?CALL  LCDOUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUT
                          M     else
                          M       if ((LCDOUT) < 1)
                          M         call    LCDOUT
                          M       else
                          M         if ((LCDOUT) > $)
                          M         call    LCDOUT
                          M         else
                          M           if ((LCDOUT) < ($ - 3ffh))
000A8A EC9F F000          M         call    LCDOUT
                          M           else
                          M         rcall   LCDOUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01192         LCDOUTD?T       _TASTLEVO
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?TA PORTB, 001h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
000A8E 0E00               M         movlw   0
000A90 B281               M         btfsc   PORTB, 001h
000A92 0E01               M         movlw   1
                          M         L?CALL  LCDOUTDECB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUTDECB
                          M     else
                          M       if ((LCDOUTDECB) < 1)
                          M         call    LCDOUTDECB
                          M       else
                          M         if ((LCDOUTDECB) > $)
                          M         call    LCDOUTDECB
                          M         else
                          M           if ((LCDOUTDECB) < ($ - 3ffh))
000A94 EC7A F000          M         call    LCDOUTDECB
                          M           else
                          M         rcall   LCDOUTDECB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01193         LCDOUTD?T       _TASTOK
                          M         MOVE?TA PORTB, 002h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
000A98 0E00               M         movlw   0
000A9A B481               M         btfsc   PORTB, 002h
000A9C 0E01               M         movlw   1
                          M         L?CALL  LCDOUTDECB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUTDECB
                          M     else
                          M       if ((LCDOUTDECB) < 1)
                          M         call    LCDOUTDECB
                          M       else
                          M         if ((LCDOUTDECB) > $)
                          M         call    LCDOUTDECB
                          M         else
                          M           if ((LCDOUTDECB) < ($ - 3ffh))
000A9E EC7A F000          M         call    LCDOUTDECB
                          M           else
                          M         rcall   LCDOUTDECB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01194         LCDOUTD?T       _TASTDESNO
                          M         MOVE?TA PORTB, 004h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
000AA2 0E00               M         movlw   0
000AA4 B881               M         btfsc   PORTB, 004h
000AA6 0E01               M         movlw   1
                          M         L?CALL  LCDOUTDECB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUTDECB
                          M     else
                          M       if ((LCDOUTDECB) < 1)
                          M         call    LCDOUTDECB
                          M       else
                          M         if ((LCDOUTDECB) > $)
                          M         call    LCDOUTDECB
                          M         else
                          M           if ((LCDOUTDECB) < ($ - 3ffh))
000AA8 EC7A F000          M         call    LCDOUTDECB
                          M           else
                          M         rcall   LCDOUTDECB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01195         LCDOUTD?T       _TASTGORE
                          M         MOVE?TA PORTB, 006h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
000AAC 0E00               M         movlw   0
000AAE BC81               M         btfsc   PORTB, 006h
000AB0 0E01               M         movlw   1
                          M         L?CALL  LCDOUTDECB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUTDECB
                          M     else
                          M       if ((LCDOUTDECB) < 1)
                          M         call    LCDOUTDECB
                          M       else
                          M         if ((LCDOUTDECB) > $)
                          M         call    LCDOUTDECB
                          M         else
                          M           if ((LCDOUTDECB) < ($ - 3ffh))
000AB2 EC7A F000          M         call    LCDOUTDECB
                          M           else
                          M         rcall   LCDOUTDECB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01196         LCDOUTD?T       _TASTDOLE
                          M         MOVE?TA PORTB, 005h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
000AB6 0E00               M         movlw   0
000AB8 BA81               M         btfsc   PORTB, 005h
000ABA 0E01               M         movlw   1
                          M         L?CALL  LCDOUTDECB
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUTDECB
                          M     else
                          M       if ((LCDOUTDECB) < 1)
                          M         call    LCDOUTDECB
                          M       else
                          M         if ((LCDOUTDECB) > $)
                          M         call    LCDOUTDECB
                          M         else
                          M           if ((LCDOUTDECB) < ($ - 3ffh))
000ABC EC7A F000          M         call    LCDOUTDECB
                          M           else
                          M         rcall   LCDOUTDECB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01197         LCDOUTD?T       _TASTODRZAVANJE
                          M         MOVE?TA PORTB, 007h
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
000AC0 0E00               M         movlw   0
000AC2 BE81               M         btfsc   PORTB, 007h
000AC4 0E01               M         movlw   1
                          M         L?CALL  LCDOUTDECB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    LCDOUTDECB
                          M     else
                          M       if ((LCDOUTDECB) < 1)
                          M         call    LCDOUTDECB
                          M       else
                          M         if ((LCDOUTDECB) > $)
                          M         call    LCDOUTDECB
                          M         else
                          M           if ((LCDOUTDECB) < ($ - 3ffh))
000AC6 EC7A F000          M         call    LCDOUTDECB
                          M           else
                          M         rcall   LCDOUTDECB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01198         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000ACA 0E02               M         movlw   low (002h)
000ACC 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01199         LCDOUTNUM?B     _Hours
                          M         MOVE?BN _Hours, R2
                          M         MOVE?BB _Hours, R2
000ACE C045 F01A          M         movff   _Hours, R2
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000AD2 6A1B               M         clrf    (R2)   + 1
000AD4 6A1C               M         clrf    (R2)   + 2
000AD6 6A1D               M         clrf    (R2)   + 3
                      01200         LCDOUTHEX?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000AD8 0E3C               M         movlw   low (low (LCDOUTJ))
000ADA 6E0A               M         movwf   R8
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000ADC 0E01               M         movlw   low (high (LCDOUTJ))
000ADE 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2HEX
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2HEX
                          M     else
                          M       if ((SEROUT2HEX) < 1)
                          M         call    SEROUT2HEX
                          M       else
                          M         if ((SEROUT2HEX) > $)
                          M         call    SEROUT2HEX
                          M         else
                          M           if ((SEROUT2HEX) < ($ - 3ffh))
000AE0 ECF3 F000          M         call    SEROUT2HEX
                          M           else
                          M         rcall   SEROUT2HEX
                          M           endif
                          M         endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      01201         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000AE4 0E02               M         movlw   low (002h)
000AE6 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01202         LCDOUTNUM?B     _Minutes
                          M         MOVE?BN _Minutes, R2
                          M         MOVE?BB _Minutes, R2
000AE8 C04B F01A          M         movff   _Minutes, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000AEC 6A1B               M         clrf    (R2)   + 1
000AEE 6A1C               M         clrf    (R2)   + 2
000AF0 6A1D               M         clrf    (R2)   + 3
                      01203         LCDOUTHEX?      
                          M         MOVE?CW LCDOUTJ, R8
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 206


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000AF2 0E3C               M         movlw   low (low (LCDOUTJ))
000AF4 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 207


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         setf    (R8) + 1
                          M       else
000AF6 0E01               M         movlw   low (high (LCDOUTJ))
000AF8 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2HEX
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2HEX
                          M     else
                          M       if ((SEROUT2HEX) < 1)
                          M         call    SEROUT2HEX
                          M       else
                          M         if ((SEROUT2HEX) > $)
                          M         call    SEROUT2HEX
                          M         else
                          M           if ((SEROUT2HEX) < ($ - 3ffh))
000AFA ECF3 F000          M         call    SEROUT2HEX
                          M           else
                          M         rcall   SEROUT2HEX
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01204         LCDOUTCOUNT?C   002h
                          M         MOVE?CB 002h, R4 + 1
                          M         CHK?RP  R4 + 1
                          M     if (((R4 + 1) & 8000h) != PREV_ALT)
                          M       if ((R4 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R4 + 1) & 8000h
                          M     endif
                          M     if ((((R4 + 1) & 0fffh) > BANKA_END) & (((R4 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R4 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R4 + 1)
                          M PREV_BANK = high (R4 + 1)
                          M       endif
                          M     endif
                          M     if (low (002h) == 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 208


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         clrf    R4 + 1
                          M     else
                          M       if (low (002h) == 255)
                          M         setf    R4 + 1
                          M       else
000AFE 0E02               M         movlw   low (002h)
000B00 6E03               M         movwf   R4 + 1
                          M       endif
                          M     endif
                      01205         LCDOUTNUM?B     _Seconds
                          M         MOVE?BN _Seconds, R2
                          M         MOVE?BB _Seconds, R2
000B02 C04F F01A          M         movff   _Seconds, R2
                          M         CHK?RP  R2
                          M     if (((R2)    & 8000h) != PREV_ALT)
                          M       if ((R2)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R2)    & 8000h
                          M     endif
                          M     if ((((R2)    & 0fffh) > BANKA_END) & (((R2)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R2)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R2)
                          M PREV_BANK = high (R2)
                          M       endif
                          M     endif
000B06 6A1B               M         clrf    (R2)   + 1
000B08 6A1C               M         clrf    (R2)   + 2
000B0A 6A1D               M         clrf    (R2)   + 3
                      01206         LCDOUTHEX?      
                          M         MOVE?CW LCDOUTJ, R8
                          M     ifdef USE_LINKER
                          M         CHK?RP  R8
                          M         movlw   low (LCDOUTJ)
                          M         movwf   R8
                          M         movlw   high (LCDOUTJ)
                          M         movwf   (R8)   + 1
                          M     else
                          M         MOVE?CB low (LCDOUTJ), R8
                          M         CHK?RP  R8
                          M     if (((R8)    & 8000h) != PREV_ALT)
                          M       if ((R8)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R8)    & 8000h
                          M     endif
                          M     if ((((R8)    & 0fffh) > BANKA_END) & (((R8)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R8)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R8)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 209


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (R8)
                          M       endif
                          M     endif
                          M     if (low (low (LCDOUTJ)) == 0)
                          M         clrf    R8
                          M     else
                          M       if (low (low (LCDOUTJ)) == 255)
                          M         setf    R8
                          M       else
000B0C 0E3C               M         movlw   low (low (LCDOUTJ))
000B0E 6E0A               M         movwf   R8
                          M       endif
                          M     endif
                          M         MOVE?CB high (LCDOUTJ), (R8) + 1
                          M         CHK?RP  (R8) + 1
                          M     if ((((R8) + 1) & 8000h) != PREV_ALT)
                          M       if (((R8) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R8) + 1) & 8000h
                          M     endif
                          M     if (((((R8) + 1) & 0fffh) > BANKA_END) & ((((R8) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R8) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R8) + 1)
                          M PREV_BANK = high ((R8) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (LCDOUTJ)) == 0)
                          M         clrf    (R8) + 1
                          M     else
                          M       if (low (high (LCDOUTJ)) == 255)
                          M         setf    (R8) + 1
                          M       else
000B10 0E01               M         movlw   low (high (LCDOUTJ))
000B12 6E0B               M         movwf   (R8) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  SEROUT2HEX
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    SEROUT2HEX
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 210


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((SEROUT2HEX) < 1)
                          M         call    SEROUT2HEX
                          M       else
                          M         if ((SEROUT2HEX) > $)
                          M         call    SEROUT2HEX
                          M         else
                          M           if ((SEROUT2HEX) < ($ - 3ffh))
000B14 ECF3 F000          M         call    SEROUT2HEX
                          M           else
                          M         rcall   SEROUT2HEX
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01207 
                      01208 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00183       LMcnt = LMcnt + 1
                      01209         ADD?BCB _LMcnt, 001h, _LMcnt
                          M     if ((_LMcnt) == (_LMcnt))
                          M       if ((001h) == 1)
                          M         CHK?RP  _LMcnt
                          M     if (((_LMcnt) & 8000h) != PREV_ALT)
                          M       if ((_LMcnt) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_LMcnt) & 8000h
                          M     endif
                          M     if ((((_LMcnt) & 0fffh) > BANKA_END) & (((_LMcnt) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_LMcnt) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_LMcnt)
                          M PREV_BANK = high (_LMcnt)
                          M       endif
                          M     endif
000B18 2A4A               M         incf    _LMcnt, F
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _LMcnt
                          M         addwf   _LMcnt, F
                          M       endif
                          M     else
                          M       if ((001h) == 1)
                          M         CHK?RP  _LMcnt
                          M         incf    _LMcnt, W
                          M         MOVE?AB _LMcnt
                          M       else
                          M         movlw   001h
                          M         CHK?RP  _LMcnt
                          M         addwf   _LMcnt, W
                          M         MOVE?AB _LMcnt
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 211


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01210 
                      01211 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00184      if LMcnt = 10 then
                      01212         CMPNE?BCL       _LMcnt, 00Ah, L00051
                          M     if (((00Ah) >= 0) & ((00Ah) < 100h))
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         MOVE?BA _LMcnt
                          M         CHK?RP  _LMcnt
                          M     if (((_LMcnt) & 8000h) != PREV_ALT)
                          M       if ((_LMcnt) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_LMcnt) & 8000h
                          M     endif
                          M     if ((((_LMcnt) & 0fffh) > BANKA_END) & (((_LMcnt) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_LMcnt) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_LMcnt)
                          M PREV_BANK = high (_LMcnt)
                          M       endif
                          M     endif
000B1A 504A               M         movf    _LMcnt, W
000B1C 080A               M         sublw   00Ah
                          M         BIT?GOTO 0, STATUS, Z, L00051
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00051))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00051
                          M       else
                          M         if ((L00051) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00051
                          M         else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 212


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((L00051) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00051
                          M           else
                          M             if ((L00051) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00051
                          M             else
                          M         bov     L00051
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000B1E A4D8               M         btfss   STATUS, Z
                          M       else
                          M         btfsc   STATUS, Z
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00051
                          M       else
                          M         if ((L00051) < 1)
                          M         goto    L00051
                          M         else
                          M           if ((L00051) > $)
000B20 EF97 F005          M         goto    L00051
                          M           else
                          M             if ((L00051) < ($ - 3ffh))
                          M         goto    L00051
                          M             else
                          M         bra     L00051
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M         L?GOTO  L00051
                          M     endif
                      01213 
                      01214 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00185           toggle relej1
                      01215         TOGGLE?T        _RELEJ1
                          M         BIT?FLIP PORTC, 004h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 213


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  (PORTC) + ((004h)  >> 3)
                          M     if ((((PORTC) + ((004h) >> 3)) & 8000h) != PREV_ALT)
                          M       if (((PORTC) + ((004h) >> 3)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((PORTC) + ((004h) >> 3)) & 8000h
                          M     endif
                          M     if (((((PORTC) + ((004h) >> 3)) & 0fffh) > BANKA_END) & ((((PORTC) + ((004h) >> 3)) & 0fffh) < (0f01
                            h + BANKA_END)))
                          M       if ((((PORTC) + ((004h) >> 3)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((PORTC) + ((004h) >> 3))
                          M PREV_BANK = high ((PORTC) + ((004h) >> 3))
                          M       endif
                          M     endif
000B24 7882               M         btg     (PORTC) + ((004h)  >> 3), (004h)  & 7
                          M         MOVE?CT 0, ((PORTC) + 12h), 004h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 004h
                          M     else
000B26 9894               M         bcf     ((PORTC) + 12h), 004h
                          M     endif
                      01216 
                      01217 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00186           toggle relej2
                      01218         TOGGLE?T        _RELEJ2
                          M         BIT?FLIP PORTC, 005h
                          M         CHK?RP  (PORTC) + ((005h)  >> 3)
                          M     if ((((PORTC) + ((005h) >> 3)) & 8000h) != PREV_ALT)
                          M       if (((PORTC) + ((005h) >> 3)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((PORTC) + ((005h) >> 3)) & 8000h
                          M     endif
                          M     if (((((PORTC) + ((005h) >> 3)) & 0fffh) > BANKA_END) & ((((PORTC) + ((005h) >> 3)) & 0fffh) < (0f01
                            h + BANKA_END)))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 214


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((((PORTC) + ((005h) >> 3)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((PORTC) + ((005h) >> 3))
                          M PREV_BANK = high ((PORTC) + ((005h) >> 3))
                          M       endif
                          M     endif
000B28 7A82               M         btg     (PORTC) + ((005h)  >> 3), (005h)  & 7
                          M         MOVE?CT 0, ((PORTC) + 12h), 005h
                          M         CHK?RP  ((PORTC) + 12h)
                          M     if (((((PORTC) + 12h)) & 8000h) != PREV_ALT)
                          M       if ((((PORTC) + 12h)) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (((PORTC) + 12h)) & 8000h
                          M     endif
                          M     if ((((((PORTC) + 12h)) & 0fffh) > BANKA_END) & (((((PORTC) + 12h)) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((((PORTC) + 12h)) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (((PORTC) + 12h))
                          M PREV_BANK = high (((PORTC) + 12h))
                          M       endif
                          M     endif
                          M     if (((0)   & 1) == 1)
                          M         bsf     ((PORTC) + 12h), 005h
                          M     else
000B2A 9A94               M         bcf     ((PORTC) + 12h), 005h
                          M     endif
                      01219 
                      01220 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00189           lmcnt = 0
                      01221         MOVE?CB 000h, _LMcnt
                          M         CHK?RP  _LMcnt
                          M     if (((_LMcnt) & 8000h) != PREV_ALT)
                          M       if ((_LMcnt) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_LMcnt) & 8000h
                          M     endif
                          M     if ((((_LMcnt) & 0fffh) > BANKA_END) & (((_LMcnt) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_LMcnt) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_LMcnt)
                          M PREV_BANK = high (_LMcnt)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B2C 6A4A               M         clrf    _LMcnt
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _LMcnt
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _LMcnt
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 215


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
                      01222 
                      01223 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00190      endif 
                      01224         LABEL?L L00051  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00051
                          M         XALL
                          M     else
000B2E                    M L00051
                          M     endif
                      01225 
                      01226 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00191    gosub UzmiVreme
                      01227         GOSUB?L _UzmiVreme
  0000                    M     local dlabel
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M       ifdef DEBUG_STACK_ADDR
                          M         bcf     STATUS, C
                          M         rlcf    DEBUG_STACK, W
                          M         addlw   DEBUG_STACK_ADDR
                          M         movwf   FSR0L
                          M         clrf    FSR0H
                          M         movlw   low (dlabel)
                          M         movwf   POSTINC0
                          M         movlw   high (dlabel)
                          M         movwf   INDF0
                          M       endif
                          M         incf    DEBUG_STACK, F
                          M     endif
                          M         L?CALL  _UzmiVreme
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    _UzmiVreme
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 216


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if ((_UzmiVreme) < 1)
                          M         call    _UzmiVreme
                          M       else
                          M         if ((_UzmiVreme) > $)
000B2E ECD1 F005          M         call    _UzmiVreme
                          M         else
                          M           if ((_UzmiVreme) < ($ - 3ffh))
                          M         call    _UzmiVreme
                          M           else
                          M         rcall   _UzmiVreme
                          M           endif
                          M         endif
                          M       endif
                          M     endif
000B32                    M dlabel
                      01228 
                      01229 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00193       pause 100
                      01230         PAUSE?C 064h
                          M     if (((064h) >> 8) == 0)
                          M         MOVE?CA 064h
000B32 0E64               M         movlw   low (064h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000B34 EC6D F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((064h) >> 16) == 0)
                          M         MOVE?CB high (064h), R1 + 1
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 217


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?CA low (064h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (064h) >> 24, R1 + 3
                          M         MOVE?CB upper (064h), R1 + 2
                          M         MOVE?CB high (064h), R1 + 1
                          M         MOVE?CA low (064h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01231 
                      01232 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00195   Goto Main
                      01233         GOTO?L  _Main
                          M         L?GOTO  _Main
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_Main))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _Main
                          M     else
                          M       if ((_Main) < 1)
                          M         goto    _Main
                          M       else
                          M         if ((_Main) > $)
                          M         goto    _Main
                          M         else
                          M           if ((_Main) < ($ - 3ffh))
                          M         goto    _Main
                          M           else
000B38 D736               M         bra     _Main
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01234 
                      01235 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00197   UpisiVreme:
                      01236 
                      01237         LABEL?L _UpisiVreme     
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 218


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _UpisiVreme
                          M         XALL
                          M     else
000B3A                    M _UpisiVreme
                          M     endif
                      01238 
                      01239 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00198       Seconds        = $00
                      01240         MOVE?CB 000h, _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B3A 6A4F               M         clrf    _Seconds
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Seconds
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Seconds
                          M       endif
                          M     endif
                      01241 
                      01242 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00199       Minutes        = $00
                      01243         MOVE?CB 000h, _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 219


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B3C 6A4B               M         clrf    _Minutes
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Minutes
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Minutes
                          M       endif
                          M     endif
                      01244 
                      01245 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00200       Hours          = $00
                      01246         MOVE?CB 000h, _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000B3E 6A45               M         clrf    _Hours
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    _Hours
                          M       else
                          M         movlw   low (000h)
                          M         movwf   _Hours
                          M       endif
                          M     endif
                      01247 
                      01248 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00201       Days           = $01
                      01249         MOVE?CB 001h, _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 220


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Days
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Days
                          M       else
000B40 0E01               M         movlw   low (001h)
000B42 6E41               M         movwf   _Days
                          M       endif
                          M     endif
                      01250 
                      01251 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00202       Years          = $01
                      01252         MOVE?CB 001h, _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Years
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Years
                          M       else
000B44 0E01               M         movlw   low (001h)
000B46 6E53               M         movwf   _Years
                          M       endif
                          M     endif
                      01253 
                      01254 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00203       Month          = $01
                      01255         MOVE?CB 001h, _Month
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 221


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _Month
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _Month
                          M       else
000B48 0E01               M         movlw   low (001h)
000B4A 6E4C               M         movwf   _Month
                          M       endif
                          M     endif
                      01256 
                      01257 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00204       I2cwrite sda,scl,rtc,$02,[seconds,minutes,ho
                            urs,days,$02,month,years]
                      01258         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000B4C 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000B4E 6E0E               M         movwf   RR1
000B50 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000B52 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000B54 0E01               M         movlw   01h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 222


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000B56 6E0C               M         movwf   RM1
                      01259         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000B58 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000B5A 6E0F               M         movwf   RR2
000B5C 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000B5E 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
000B60 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 223


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000B62 6E0D               M         movwf   RM2
                      01260         I2CWRITE?C      _RTC
                          M     if ((high (_RTC)) != 0)
                          M         movlw   (_RTC) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_RTC)
000B64 0EA2               M         movlw   low (low (_RTC))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B66 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01261         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 224


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000B6A 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B6C EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01262         I2CWRITE?B      _Seconds
                          M         MOVE?BA _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
000B70 504F               M         movf    _Seconds, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 225


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B72 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01263         I2CWRITE?B      _Minutes
                          M         MOVE?BA _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000B76 504B               M         movf    _Minutes, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 226


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B78 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01264         I2CWRITE?B      _Hours
                          M         MOVE?BA _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000B7C 5045               M         movf    _Hours, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 227


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B7E EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01265         I2CWRITE?B      _Days
                          M         MOVE?BA _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
000B82 5041               M         movf    _Days, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B84 EC1E F000          M         call    I2CWRITE
                          M           else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 228


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01266         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000B88 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B8A EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01267         I2CWRITE?B      _Month
                          M         MOVE?BA _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 229


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
000B8E 504C               M         movf    _Month, W
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000B90 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01268         I2CWRITES?B     _Years
                          M         MOVE?BA _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
000B94 5053               M         movf    _Years, W
                          M         L?CALL  I2CWRITES
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 230


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITES
                          M     else
                          M       if ((I2CWRITES) < 1)
                          M         call    I2CWRITES
                          M       else
                          M         if ((I2CWRITES) > $)
                          M         call    I2CWRITES
                          M         else
                          M           if ((I2CWRITES) < ($ - 3ffh))
000B96 EC1C F000          M         call    I2CWRITES
                          M           else
                          M         rcall   I2CWRITES
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01269 
                      01270 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00205       PAUSE 10 
                      01271         PAUSE?C 00Ah
                          M     if (((00Ah) >> 8) == 0)
                          M         MOVE?CA 00Ah
000B9A 0E0A               M         movlw   low (00Ah)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 231


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B9C EC6D F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((00Ah) >> 16) == 0)
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (00Ah) >> 24, R1 + 3
                          M         MOVE?CB upper (00Ah), R1 + 2
                          M         MOVE?CB high (00Ah), R1 + 1
                          M         MOVE?CA low (00Ah)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01272 
                      01273 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00206   return 
                      01274         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000BA0 0012               M         return
                      01275 
                      01276 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00208   UzmiVreme: 
                      01277 
                      01278         LABEL?L _UzmiVreme      
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _UzmiVreme
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 232


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         XALL
                          M     else
000BA2                    M _UzmiVreme
                          M     endif
                      01279 
                      01280 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00209       PAUSE 50
                      01281         PAUSE?C 032h
                          M     if (((032h) >> 8) == 0)
                          M         MOVE?CA 032h
000BA2 0E32               M         movlw   low (032h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
                          M           if ((PAUSEB) < ($ - 3ffh))
000BA4 EC6D F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((032h) >> 16) == 0)
                          M         MOVE?CB high (032h), R1 + 1
                          M         MOVE?CA low (032h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (032h) >> 24, R1 + 3
                          M         MOVE?CB upper (032h), R1 + 2
                          M         MOVE?CB high (032h), R1 + 1
                          M         MOVE?CA low (032h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01282 
                      01283 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00210       i2cread sda,scl,rtc,$02,[seconds,minutes,hou
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 233


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            rs,days,temp,month,years]
                      01284         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000BA8 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000BAA 6E0E               M         movwf   RR1
000BAC 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000BAE 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000BB0 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000BB2 6E0C               M         movwf   RM1
                      01285         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000BB4 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 234


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000BB6 6E0F               M         movwf   RR2
000BB8 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000BBA 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
000BBC 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000BBE 6E0D               M         movwf   RM2
                      01286         I2CWRITE?C      _RTC
                          M     if ((high (_RTC)) != 0)
                          M         movlw   (_RTC) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_RTC)
000BC0 0EA2               M         movlw   low (low (_RTC))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 235


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000BC2 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01287         I2CWRITE?C      002h
                          M     if ((high (002h)) != 0)
                          M         movlw   (002h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (002h)
000BC6 0E02               M         movlw   low (low (002h))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000BC8 EC1E F000          M         call    I2CWRITE
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 236


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01288         I2CREAD?B       _Seconds
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BCC EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Seconds
                          M         CHK?RP  _Seconds
                          M     if (((_Seconds) & 8000h) != PREV_ALT)
                          M       if ((_Seconds) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Seconds) & 8000h
                          M     endif
                          M     if ((((_Seconds) & 0fffh) > BANKA_END) & (((_Seconds) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Seconds) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Seconds)
                          M PREV_BANK = high (_Seconds)
                          M       endif
                          M     endif
000BD0 6E4F               M         movwf   _Seconds
                      01289         I2CREAD?B       _Minutes
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 237


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BD2 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Minutes
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
000BD6 6E4B               M         movwf   _Minutes
                      01290         I2CREAD?B       _Hours
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 238


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BD8 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Hours
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
000BDC 6E45               M         movwf   _Hours
                      01291         I2CREAD?B       _Days
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 239


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BDE EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Days
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
000BE2 6E41               M         movwf   _Days
                      01292         I2CREAD?B       _Temp
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 240


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BE4 EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Temp
                          M         CHK?RP  _Temp
                          M     if (((_Temp) & 8000h) != PREV_ALT)
                          M       if ((_Temp) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Temp) & 8000h
                          M     endif
                          M     if ((((_Temp) & 0fffh) > BANKA_END) & (((_Temp) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Temp) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Temp)
                          M PREV_BANK = high (_Temp)
                          M       endif
                          M     endif
000BE8 6E50               M         movwf   _Temp
                      01293         I2CREAD?B       _Month
                          M         L?CALL  I2CREAD
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREAD
                          M     else
                          M       if ((I2CREAD) < 1)
                          M         call    I2CREAD
                          M       else
                          M         if ((I2CREAD) > $)
                          M         call    I2CREAD
                          M         else
                          M           if ((I2CREAD) < ($ - 3ffh))
000BEA EC05 F000          M         call    I2CREAD
                          M           else
                          M         rcall   I2CREAD
                          M           endif
                          M         endif
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 241


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         MOVE?AB _Month
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
000BEE 6E4C               M         movwf   _Month
                      01294         I2CREADS?B      _Years
                          M         L?CALL  I2CREADS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
000BF0 EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Years
                          M         CHK?RP  _Years
                          M     if (((_Years) & 8000h) != PREV_ALT)
                          M       if ((_Years) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 242


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (_Years) & 8000h
                          M     endif
                          M     if ((((_Years) & 0fffh) > BANKA_END) & (((_Years) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Years) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Years)
                          M PREV_BANK = high (_Years)
                          M       endif
                          M     endif
000BF4 6E53               M         movwf   _Years
                      01295 
                      01296 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01297         MOVE?CT 000h, _Minutes??7
                          M         CHK?RP  _Minutes
                          M     if (((_Minutes) & 8000h) != PREV_ALT)
                          M       if ((_Minutes) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Minutes) & 8000h
                          M     endif
                          M     if ((((_Minutes) & 0fffh) > BANKA_END) & (((_Minutes) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Minutes) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Minutes)
                          M PREV_BANK = high (_Minutes)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Minutes, 007h
                          M     else
000BF6 9E4B               M         bcf     _Minutes, 007h
                          M     endif
                      01298 
                      01299 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01300         MOVE?CT 000h, _Hours??7
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 243


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((000h) & 1) == 1)
                          M         bsf     _Hours, 007h
                          M     else
000BF8 9E45               M         bcf     _Hours, 007h
                          M     endif
                      01301 
                      01302 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01303         MOVE?CT 000h, _Hours??6
                          M         CHK?RP  _Hours
                          M     if (((_Hours) & 8000h) != PREV_ALT)
                          M       if ((_Hours) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Hours) & 8000h
                          M     endif
                          M     if ((((_Hours) & 0fffh) > BANKA_END) & (((_Hours) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Hours) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Hours)
                          M PREV_BANK = high (_Hours)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Hours, 006h
                          M     else
000BFA 9C45               M         bcf     _Hours, 006h
                          M     endif
                      01304 
                      01305 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01306         MOVE?CT 000h, _Days??7
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Days,  007h
                          M     else
000BFC 9E41               M         bcf     _Days,  007h
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 244


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01307 
                      01308 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01309         MOVE?CT 000h, _Days??6
                          M         CHK?RP  _Days
                          M     if (((_Days) & 8000h) != PREV_ALT)
                          M       if ((_Days) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Days) & 8000h
                          M     endif
                          M     if ((((_Days) & 0fffh) > BANKA_END) & (((_Days) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Days) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Days)
                          M PREV_BANK = high (_Days)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Days,  006h
                          M     else
000BFE 9C41               M         bcf     _Days,  006h
                          M     endif
                      01310 
                      01311 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01312         MOVE?CT 000h, _Month??7
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Month, 007h
                          M     else
000C00 9E4C               M         bcf     _Month, 007h
                          M     endif
                      01313 
                      01314 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01315         MOVE?CT 000h, _Month??6
                          M         CHK?RP  _Month
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 245


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Month, 006h
                          M     else
000C02 9C4C               M         bcf     _Month, 006h
                          M     endif
                      01316 
                      01317 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00211       minutes.7=0:hours.7=0:hours.6=0:days.7=0:day
                            s.6=0:month.7=0:month.6=0:month.5=0
                      01318         MOVE?CT 000h, _Month??5
                          M         CHK?RP  _Month
                          M     if (((_Month) & 8000h) != PREV_ALT)
                          M       if ((_Month) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Month) & 8000h
                          M     endif
                          M     if ((((_Month) & 0fffh) > BANKA_END) & (((_Month) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Month) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Month)
                          M PREV_BANK = high (_Month)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     _Month, 005h
                          M     else
000C04 9A4C               M         bcf     _Month, 005h
                          M     endif
                      01319 
                      01320 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00212   return
                      01321         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 246


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000C06 0012               M         return
                      01322 
                      01323 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00214   OcitajTemperaturu:
                      01324 
                      01325         LABEL?L _OcitajTemperaturu      
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _OcitajTemperaturu
                          M         XALL
                          M     else
000C08                    M _OcitajTemperaturu
                          M     endif
                      01326 
                      01327 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00215       PAUSE 50
                      01328         PAUSE?C 032h
                          M     if (((032h) >> 8) == 0)
                          M         MOVE?CA 032h
000C08 0E32               M         movlw   low (032h)
                          M         L?CALL  PAUSEB
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEB
                          M     else
                          M       if ((PAUSEB) < 1)
                          M         call    PAUSEB
                          M       else
                          M         if ((PAUSEB) > $)
                          M         call    PAUSEB
                          M         else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 247


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((PAUSEB) < ($ - 3ffh))
000C0A EC6D F001          M         call    PAUSEB
                          M           else
                          M         rcall   PAUSEB
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     else
                          M       if (((032h) >> 16) == 0)
                          M         MOVE?CB high (032h), R1 + 1
                          M         MOVE?CA low (032h)
                          M         L?CALL  PAUSEW
                          M       else
                          M         MOVE?CB (032h) >> 24, R1 + 3
                          M         MOVE?CB upper (032h), R1 + 2
                          M         MOVE?CB high (032h), R1 + 1
                          M         MOVE?CA low (032h)
                          M         L?CALL  PAUSE
                          M       endif
                          M     endif
                      01329 
                      01330 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00216       I2CREAD  sda, scl, lm75, 0,[Temperatura]
                      01331         I2CDATA?T       _SDA
                          M         BIT?R1  PORTC, 000h
000C0E 0E82               M         movlw   low ((PORTC) + ((000h)  >> 3))
                          M         CHK?RP  RR1
                          M     if (((RR1)   & 8000h) != PREV_ALT)
                          M       if ((RR1)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR1)   & 8000h
                          M     endif
                          M     if ((((RR1)   & 0fffh) > BANKA_END) & (((RR1)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR1)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR1)
                          M PREV_BANK = high (RR1)
                          M       endif
                          M     endif
000C10 6E0E               M         movwf   RR1
000C12 0E0F               M         movlw   high ((PORTC) + ((000h)  >> 3))
000C14 6E10               M         movwf   RS1
                          M         BIT?W   000h
                          M     if (((000h)  & 7) == 0)
000C16 0E01               M         movlw   01h
                          M     endif
                          M     if (((000h)  & 7) == 1)
                          M         movlw   02h
                          M     endif
                          M     if (((000h)  & 7) == 2)
                          M         movlw   04h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 248


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((000h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((000h)  & 7) == 4)
                          M         movlw   10h
                          M     endif
                          M     if (((000h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((000h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((000h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000C18 6E0C               M         movwf   RM1
                      01332         I2CCLOCK?T      _SCL
                          M         BIT?R2  PORTC, 001h
000C1A 0E82               M         movlw   low ((PORTC) + ((001h)  >> 3))
                          M         CHK?RP  RR2
                          M     if (((RR2)   & 8000h) != PREV_ALT)
                          M       if ((RR2)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RR2)   & 8000h
                          M     endif
                          M     if ((((RR2)   & 0fffh) > BANKA_END) & (((RR2)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RR2)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RR2)
                          M PREV_BANK = high (RR2)
                          M       endif
                          M     endif
000C1C 6E0F               M         movwf   RR2
000C1E 0E0F               M         movlw   high ((PORTC) + ((001h)  >> 3))
000C20 6E11               M         movwf   RS2
                          M         BIT?W   001h
                          M     if (((001h)  & 7) == 0)
                          M         movlw   01h
                          M     endif
                          M     if (((001h)  & 7) == 1)
000C22 0E02               M         movlw   02h
                          M     endif
                          M     if (((001h)  & 7) == 2)
                          M         movlw   04h
                          M     endif
                          M     if (((001h)  & 7) == 3)
                          M         movlw   08h
                          M     endif
                          M     if (((001h)  & 7) == 4)
                          M         movlw   10h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 249


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((001h)  & 7) == 5)
                          M         movlw   20h
                          M     endif
                          M     if (((001h)  & 7) == 6)
                          M         movlw   40h
                          M     endif
                          M     if (((001h)  & 7) == 7)
                          M         movlw   80h
                          M     endif
000C24 6E0D               M         movwf   RM2
                      01333         I2CWRITE?C      _LM75
                          M     if ((high (_LM75)) != 0)
                          M         movlw   (_LM75) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (_LM75)
000C26 0E90               M         movlw   low (low (_LM75))
                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000C28 EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01334         I2CWRITE?C      000h
                          M     if ((high (000h)) != 0)
                          M         movlw   (000h) >> 8
                          M         L?CALL  I2CWRITE
                          M     endif
                          M         MOVE?CA low (000h)
000C2C 0E00               M         movlw   low (low (000h))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 250


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?CALL  I2CWRITE
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CWRITE
                          M     else
                          M       if ((I2CWRITE) < 1)
                          M         call    I2CWRITE
                          M       else
                          M         if ((I2CWRITE) > $)
                          M         call    I2CWRITE
                          M         else
                          M           if ((I2CWRITE) < ($ - 3ffh))
000C2E EC1E F000          M         call    I2CWRITE
                          M           else
                          M         rcall   I2CWRITE
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01335         I2CREADS?B      _Temperatura
                          M         L?CALL  I2CREADS
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    I2CREADS
                          M     else
                          M       if ((I2CREADS) < 1)
                          M         call    I2CREADS
                          M       else
                          M         if ((I2CREADS) > $)
                          M         call    I2CREADS
                          M         else
                          M           if ((I2CREADS) < ($ - 3ffh))
000C32 EC03 F000          M         call    I2CREADS
                          M           else
                          M         rcall   I2CREADS
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 251


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Temperatura
                          M         CHK?RP  _Temperatura
                          M     if (((_Temperatura) & 8000h) != PREV_ALT)
                          M       if ((_Temperatura) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Temperatura) & 8000h
                          M     endif
                          M     if ((((_Temperatura) & 0fffh) > BANKA_END) & (((_Temperatura) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Temperatura) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Temperatura)
                          M PREV_BANK = high (_Temperatura)
                          M       endif
                          M     endif
000C36 6E51               M         movwf   _Temperatura
                      01336 
                      01337 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00217   return 
                      01338         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000C38 0012               M         return
                      01339 
                      01340 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00219   OcitajTastere:
                      01341 
                      01342         LABEL?L _OcitajTastere  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 252


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M _OcitajTastere
                          M         XALL
                          M     else
000C3A                    M _OcitajTastere
                          M     endif
                      01343 
                      01344 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00220       NovoStanjeDesno         =  tastdesno
                      01345         MOVE?TT _TASTDESNO, _NovoStanjeDesno
                          M     if (((PORTB) <= BANKA_END) | ((PORTB) >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
000C3A B881               M         btfsc   PORTB, 004h
000C3C 882A               M         bsf     PB01,   004h
000C3E A881               M         btfss   PORTB, 004h
000C40 982A               M         bcf     PB01,   004h
                          M     else
                          M       if (((PORTB) & 0f00h) == ((PB01)   & 0f00h))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 004h
                          M         bsf     PB01,   004h
                          M         btfss   PORTB, 004h
                          M         bcf     PB01,   004h
                          M       else
                          M           if (((PB01)   <= BANKA_END) | ((PB01)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 004h
                          M         bsf     PB01,   004h
                          M         btfss   PORTB, 004h
                          M         bcf     PB01,   004h
                          M           else
                          M         MOVE?TA PORTB, 004h
                          M         MOVE?AT PB01,   004h
                          M           endif
                          M       endif
                          M     endif
                      01346 
                      01347 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00221       NovoStanjeLevo          =  tastlevo
                      01348         MOVE?TT _TASTLEVO, _NovoStanjeLevo
                          M     if (((PORTB) <= BANKA_END) | ((PORTB) >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 253


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
000C42 B281               M         btfsc   PORTB, 001h
000C44 8E2A               M         bsf     PB01,   007h
000C46 A281               M         btfss   PORTB, 001h
000C48 9E2A               M         bcf     PB01,   007h
                          M     else
                          M       if (((PORTB) & 0f00h) == ((PB01)   & 0f00h))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 001h
                          M         bsf     PB01,   007h
                          M         btfss   PORTB, 001h
                          M         bcf     PB01,   007h
                          M       else
                          M           if (((PB01)   <= BANKA_END) | ((PB01)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 001h
                          M         bsf     PB01,   007h
                          M         btfss   PORTB, 001h
                          M         bcf     PB01,   007h
                          M           else
                          M         MOVE?TA PORTB, 001h
                          M         MOVE?AT PB01,   007h
                          M           endif
                          M       endif
                          M     endif
                      01349 
                      01350 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00222       NovoStanjeGore          =  tastgore
                      01351         MOVE?TT _TASTGORE, _NovoStanjeGore
                          M     if (((PORTB) <= BANKA_END) | ((PORTB) >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 254


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
000C4A BC81               M         btfsc   PORTB, 006h
000C4C 8C2A               M         bsf     PB01,   006h
000C4E AC81               M         btfss   PORTB, 006h
000C50 9C2A               M         bcf     PB01,   006h
                          M     else
                          M       if (((PORTB) & 0f00h) == ((PB01)   & 0f00h))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 006h
                          M         bsf     PB01,   006h
                          M         btfss   PORTB, 006h
                          M         bcf     PB01,   006h
                          M       else
                          M           if (((PB01)   <= BANKA_END) | ((PB01)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 006h
                          M         bsf     PB01,   006h
                          M         btfss   PORTB, 006h
                          M         bcf     PB01,   006h
                          M           else
                          M         MOVE?TA PORTB, 006h
                          M         MOVE?AT PB01,   006h
                          M           endif
                          M       endif
                          M     endif
                      01352 
                      01353 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00223       NovoStanjeDole          =  tastdole
                      01354         MOVE?TT _TASTDOLE, _NovoStanjeDole
                          M     if (((PORTB) <= BANKA_END) | ((PORTB) >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
000C52 BA81               M         btfsc   PORTB, 005h
000C54 8A2A               M         bsf     PB01,   005h
000C56 AA81               M         btfss   PORTB, 005h
000C58 9A2A               M         bcf     PB01,   005h
                          M     else
                          M       if (((PORTB) & 0f00h) == ((PB01)   & 0f00h))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 255


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 005h
                          M         bsf     PB01,   005h
                          M         btfss   PORTB, 005h
                          M         bcf     PB01,   005h
                          M       else
                          M           if (((PB01)   <= BANKA_END) | ((PB01)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 005h
                          M         bsf     PB01,   005h
                          M         btfss   PORTB, 005h
                          M         bcf     PB01,   005h
                          M           else
                          M         MOVE?TA PORTB, 005h
                          M         MOVE?AT PB01,   005h
                          M           endif
                          M       endif
                          M     endif
                      01355 
                      01356 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00224       NovoStanjeOk            =  tastok
                      01357         MOVE?TT _TASTOK, _NovoStanjeOk
                          M     if (((PORTB) <= BANKA_END) | ((PORTB) >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
000C5A B481               M         btfsc   PORTB, 002h
000C5C 822B               M         bsf     PB02,   001h
000C5E A481               M         btfss   PORTB, 002h
000C60 922B               M         bcf     PB02,   001h
                          M     else
                          M       if (((PORTB) & 0f00h) == ((PB02)   & 0f00h))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 002h
                          M         bsf     PB02,   001h
                          M         btfss   PORTB, 002h
                          M         bcf     PB02,   001h
                          M       else
                          M           if (((PB02)   <= BANKA_END) | ((PB02)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 002h
                          M         bsf     PB02,   001h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 256


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfss   PORTB, 002h
                          M         bcf     PB02,   001h
                          M           else
                          M         MOVE?TA PORTB, 002h
                          M         MOVE?AT PB02,   001h
                          M           endif
                          M       endif
                          M     endif
                      01358 
                      01359 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00225       NovoStanjeOdrzavanje    =  tastodrzavanje
                      01360         MOVE?TT _TASTODRZAVANJE, _NovoStanjeOdrzavanje
                          M     if (((PORTB) <= BANKA_END) | ((PORTB) >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
000C62 BE81               M         btfsc   PORTB, 007h
000C64 802B               M         bsf     PB02,   000h
000C66 AE81               M         btfss   PORTB, 007h
000C68 902B               M         bcf     PB02,   000h
                          M     else
                          M       if (((PORTB) & 0f00h) == ((PB02)   & 0f00h))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 007h
                          M         bsf     PB02,   000h
                          M         btfss   PORTB, 007h
                          M         bcf     PB02,   000h
                          M       else
                          M           if (((PB02)   <= BANKA_END) | ((PB02)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PORTB
                          M         btfsc   PORTB, 007h
                          M         bsf     PB02,   000h
                          M         btfss   PORTB, 007h
                          M         bcf     PB02,   000h
                          M           else
                          M         MOVE?TA PORTB, 007h
                          M         MOVE?AT PB02,   000h
                          M           endif
                          M       endif
                          M     endif
                      01361 
                      01362 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00227       if novostanjegore < starostanjegore then 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 257


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01363         CMPGE?TTL       _NovoStanjeGore, _StaroStanjeGore, L00053
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PB01,   006h,   L00053
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00053))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((1)      == 0)
                          M         btfss   PB01,  006h
                          M       else
                          M         btfsc   PB01,  006h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M       else
                          M         if ((L00053) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M         else
                          M           if ((L00053) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M           else
                          M             if ((L00053) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M             else
                          M         bov     L00053
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 258


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PB01,  006h
                          M       else
000C6A BC2A               M         btfsc   PB01,  006h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00053
                          M       else
                          M         if ((L00053) < 1)
                          M         goto    L00053
                          M         else
                          M           if ((L00053) > $)
000C6C EF3E F006          M         goto    L00053
                          M           else
                          M             if ((L00053) < ($ - 3ffh))
                          M         goto    L00053
                          M             else
                          M         bra     L00053
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, PB02,   006h,   L00053
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00053))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((0)      == 0)
                          M         btfss   PB02,  006h
                          M       else
                          M         btfsc   PB02,  006h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M       else
                          M         if ((L00053) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M         else
                          M           if ((L00053) > $)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 259


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M           else
                          M             if ((L00053) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00053
                          M             else
                          M         bov     L00053
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000C70 AC2B               M         btfss   PB02,  006h
                          M       else
                          M         btfsc   PB02,  006h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00053
                          M       else
                          M         if ((L00053) < 1)
                          M         goto    L00053
                          M         else
                          M           if ((L00053) > $)
000C72 EF3E F006          M         goto    L00053
                          M           else
                          M             if ((L00053) < ($ - 3ffh))
                          M         goto    L00053
                          M             else
                          M         bra     L00053
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01364 
                      01365 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00228           gore = 1 
                      01366         MOVE?CT 001h, _gore
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 260


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000C76 842A               M         bsf     PB01,   002h
                          M     else
                          M         bcf     PB01,   002h
                          M     endif
                      01367 
                      01368 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00229       else
                      01369         GOTO?L  L00054
                          M         L?GOTO  L00054
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00054))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00054
                          M     else
                          M       if ((L00054) < 1)
                          M         goto    L00054
                          M       else
                          M         if ((L00054) > $)
000C78 EF3F F006          M         goto    L00054
                          M         else
                          M           if ((L00054) < ($ - 3ffh))
                          M         goto    L00054
                          M           else
                          M         bra     L00054
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 261


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01370         LABEL?L L00053  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00053
                          M         XALL
                          M     else
000C7C                    M L00053
                          M     endif
                      01371 
                      01372 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00230           gore = 0 
                      01373         MOVE?CT 000h, _gore
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB01,   002h
                          M     else
000C7C 942A               M         bcf     PB01,   002h
                          M     endif
                      01374 
                      01375 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00231       ENDIF
                      01376         LABEL?L L00054  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 262


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef PM_USED
                          M         LALL
                          M L00054
                          M         XALL
                          M     else
000C7E                    M L00054
                          M     endif
                      01377 
                      01378 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00233       if novostanjedole < starostanjedole then 
                      01379         CMPGE?TTL       _NovoStanjeDole, _StaroStanjeDole, L00055
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PB01,   005h,   L00055
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00055))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((1)      == 0)
                          M         btfss   PB01,  005h
                          M       else
                          M         btfsc   PB01,  005h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M       else
                          M         if ((L00055) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M         else
                          M           if ((L00055) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M           else
                          M             if ((L00055) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M             else
                          M         bov     L00055
                          M             endif
                          M           endif
                          M         endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 263


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PB01,  005h
                          M       else
000C7E BA2A               M         btfsc   PB01,  005h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00055
                          M       else
                          M         if ((L00055) < 1)
                          M         goto    L00055
                          M         else
                          M           if ((L00055) > $)
000C80 EF48 F006          M         goto    L00055
                          M           else
                          M             if ((L00055) < ($ - 3ffh))
                          M         goto    L00055
                          M             else
                          M         bra     L00055
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, PB02,   005h,   L00055
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00055))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((0)      == 0)
                          M         btfss   PB02,  005h
                          M       else
                          M         btfsc   PB02,  005h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 264


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M       else
                          M         if ((L00055) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M         else
                          M           if ((L00055) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M           else
                          M             if ((L00055) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00055
                          M             else
                          M         bov     L00055
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000C84 AA2B               M         btfss   PB02,  005h
                          M       else
                          M         btfsc   PB02,  005h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00055
                          M       else
                          M         if ((L00055) < 1)
                          M         goto    L00055
                          M         else
                          M           if ((L00055) > $)
000C86 EF48 F006          M         goto    L00055
                          M           else
                          M             if ((L00055) < ($ - 3ffh))
                          M         goto    L00055
                          M             else
                          M         bra     L00055
                          M             endif
                          M           endif
                          M         endif
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 265


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01380 
                      01381 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00234           dole = 1
                      01382         MOVE?CT 001h, _dole
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000C8A 822A               M         bsf     PB01,   001h
                          M     else
                          M         bcf     PB01,   001h
                          M     endif
                      01383 
                      01384 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00235       else 
                      01385         GOTO?L  L00056
                          M         L?GOTO  L00056
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00056))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00056
                          M     else
                          M       if ((L00056) < 1)
                          M         goto    L00056
                          M       else
                          M         if ((L00056) > $)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 266


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C8C EF49 F006          M         goto    L00056
                          M         else
                          M           if ((L00056) < ($ - 3ffh))
                          M         goto    L00056
                          M           else
                          M         bra     L00056
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01386         LABEL?L L00055  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00055
                          M         XALL
                          M     else
000C90                    M L00055
                          M     endif
                      01387 
                      01388 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00236           dole = 0
                      01389         MOVE?CT 000h, _dole
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB01,   001h
                          M     else
000C90 922A               M         bcf     PB01,   001h
                          M     endif
                      01390 
                      01391 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00237       ENDIF
                      01392         LABEL?L L00056  
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 267


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00056
                          M         XALL
                          M     else
000C92                    M L00056
                          M     endif
                      01393 
                      01394 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00239       if novostanjelevo < starostanjelevo then 
                      01395         CMPGE?TTL       _NovoStanjeLevo, _StaroStanjeLevo, L00057
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PB01,   007h,   L00057
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00057))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((1)      == 0)
                          M         btfss   PB01,  007h
                          M       else
                          M         btfsc   PB01,  007h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M       else
                          M         if ((L00057) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M         else
                          M           if ((L00057) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00057
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 268


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00057) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M             else
                          M         bov     L00057
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PB01,  007h
                          M       else
000C92 BE2A               M         btfsc   PB01,  007h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00057
                          M       else
                          M         if ((L00057) < 1)
                          M         goto    L00057
                          M         else
                          M           if ((L00057) > $)
000C94 EF52 F006          M         goto    L00057
                          M           else
                          M             if ((L00057) < ($ - 3ffh))
                          M         goto    L00057
                          M             else
                          M         bra     L00057
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, PB02,   007h,   L00057
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00057))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 269


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((0)      == 0)
                          M         btfss   PB02,  007h
                          M       else
                          M         btfsc   PB02,  007h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M       else
                          M         if ((L00057) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M         else
                          M           if ((L00057) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M           else
                          M             if ((L00057) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00057
                          M             else
                          M         bov     L00057
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000C98 AE2B               M         btfss   PB02,  007h
                          M       else
                          M         btfsc   PB02,  007h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00057
                          M       else
                          M         if ((L00057) < 1)
                          M         goto    L00057
                          M         else
                          M           if ((L00057) > $)
000C9A EF52 F006          M         goto    L00057
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 270


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           else
                          M             if ((L00057) < ($ - 3ffh))
                          M         goto    L00057
                          M             else
                          M         bra     L00057
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01396 
                      01397 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00240           levo = 1
                      01398         MOVE?CT 001h, _levo
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000C9E 862A               M         bsf     PB01,   003h
                          M     else
                          M         bcf     PB01,   003h
                          M     endif
                      01399 
                      01400 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00241       else
                      01401         GOTO?L  L00058
                          M         L?GOTO  L00058
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00058))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 271


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00058
                          M     else
                          M       if ((L00058) < 1)
                          M         goto    L00058
                          M       else
                          M         if ((L00058) > $)
000CA0 EF53 F006          M         goto    L00058
                          M         else
                          M           if ((L00058) < ($ - 3ffh))
                          M         goto    L00058
                          M           else
                          M         bra     L00058
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01402         LABEL?L L00057  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00057
                          M         XALL
                          M     else
000CA4                    M L00057
                          M     endif
                      01403 
                      01404 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00242           levo = 0
                      01405         MOVE?CT 000h, _levo
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 272


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB01,   003h
                          M     else
000CA4 962A               M         bcf     PB01,   003h
                          M     endif
                      01406 
                      01407 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00243       ENDIF
                      01408         LABEL?L L00058  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00058
                          M         XALL
                          M     else
000CA6                    M L00058
                          M     endif
                      01409 
                      01410 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00245       if novostanjedesno < starostanjedesno then 
                      01411         CMPGE?TTL       _NovoStanjeDesno, _StaroStanjeDesno, L00059
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PB01,   004h,   L00059
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00059))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB01)  > BANKA_END) & ((PB01)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB01
                          M       if ((1)      == 0)
                          M         btfss   PB01,  004h
                          M       else
                          M         btfsc   PB01,  004h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 273


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00059
                          M       else
                          M         if ((L00059) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M         else
                          M           if ((L00059) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M           else
                          M             if ((L00059) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M             else
                          M         bov     L00059
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PB01,  004h
                          M       else
000CA6 B82A               M         btfsc   PB01,  004h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00059
                          M       else
                          M         if ((L00059) < 1)
                          M         goto    L00059
                          M         else
                          M           if ((L00059) > $)
000CA8 EF5C F006          M         goto    L00059
                          M           else
                          M             if ((L00059) < ($ - 3ffh))
                          M         goto    L00059
                          M             else
                          M         bra     L00059
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, PB02,   004h,   L00059
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 274


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00059))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((0)      == 0)
                          M         btfss   PB02,  004h
                          M       else
                          M         btfsc   PB02,  004h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M       else
                          M         if ((L00059) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M         else
                          M           if ((L00059) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M           else
                          M             if ((L00059) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00059
                          M             else
                          M         bov     L00059
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000CAC A82B               M         btfss   PB02,  004h
                          M       else
                          M         btfsc   PB02,  004h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 275


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00059
                          M       else
                          M         if ((L00059) < 1)
                          M         goto    L00059
                          M         else
                          M           if ((L00059) > $)
000CAE EF5C F006          M         goto    L00059
                          M           else
                          M             if ((L00059) < ($ - 3ffh))
                          M         goto    L00059
                          M             else
                          M         bra     L00059
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01412 
                      01413 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00246           desno = 1
                      01414         MOVE?CT 001h, _desno
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000CB2 802A               M         bsf     PB01,   000h
                          M     else
                          M         bcf     PB01,   000h
                          M     endif
                      01415 
                      01416 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00247       else
                      01417         GOTO?L  L00060
                          M         L?GOTO  L00060
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00060))
                          M         CLRWDT?
                          M       endif
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 276


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00060
                          M     else
                          M       if ((L00060) < 1)
                          M         goto    L00060
                          M       else
                          M         if ((L00060) > $)
000CB4 EF5D F006          M         goto    L00060
                          M         else
                          M           if ((L00060) < ($ - 3ffh))
                          M         goto    L00060
                          M           else
                          M         bra     L00060
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01418         LABEL?L L00059  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00059
                          M         XALL
                          M     else
000CB8                    M L00059
                          M     endif
                      01419 
                      01420 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00248           desno = 0
                      01421         MOVE?CT 000h, _desno
                          M         CHK?RP  PB01
                          M     if (((PB01)  & 8000h) != PREV_ALT)
                          M       if ((PB01)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 277


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB01)  & 8000h
                          M     endif
                          M     if ((((PB01)  & 0fffh) > BANKA_END) & (((PB01)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB01)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB01)
                          M PREV_BANK = high (PB01)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB01,   000h
                          M     else
000CB8 902A               M         bcf     PB01,   000h
                          M     endif
                      01422 
                      01423 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00249       ENDIF
                      01424         LABEL?L L00060  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00060
                          M         XALL
                          M     else
000CBA                    M L00060
                          M     endif
                      01425 
                      01426 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00251       if novostanjeOK < starostanjeok then 
                      01427         CMPGE?TTL       _NovoStanjeOk, _StaroStanjeOk, L00061
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PB02,   001h,   L00061
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00061))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 278


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if ((1)      == 0)
                          M         btfss   PB02,  001h
                          M       else
                          M         btfsc   PB02,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M       else
                          M         if ((L00061) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M         else
                          M           if ((L00061) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M           else
                          M             if ((L00061) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M             else
                          M         bov     L00061
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PB02,  001h
                          M       else
000CBA B22B               M         btfsc   PB02,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00061
                          M       else
                          M         if ((L00061) < 1)
                          M         goto    L00061
                          M         else
                          M           if ((L00061) > $)
000CBC EF66 F006          M         goto    L00061
                          M           else
                          M             if ((L00061) < ($ - 3ffh))
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 279


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    L00061
                          M             else
                          M         bra     L00061
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, PB03,   001h,   L00061
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00061))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB03)  > BANKA_END) & ((PB03)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB03
                          M       if ((0)      == 0)
                          M         btfss   PB03,  001h
                          M       else
                          M         btfsc   PB03,  001h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M       else
                          M         if ((L00061) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M         else
                          M           if ((L00061) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M           else
                          M             if ((L00061) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00061
                          M             else
                          M         bov     L00061
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 280


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000CC0 A22C               M         btfss   PB03,  001h
                          M       else
                          M         btfsc   PB03,  001h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00061
                          M       else
                          M         if ((L00061) < 1)
                          M         goto    L00061
                          M         else
                          M           if ((L00061) > $)
000CC2 EF66 F006          M         goto    L00061
                          M           else
                          M             if ((L00061) < ($ - 3ffh))
                          M         goto    L00061
                          M             else
                          M         bra     L00061
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01428 
                      01429 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00252           ok = 1
                      01430         MOVE?CT 001h, _ok
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000CC6 862B               M         bsf     PB02,   003h
                          M     else
                          M         bcf     PB02,   003h
                          M     endif
                      01431 
                      01432 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00253       else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 281


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01433         GOTO?L  L00062
                          M         L?GOTO  L00062
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00062))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00062
                          M     else
                          M       if ((L00062) < 1)
                          M         goto    L00062
                          M       else
                          M         if ((L00062) > $)
000CC8 EF67 F006          M         goto    L00062
                          M         else
                          M           if ((L00062) < ($ - 3ffh))
                          M         goto    L00062
                          M           else
                          M         bra     L00062
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01434         LABEL?L L00061  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00061
                          M         XALL
                          M     else
000CCC                    M L00061
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 282


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      01435 
                      01436 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00254           ok = 0
                      01437         MOVE?CT 000h, _ok
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB02,   003h
                          M     else
000CCC 962B               M         bcf     PB02,   003h
                          M     endif
                      01438 
                      01439 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00255       ENDIF
                      01440         LABEL?L L00062  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00062
                          M         XALL
                          M     else
000CCE                    M L00062
                          M     endif
                      01441 
                      01442 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00257       if novostanjeodrzavanje < starostanjeodrzava
                            nje then 
                      01443         CMPGE?TTL       _NovoStanjeOdrzavanje, _StaroStanjeOdrzavanje, L00063
                          M         CLRWDT?
                          M     ifndef NO_CLRWDT
                          M         clrwdt
                          M     endif
                          M         BIT?GOTO 1, PB02,   000h,   L00063
                          M     ifdef USE_LINKER
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 283


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00063))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB02)  > BANKA_END) & ((PB02)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB02
                          M       if ((1)      == 0)
                          M         btfss   PB02,  000h
                          M       else
                          M         btfsc   PB02,  000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M       else
                          M         if ((L00063) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M         else
                          M           if ((L00063) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M           else
                          M             if ((L00063) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M             else
                          M         bov     L00063
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((1)      == 0)
                          M         btfss   PB02,  000h
                          M       else
000CCE B02B               M         btfsc   PB02,  000h
                          M       endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 284


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       ifdef USE_LINKER
                          M         goto    L00063
                          M       else
                          M         if ((L00063) < 1)
                          M         goto    L00063
                          M         else
                          M           if ((L00063) > $)
000CD0 EF70 F006          M         goto    L00063
                          M           else
                          M             if ((L00063) < ($ - 3ffh))
                          M         goto    L00063
                          M             else
                          M         bra     L00063
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         BIT?GOTO 0, PB03,   000h,   L00063
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00063))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((PB03)  > BANKA_END) & ((PB03)  < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  PB03
                          M       if ((0)      == 0)
                          M         btfss   PB03,  000h
                          M       else
                          M         btfsc   PB03,  000h
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M       else
                          M         if ((L00063) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M         else
                          M           if ((L00063) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M           else
                          M             if ((L00063) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00063
                          M             else
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 285


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bov     L00063
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
000CD4 A02C               M         btfss   PB03,  000h
                          M       else
                          M         btfsc   PB03,  000h
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00063
                          M       else
                          M         if ((L00063) < 1)
                          M         goto    L00063
                          M         else
                          M           if ((L00063) > $)
000CD6 EF70 F006          M         goto    L00063
                          M           else
                          M             if ((L00063) < ($ - 3ffh))
                          M         goto    L00063
                          M             else
                          M         bra     L00063
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01444 
                      01445 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00258           odrzavanje = 1
                      01446         MOVE?CT 001h, _odrzavanje
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 286


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
000CDA 842B               M         bsf     PB02,   002h
                          M     else
                          M         bcf     PB02,   002h
                          M     endif
                      01447 
                      01448 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00259       else
                      01449         GOTO?L  L00064
                          M         L?GOTO  L00064
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00064))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    L00064
                          M     else
                          M       if ((L00064) < 1)
                          M         goto    L00064
                          M       else
                          M         if ((L00064) > $)
000CDC EF71 F006          M         goto    L00064
                          M         else
                          M           if ((L00064) < ($ - 3ffh))
                          M         goto    L00064
                          M           else
                          M         bra     L00064
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      01450         LABEL?L L00063  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 287


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00063
                          M         XALL
                          M     else
000CE0                    M L00063
                          M     endif
                      01451 
                      01452 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00260           odrzavanje = 0
                      01453         MOVE?CT 000h, _odrzavanje
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
                          M     if (((000h) & 1) == 1)
                          M         bsf     PB02,   002h
                          M     else
000CE0 942B               M         bcf     PB02,   002h
                          M     endif
                      01454 
                      01455 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00261       ENDIF
                      01456         LABEL?L L00064  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00064
                          M         XALL
                          M     else
000CE2                    M L00064
                          M     endif
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 288


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01457 
                      01458 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00275       StaroStanjeDesno        = NovoStanjeDesno   
                                 
                      01459         MOVE?TT _NovoStanjeDesno, _StaroStanjeDesno
                          M     if (((PB01)  <= BANKA_END) | ((PB01)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
000CE2 B82A               M         btfsc   PB01,  004h
000CE4 882B               M         bsf     PB02,   004h
000CE6 A82A               M         btfss   PB01,  004h
000CE8 982B               M         bcf     PB02,   004h
                          M     else
                          M       if (((PB01)  & 0f00h) == ((PB02)   & 0f00h))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  004h
                          M         bsf     PB02,   004h
                          M         btfss   PB01,  004h
                          M         bcf     PB02,   004h
                          M       else
                          M           if (((PB02)   <= BANKA_END) | ((PB02)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  004h
                          M         bsf     PB02,   004h
                          M         btfss   PB01,  004h
                          M         bcf     PB02,   004h
                          M           else
                          M         MOVE?TA PB01,  004h
                          M         MOVE?AT PB02,   004h
                          M           endif
                          M       endif
                          M     endif
                      01460 
                      01461 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00276       StaroStanjeLevo         = NovoStanjeLevo    
                              
                      01462         MOVE?TT _NovoStanjeLevo, _StaroStanjeLevo
                          M     if (((PB01)  <= BANKA_END) | ((PB01)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 289


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
000CEA BE2A               M         btfsc   PB01,  007h
000CEC 8E2B               M         bsf     PB02,   007h
000CEE AE2A               M         btfss   PB01,  007h
000CF0 9E2B               M         bcf     PB02,   007h
                          M     else
                          M       if (((PB01)  & 0f00h) == ((PB02)   & 0f00h))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  007h
                          M         bsf     PB02,   007h
                          M         btfss   PB01,  007h
                          M         bcf     PB02,   007h
                          M       else
                          M           if (((PB02)   <= BANKA_END) | ((PB02)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  007h
                          M         bsf     PB02,   007h
                          M         btfss   PB01,  007h
                          M         bcf     PB02,   007h
                          M           else
                          M         MOVE?TA PB01,  007h
                          M         MOVE?AT PB02,   007h
                          M           endif
                          M       endif
                          M     endif
                      01463 
                      01464 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00277       StaroStanjeGore         = NovoStanjeGore    
                                  
                      01465         MOVE?TT _NovoStanjeGore, _StaroStanjeGore
                          M     if (((PB01)  <= BANKA_END) | ((PB01)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 290


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M     endif
000CF2 BC2A               M         btfsc   PB01,  006h
000CF4 8C2B               M         bsf     PB02,   006h
000CF6 AC2A               M         btfss   PB01,  006h
000CF8 9C2B               M         bcf     PB02,   006h
                          M     else
                          M       if (((PB01)  & 0f00h) == ((PB02)   & 0f00h))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  006h
                          M         bsf     PB02,   006h
                          M         btfss   PB01,  006h
                          M         bcf     PB02,   006h
                          M       else
                          M           if (((PB02)   <= BANKA_END) | ((PB02)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  006h
                          M         bsf     PB02,   006h
                          M         btfss   PB01,  006h
                          M         bcf     PB02,   006h
                          M           else
                          M         MOVE?TA PB01,  006h
                          M         MOVE?AT PB02,   006h
                          M           endif
                          M       endif
                          M     endif
                      01466 
                      01467 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00278       StaroStanjeDole         = NovoStanjeDole    
                                 
                      01468         MOVE?TT _NovoStanjeDole, _StaroStanjeDole
                          M     if (((PB01)  <= BANKA_END) | ((PB01)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M     if (((PB02)  & 8000h) != PREV_ALT)
                          M       if ((PB02)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB02)  & 8000h
                          M     endif
                          M     if ((((PB02)  & 0fffh) > BANKA_END) & (((PB02)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB02)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB02)
                          M PREV_BANK = high (PB02)
                          M       endif
                          M     endif
000CFA BA2A               M         btfsc   PB01,  005h
000CFC 8A2B               M         bsf     PB02,   005h
000CFE AA2A               M         btfss   PB01,  005h
000D00 9A2B               M         bcf     PB02,   005h
                          M     else
                          M       if (((PB01)  & 0f00h) == ((PB02)   & 0f00h))
                          M         CHK?RP  PB01
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 291


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfsc   PB01,  005h
                          M         bsf     PB02,   005h
                          M         btfss   PB01,  005h
                          M         bcf     PB02,   005h
                          M       else
                          M           if (((PB02)   <= BANKA_END) | ((PB02)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB01
                          M         btfsc   PB01,  005h
                          M         bsf     PB02,   005h
                          M         btfss   PB01,  005h
                          M         bcf     PB02,   005h
                          M           else
                          M         MOVE?TA PB01,  005h
                          M         MOVE?AT PB02,   005h
                          M           endif
                          M       endif
                          M     endif
                      01469 
                      01470 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00279       StaroStanjeOk           = NovoStanjeOk      
                                 
                      01471         MOVE?TT _NovoStanjeOk, _StaroStanjeOk
                          M     if (((PB02)  <= BANKA_END) | ((PB02)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB03
                          M     if (((PB03)  & 8000h) != PREV_ALT)
                          M       if ((PB03)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB03)  & 8000h
                          M     endif
                          M     if ((((PB03)  & 0fffh) > BANKA_END) & (((PB03)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB03)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB03)
                          M PREV_BANK = high (PB03)
                          M       endif
                          M     endif
000D02 B22B               M         btfsc   PB02,  001h
000D04 822C               M         bsf     PB03,   001h
000D06 A22B               M         btfss   PB02,  001h
000D08 922C               M         bcf     PB03,   001h
                          M     else
                          M       if (((PB02)  & 0f00h) == ((PB03)   & 0f00h))
                          M         CHK?RP  PB02
                          M         btfsc   PB02,  001h
                          M         bsf     PB03,   001h
                          M         btfss   PB02,  001h
                          M         bcf     PB03,   001h
                          M       else
                          M           if (((PB03)   <= BANKA_END) | ((PB03)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M         btfsc   PB02,  001h
                          M         bsf     PB03,   001h
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 292


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         btfss   PB02,  001h
                          M         bcf     PB03,   001h
                          M           else
                          M         MOVE?TA PB02,  001h
                          M         MOVE?AT PB03,   001h
                          M           endif
                          M       endif
                          M     endif
                      01472 
                      01473 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00280       StaroStanjeOdrzavanje   = NovoStanjeOdrzavan
                            je    
                      01474         MOVE?TT _NovoStanjeOdrzavanje, _StaroStanjeOdrzavanje
                          M     if (((PB02)  <= BANKA_END) | ((PB02)  >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB03
                          M     if (((PB03)  & 8000h) != PREV_ALT)
                          M       if ((PB03)  & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PB03)  & 8000h
                          M     endif
                          M     if ((((PB03)  & 0fffh) > BANKA_END) & (((PB03)  & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PB03)  & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PB03)
                          M PREV_BANK = high (PB03)
                          M       endif
                          M     endif
000D0A B02B               M         btfsc   PB02,  000h
000D0C 802C               M         bsf     PB03,   000h
000D0E A02B               M         btfss   PB02,  000h
000D10 902C               M         bcf     PB03,   000h
                          M     else
                          M       if (((PB02)  & 0f00h) == ((PB03)   & 0f00h))
                          M         CHK?RP  PB02
                          M         btfsc   PB02,  000h
                          M         bsf     PB03,   000h
                          M         btfss   PB02,  000h
                          M         bcf     PB03,   000h
                          M       else
                          M           if (((PB03)   <= BANKA_END) | ((PB03)   >= (0f01h + BANKA_END)))
                          M         CHK?RP  PB02
                          M         btfsc   PB02,  000h
                          M         bsf     PB03,   000h
                          M         btfss   PB02,  000h
                          M         bcf     PB03,   000h
                          M           else
                          M         MOVE?TA PB02,  000h
                          M         MOVE?AT PB03,   000h
                          M           endif
                          M       endif
                          M     endif
                      01475 
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 293


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01476 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00281   return
                      01477         RETURN? 
                          M     ifdef DEBUG_STACK
                          M         CHK?RP  DEBUG_STACK
                          M         decf    DEBUG_STACK, F
                          M     endif
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
000D12 0012               M         return
                      01478 
                      01479 ; C:\USERS\ADMIN\DESKTOP\TEST\TESTPROGRAM.PBP   00282   END
                      01480         END?    
  0000                    M     local loop
000D14 0003               M loop    sleep
000D16 D7FE               M         bra     loop
                      01481 
                      01482         END
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 294


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCMD                             00000000
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CHANNELS                      1
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADD?BCB                           
ADD?BCN                           
ADDEN                             00000003
ADDEN1                            00000003
ADDEN2                            00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AHEN                              00000001
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN13                              00000005
AN14                              00000002
AN15                              00000003
AN16                              00000004
AN17                              00000005
AN18                              00000006
AN19                              00000007
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 295


SYMBOL TABLE
  LABEL                             VALUE 

AN9                               00000003
AND?BCN                           
AND?WCN                           
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA3                             00000003
ANSA5                             00000005
ANSB0                             00000000
ANSB1                             00000001
ANSB2                             00000002
ANSB3                             00000003
ANSB4                             00000004
ANSB5                             00000005
ANSC2                             00000002
ANSC3                             00000003
ANSC4                             00000004
ANSC5                             00000005
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            00000F38
ANSELB                            00000F39
ANSELC                            00000F3A
ASM?                              
BANK0_END                         000000FF
BANK0_START                       00000060
BANK1_END                         000001FF
BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANK3_END                         000003FF
BANK3_START                       00000300
BANK4_END                         000004FF
BANK4_START                       00000400
BANK5_END                         000005FF
BANK5_START                       00000500
BANKA_END                         0000005F
BANKA_START                       00000000
BANKED                            00000001
BAUD1CON                          00000FB8
BAUD2CON                          00000F70
BAUDCON                           00000FB8
BAUDCON1                          00000FB8
BAUDCON2                          00000F70
BAUDCTL                           00000FB8
BCL1IE                            00000003
BCL1IF                            00000003
BCL1IP                            00000003
BCL2IE                            00000006
BCL2IF                            00000006
BCL2IP                            00000006
BCLIE                             00000003
BCLIF                             00000003
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 296


SYMBOL TABLE
  LABEL                             VALUE 

BCLIP                             00000003
BF                                00000000
BGST                              00000005
BGVST                             00000006
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOEN                              00000004
BOR                               00000000
BRANCH?BCL                        
BRG16                             00000003
BRGH                              00000002
BRGH1                             00000002
BRGH2                             00000002
BRGOTO?L                          
BSR                               00000FE0
BUTTON_PAUSE                      0000000A
C                                 00000000
C12IN0M                           00000000
C12IN0N                           00000000
C12IN1M                           00000001
C12IN1N                           00000001
C12IN2M                           00000003
C12IN2N                           00000003
C12IN3M                           00000001
C12IN3N                           00000001
C1CH0                             00000000
C1CH1                             00000001
C1HYS                             00000003
C1IE                              00000006
C1IF                              00000006
C1INP                             00000003
C1IP                              00000006
C1OE                              00000005
C1ON                              00000007
C1OUT_CM1CON                      00000006
C1OUT_CM1CON0                     00000006
C1OUT_PORTA                       00000004
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SP                              00000003
C1SYNC                            00000001
C1TSEL0                           00000000
C1TSEL1                           00000001
C2CH0                             00000000
C2CH1                             00000001
C2HYS                             00000002
C2IE                              00000005
C2IF                              00000005
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 297


SYMBOL TABLE
  LABEL                             VALUE 

C2INP                             00000002
C2IP                              00000005
C2OE                              00000005
C2ON                              00000007
C2OUT_CM2CON                      00000006
C2OUT_CM2CON0                     00000006
C2OUT_PORTA                       00000005
C2POL                             00000004
C2R                               00000002
C2RSEL                            00000004
C2SP                              00000003
C2SYNC                            00000000
C2TSEL0                           00000003
C2TSEL1                           00000004
C3TSEL0                           00000006
C3TSEL1                           00000007
C4TSEL0                           00000000
C4TSEL1                           00000001
C5TSEL0                           00000002
C5TSEL1                           00000003
CCP1                              00000002
CCP1AS0                           00000004
CCP1AS1                           00000005
CCP1AS2                           00000006
CCP1ASE                           00000007
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1MD                            00000000
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2AS                            00000F64
CCP2AS0                           00000004
CCP2AS1                           00000005
CCP2AS2                           00000006
CCP2ASE                           00000007
CCP2CON                           00000F66
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MD                            00000001
CCP2_BIT                          00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 298


SYMBOL TABLE
  LABEL                             VALUE 

CCP2_REG                          00000F82
CCP3AS                            00000F5B
CCP3AS0                           00000004
CCP3AS1                           00000005
CCP3AS2                           00000006
CCP3ASE                           00000007
CCP3CON                           00000F5D
CCP3IE                            00000000
CCP3IF                            00000000
CCP3IP                            00000000
CCP3M0                            00000000
CCP3M1                            00000001
CCP3M2                            00000002
CCP3M3                            00000003
CCP3MD                            00000002
CCP3_BIT                          00000000
CCP3_PORTB                        00000005
CCP3_PORTC                        00000006
CCP3_REG                          00000000
CCP4                              00000000
CCP4CON                           00000F57
CCP4IE                            00000001
CCP4IF                            00000001
CCP4IP                            00000001
CCP4M0                            00000000
CCP4M1                            00000001
CCP4M2                            00000002
CCP4M3                            00000003
CCP4MD                            00000003
CCP4_BIT                          00000003
CCP4_REG                          00000000
CCP5                              00000004
CCP5CON                           00000F54
CCP5IE                            00000002
CCP5IF                            00000002
CCP5IP                            00000002
CCP5M0                            00000000
CCP5M1                            00000001
CCP5M2                            00000002
CCP5M3                            00000003
CCP5MD                            00000004
CCP5_BIT                          00000004
CCP5_REG                          00000000
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000F67
CCPR2H                            00000F68
CCPR2L                            00000F67
CCPR3                             00000F5E
CCPR3H                            00000F5F
CCPR3L                            00000F5E
CCPR4                             00000F58
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 299


SYMBOL TABLE
  LABEL                             VALUE 

CCPR4H                            00000F59
CCPR4L                            00000F58
CCPR5                             00000F55
CCPR5H                            00000F56
CCPR5L                            00000F55
CCPTMRS0                          00000F49
CCPTMRS1                          00000F48
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CK                                00000006
CK1                               00000006
CK2                               00000006
CKE                               00000006
CKP                               00000004
CKTXP                             00000004
CLEAR?                            
CLEAR_USED                        00000001
CLRWDT?                           
CLRWDT?NOP                        
CM12CON                           00000F77
CM1CON                            00000F79
CM1CON0                           00000F79
CM2CON                            00000F78
CM2CON0                           00000F78
CM2CON1                           00000F77
CMP                               00000356
CMP1MD                            00000001
CMP2MD                            00000002
CMPEQ?BBL                         
CMPEQ?TCL                         
CMPEQ?WWL                         
CMPEQW                            0000033A
CMPEQW_USED                       00000001
CMPF?TL                           
CMPGE?TTL                         
CMPLE?WCL                         
CMPLEW                            00000340
CMPLEW_USED                       00000001
CMPLT?WCL                         
CMPLTW                            00000346
CMPLTW_USED                       00000001
CMPNE                             0000034C
CMPNE?BCL                         
CMPNE?NCL                         
CMPNE?TCL                         
CMPNE_USED                        00000001
CMPT?TL                           
CMPW                              00000352
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 300


SYMBOL TABLE
  LABEL                             VALUE 

CMPW_USED                         00000001
CMP_USED                          00000001
CREN                              00000004
CREN1                             00000004
CREN2                             00000004
CSRC                              00000007
CSRC1                             00000007
CSRC2                             00000007
CTED1                             00000002
CTED2                             00000003
CTMUCON0                          00000F45
CTMUCON1                          00000F44
CTMUCONH                          00000F45
CTMUCONL                          00000F44
CTMUEN                            00000007
CTMUICON                          00000F43
CTMUICONH                         00000F43
CTMUIE                            00000003
CTMUIF                            00000003
CTMUIP                            00000003
CTMUMD                            00000003
CTMUSIDL                          00000005
CTPLS                             00000002
CTTRIG                            00000000
CVREF                             00000002
D                                 00000005
DACCON0                           00000F41
DACCON1                           00000F40
DACEN                             00000007
DACLPS                            00000006
DACNSS                            00000000
DACOE                             00000005
DACOUT                            00000002
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DC3B0                             00000004
DC3B1                             00000005
DC4B0                             00000004
DC4B1                             00000005
DC5B0                             00000004
DC5B1                             00000005
DDISABLE?                         
DDRA                              TRISA
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 301


SYMBOL TABLE
  LABEL                             VALUE 

DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019D
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DHEN                              00000000
DIV                               000003B2
DIV?CWW                           
DIV?NCW                           
DIVS                              0000038E
DIVS_USED                         00000001
DIV_USED                          00000001
DONE                              00000001
DT1                               00000007
DT2                               00000007
DTRXP                             00000005
DUNN                              0000054A
DUNN5                             0000054C
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP2AS                           00000F64
ECCP3AS                           00000F5B
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EDG1POL                           00000004
EDG1SEL0                          00000002
EDG1SEL1                          00000003
EDG1STAT                          00000000
EDG2POL                           00000007
EDG2SEL0                          00000005
EDG2SEL1                          00000006
EDG2STAT                          00000001
EDGEN                             00000003
EDGSEQEN                          00000002
EEADR                             00000FA9
EEADR0                            00000000
EEADR1                            00000001
EEADR2                            00000002
EEADR3                            00000003
EEADR4                            00000004
EEADR5                            00000005
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 302


SYMBOL TABLE
  LABEL                             VALUE 

EEADR6                            00000006
EEADR7                            00000007
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
ENDASM?                           
FAST                              00000001
FERR                              00000002
FERR1                             00000002
FERR2                             00000002
FLAGS                             00000000
FLAGS_USED                        00000001
FLT0                              00000000
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FVRCON                            00000F42
FVREN                             00000007
FVRS0                             00000004
FVRS1                             00000005
FVRST                             00000006
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000001
GOSUB?L                           
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HFIOFS                            00000002
HLVDCON                           00000F9C
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 303


SYMBOL TABLE
  LABEL                             VALUE 

HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HPWM10                            
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000067
HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000067
HSER_TXSTA                        00000020
I2CCLOCK?T                        
I2CDATA?T                         
I2CFIRSTFLAG                      FLAGS, 2
I2CREAD                           0000000A
I2CREAD?B                         
I2CREADFLAG                       FLAGS, 3
I2CREADS                          00000006
I2CREADS?B                        
I2CREAD_USED                      00000001
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITE                          0000003C
I2CWRITE?B                        
I2CWRITE?C                        
I2CWRITEFLAG                      FLAGS, 4
I2CWRITES                         00000038
I2CWRITES?B                       
I2CWRITE_USED                     00000001
I2C_SCLOUT                        1
I2C_SLOW                          1
IDISSEN                           00000001
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              00000550
INPUT?T                           
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 304


SYMBOL TABLE
  LABEL                             VALUE 

INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOCB                              00000F62
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IPR4                              00000F7C
IPR5                              00000F7F
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRNG0                             00000000
IRNG1                             00000001
IRVST                             00000005
ITRIM0                            00000002
ITRIM1                            00000003
ITRIM2                            00000004
ITRIM3                            00000005
ITRIM4                            00000006
ITRIM5                            00000007
IVRST                             00000005
JUMPMAN                           0000053E
JUMPMAN_USED                      00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L00001                            000006D6
L00002                            00000810
L00003                            000005A0
L00004                            000005D6
L00005                            00000590
L00007                            0000059A
L00009                            000005A8
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 305


SYMBOL TABLE
  LABEL                             VALUE 

L00011                            000005CC
L00012                            000005D6
L00013                            000005C6
L00015                            000005D4
L00017                            00000612
L00019                            0000062E
L00021                            0000063E
L00023                            00000848
L00025                            000007E0
L00027                            000007D8
L00028                            000007E0
L00029                            00000850
L00031                            000008B2
L00033                            00000886
L00034                            0000088E
L00035                            000008A6
L00037                            000008B2
L00039                            000009B2
L00041                            000009BA
L00043                            000009C2
L00045                            000009CA
L00047                            000009D2
L00049                            000009DA
L00051                            00000B2E
L00053                            00000C7C
L00054                            00000C7E
L00055                            00000C90
L00056                            00000C92
L00057                            00000CA4
L00058                            00000CA6
L00059                            00000CB8
L00060                            00000CBA
L00061                            00000CCC
L00062                            00000CCE
L00063                            00000CE0
L00064                            00000CE2
L?CALL                            
L?GOTO                            
LABEL?L                           
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 306


SYMBOL TABLE
  LABEL                             VALUE 

LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCDOUT                            0000013E
LCDOUT?C                          
LCDOUTCOUNT?C                     
LCDOUTD?T                         
LCDOUTDEC                         000000F6
LCDOUTDEC?                        
LCDOUTDECB                        000000F4
LCDOUTDECB_USED                   00000001
LCDOUTDEC_USED                    00000001
LCDOUTHEX?                        
LCDOUTJ                           0000013C
LCDOUTJ_USED                      00000001
LCDOUTNUM?B                       
LCDOUT_USED                       00000001
LCD_BITS                          4
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          0
LCD_DREG                          PORTA
LCD_EBIT                          4
LCD_EREG                          PORTA
LCD_LINE                          2
LCD_LINES                         00000002
LCD_RSBIT                         5
LCD_RSREG                         PORTA
LCD_RWBIT                         00000005
LCD_RWREG                         00000F80
LFIOFS                            00000000
LOW?T                             
LVDCON                            00000F9C
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 307


SYMBOL TABLE
  LABEL                             VALUE 

LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MC1OUT                            00000007
MC2OUT                            00000006
MCLR                              00000003
MFIOFS                            00000001
MFIOSEL                           00000004
MOVE?AB                           
MOVE?AN                           
MOVE?ANN                          
MOVE?ANW                          
MOVE?AT                           
MOVE?AW                           
MOVE?AWN                          
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BN                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CN                           
MOVE?CT                           
MOVE?CW                           
MOVE?NA                           
MOVE?NB                           
MOVE?NN                           
MOVE?NNA                          
MOVE?NT                           
MOVE?NW                           
MOVE?NWA                          
MOVE?TA                           
MOVE?TB                           
MOVE?TN                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WN                           
MOVE?WNA                          
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MPASMWIN_USED                     00000001
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 308


SYMBOL TABLE
  LABEL                             VALUE 

MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
MSSP1MD                           00000006
MSSP2MD                           00000007
MUL                               00000416
MUL?WWN                           
MUL_USED                          00000001
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_MCLR                          00000003
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_SS                            00000005
NOT_SS1                           00000005
NOT_SS2                           00000000
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_T5SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
NO_CLRWDT                         1
NVCFG0                            00000000
NVCFG1                            00000001
OERR                              00000001
OERR1                             00000001
OERR2                             00000001
OR?CNB                            
OR?NNW                            
OR?TTN                            
OSC                               16
OSCCON                            00000FD3
OSCCON2                           00000FD2
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSC_VALID                         00000001
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
P1B                               00000002
P1C                               00000001
P1D                               00000004
P1DC0                             00000000
P1DC1                             00000001
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 309


SYMBOL TABLE
  LABEL                             VALUE 

P1DC2                             00000002
P1DC3                             00000003
P1DC4                             00000004
P1DC5                             00000005
P1DC6                             00000006
P1M0                              00000006
P1M1                              00000007
P1RSEN                            00000007
P1SSAC0                           00000002
P1SSAC1                           00000003
P1SSBD0                           00000000
P1SSBD1                           00000001
P2A_PORTB                         00000003
P2A_PORTC                         00000001
P2B_PORTB                         00000005
P2B_PORTC                         00000000
P2DC0                             00000000
P2DC1                             00000001
P2DC2                             00000002
P2DC3                             00000003
P2DC4                             00000004
P2DC5                             00000005
P2DC6                             00000006
P2M0                              00000006
P2M1                              00000007
P2RSEN                            00000007
P2SSAC0                           00000002
P2SSAC1                           00000003
P2SSBD0                           00000000
P2SSBD1                           00000001
P3A_PORTB                         00000005
P3A_PORTC                         00000006
P3B                               00000007
P3DC0                             00000000
P3DC1                             00000001
P3DC2                             00000002
P3DC3                             00000003
P3DC4                             00000004
P3DC5                             00000005
P3DC6                             00000006
P3M0                              00000006
P3M1                              00000007
P3RSEN                            00000007
P3SSAC0                           00000002
P3SSAC1                           00000003
P3SSBD0                           00000000
P3SSBD1                           00000001
PAUSE                             000002E0
PAUSE?C                           
PAUSEB                            000002DA
PAUSEUS                           000002FE
PAUSEUSB                          000002FC
PAUSEUS_USED                      00000001
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 310


SYMBOL TABLE
  LABEL                             VALUE 

PAUSEW                            000002DC
PAUSE_DELAY                       000003E5
PAUSE_USED                        00000001
PB01                              0000002A
PB02                              0000002B
PB03                              0000002C
PBP_HARDWAREDEF                   
PBP_PATH                          C:\PBP3\
PC                                00000FF9
PCIE                              00000006
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIE4                              00000F7A
PIE5                              00000F7D
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PIR4                              00000F7B
PIR5                              00000F7E
PLLEN                             00000006
PLLRDY                            00000007
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
PMD0                              00000F3F
PMD1                              00000F3E
PMD2                              00000F3D
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 311


SYMBOL TABLE
  LABEL                             VALUE 

POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FBB
PR2const                          003D0900
PR4                               00000F52
PR6                               00000F4B
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_ALT                          00000000
PREV_BANK                         00000000
PRISD                             00000002
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PS                                00003D09
PSA                               00000003
PSS1AC0                           00000002
PSS1AC1                           00000003
PSS1BD0                           00000000
PSS1BD1                           00000001
PSS2AC0                           00000002
PSS2AC1                           00000003
PSS2BD0                           00000000
PSS2BD1                           00000001
PSS3AC0                           00000002
PSS3AC1                           00000003
PSS3BD0                           00000000
PSS3BD1                           00000001
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTR1CON                          00000FB9
PSTR2CON                          00000F63
PSTR3CON                          00000F5A
PSTRCON                           00000FB9
PULSIN_MAX                        0000FFFF
PVCFG0                            00000002
PVCFG1                            00000003
PWM1CON                           00000FB7
PWM2CON                           00000F65
PWM3CON                           00000F5C
PWMCON                            00000FB7
R                                 00000002
R0                                00000012
R1                                00000016
R2                                0000001A
R3                                0000001E
R4                                00000002
R5                                00000004
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 312


SYMBOL TABLE
  LABEL                             VALUE 

R6                                00000006
R7                                00000008
R8                                0000000A
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         00000006
RAM_END                           000005FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1IP                             00000005
RC1REG                            00000FAE
RC1STA                            00000FAB
RC2                               00000002
RC2IE                             00000005
RC2IF                             00000005
RC2IP                             00000005
RC2REG                            00000F74
RC2STA                            00000F71
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCREG1                            00000FAE
RCREG2                            00000F74
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 313


SYMBOL TABLE
  LABEL                             VALUE 

RCSTA                             00000FAB
RCSTA1                            00000FAB
RCSTA2                            00000F71
RD                                00000000
RD16                              00000001
RE3                               00000003
RESET_ORG                         00000000
RETURN?                           
RI                                00000004
RM1                               0000000C
RM2                               0000000D
RR1                               0000000E
RR2                               0000000F
RS1                               00000010
RS2                               00000011
RSEN                              00000001
RST?RP                            
RX                                00000007
RX1                               00000007
RX2                               00000007
RX9                               00000006
RX91                              00000006
RX92                              00000006
RX9D                              00000000
RX9D1                             00000000
RX9D2                             00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBCDE                             00000002
SBOREN                            00000006
SCIE                              00000005
SCK                               00000003
SCK1                              00000003
SCK2                              00000001
SCKP                              00000004
SCL                               00000003
SCL1                              00000003
SCL2                              00000001
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDA1                              00000004
SDA2                              00000002
SDAHT                             00000003
SDI                               00000004
SDI1                              00000004
SDI2                              00000002
SDO                               00000005
SDO1                              00000005
SDO2                              00000003
SEN                               00000000
SENDB                             00000003
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 314


SYMBOL TABLE
  LABEL                             VALUE 

SENDB1                            00000003
SENDB2                            00000003
SEROUT2DEC                        0000021C
SEROUT2DEC_USED                   00000001
SEROUT2HEX                        000001E6
SEROUT2HEX_USED                   00000001
SEROUT2SEND                       000002BA
SEROUT2SEND_USED                  00000001
SHIFTL                            0000031C
SHIFTL?BCN                        
SHIFTL?NCN                        
SHIFTL?NCW                        
SHIFTL_USED                       00000001
SHIFTR                            00000330
SHIFTR?NCN                        
SHIFTR?WCW                        
SHIFTR_USED                       00000001
SHOWDIGITALDEFAULT                0
SHOWDIGITALRESULT                 00000000
SLRA                              00000000
SLRB                              00000001
SLRC                              00000002
SLRCON                            00000F60
SMP                               00000007
SOSCGO                            00000003
SOSCRUN                           00000006
SP0                               00000000
SP1                               00000001
SP1BRG                            00000FAF
SP1BRGH                           00000FB0
SP2                               00000002
SP2BRG                            00000F75
SP2BRGH                           00000F76
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRG1                            00000FAF
SPBRG2                            00000F75
SPBRGH                            00000FB0
SPBRGH1                           00000FB0
SPBRGH2                           00000F76
SPEN                              00000007
SPEN1                             00000007
SPEN2                             00000007
SRCLK0                            00000004
SRCLK1                            00000005
SRCLK2                            00000006
SRCON0                            00000F47
SRCON1                            00000F46
SREN                              00000005
SREN1                             00000005
SREN2                             00000005
SRI                               00000000
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 315


SYMBOL TABLE
  LABEL                             VALUE 

SRLEN                             00000007
SRNQ                              00000005
SRNQEN                            00000002
SRPR                              00000000
SRPS                              00000001
SRQ                               00000004
SRQEN                             00000003
SRRC1E                            00000000
SRRC2E                            00000001
SRRCKE                            00000002
SRRPE                             00000003
SRSC1E                            00000004
SRSC2E                            00000005
SRSCKE                            00000006
SRSPE                             00000007
SS                                00000005
SS1                               00000005
SS2                               00000000
SSP1ADD                           00000FC8
SSP1BUF                           00000FC9
SSP1CON1                          00000FC6
SSP1CON2                          00000FC5
SSP1CON3                          00000FCB
SSP1IE                            00000003
SSP1IF                            00000003
SSP1IP                            00000003
SSP1MSK                           00000FCA
SSP1STAT                          00000FC7
SSP2ADD                           00000F6E
SSP2BUF                           00000F6F
SSP2CON1                          00000F6C
SSP2CON2                          00000F6B
SSP2CON3                          00000F69
SSP2IE                            00000007
SSP2IF                            00000007
SSP2IP                            00000007
SSP2MSK                           00000F6A
SSP2STAT                          00000F6D
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPCON3                           00000FCB
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000FCA
SSPOV                             00000006
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 316


SYMBOL TABLE
  LABEL                             VALUE 

SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
STR1A                             00000000
STR1B                             00000001
STR1C                             00000002
STR1D                             00000003
STR1SYNC                          00000004
STR2A                             00000000
STR2B                             00000001
STR2C                             00000002
STR2D                             00000003
STR2SYNC                          00000004
STR3A                             00000000
STR3B                             00000001
STR3C                             00000002
STR3D                             00000003
STR3SYNC                          00000004
SUB?BCB                           
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SYNC1                             00000004
SYNC2                             00000004
SetReg                            
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1                                00000022
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1G                               00000005
T1GCON                            00000FCC
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 317


SYMBOL TABLE
  LABEL                             VALUE 

T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1G_DONE                          00000003
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RD16                            00000001
T1SOSCEN                          00000003
T1SYNC                            00000002
T2                                00000026
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FBA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CKI_PORTB                       00000005
T3CKI_PORTC                       00000000
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3G                               00000000
T3GCON                            00000FB4
T3GGO                             00000003
T3GGO_NOT_DONE                    00000003
T3GPOL                            00000006
T3GSPM                            00000004
T3GSS0                            00000000
T3GSS1                            00000001
T3GTM                             00000005
T3GVAL                            00000002
T3G_DONE                          00000003
T3OSCEN                           00000003
T3RD16                            00000001
T3SOSCEN                          00000003
T4CKPS0                           00000000
T4CKPS1                           00000001
T4CON                             00000F51
T4OUTPS0                          00000003
T4OUTPS1                          00000004
T4OUTPS2                          00000005
T4OUTPS3                          00000006
T5CKI                             00000002
T5CKPS0                           00000004
T5CKPS1                           00000005
T5CON                             00000F4E
T5G                               00000004
T5GCON                            00000F4D
T5GGO                             00000003
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 318


SYMBOL TABLE
  LABEL                             VALUE 

T5GGO_NOT_DONE                    00000003
T5GPOL                            00000006
T5GSPM                            00000004
T5GSS0                            00000000
T5GSS1                            00000001
T5GTM                             00000005
T5GVAL                            00000002
T5G_DONE                          00000003
T5RD16                            00000001
T5SOSCEN                          00000003
T5SYNC                            00000002
T6CKPS0                           00000000
T6CKPS1                           00000001
T6CON                             00000F4A
T6OUTPS0                          00000003
T6OUTPS1                          00000004
T6OUTPS2                          00000005
T6OUTPS3                          00000006
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TGEN                              00000004
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000000
TMR1GIF                           00000000
TMR1GIP                           00000000
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1MD                            00000000
TMR1ON                            00000000
TMR2                              00000FBC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2MD                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS0                           00000006
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 319


SYMBOL TABLE
  LABEL                             VALUE 

TMR3CS1                           00000007
TMR3GE                            00000007
TMR3GIE                           00000001
TMR3GIF                           00000001
TMR3GIP                           00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3MD                            00000002
TMR3ON                            00000000
TMR4                              00000F53
TMR4IE                            00000000
TMR4IF                            00000000
TMR4IP                            00000000
TMR4MD                            00000003
TMR4ON                            00000002
TMR5                              00000F4F
TMR5CS0                           00000006
TMR5CS1                           00000007
TMR5GE                            00000007
TMR5GIE                           00000002
TMR5GIF                           00000002
TMR5GIP                           00000002
TMR5H                             00000F50
TMR5IE                            00000001
TMR5IF                            00000001
TMR5IP                            00000001
TMR5L                             00000F4F
TMR5MD                            00000004
TMR5ON                            00000000
TMR6                              00000F4C
TMR6IE                            00000002
TMR6IF                            00000002
TMR6IP                            00000002
TMR6MD                            00000005
TMR6ON                            00000002
TO                                00000003
TOGGLE?T                          
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRIGSEL                           00000007
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 320


SYMBOL TABLE
  LABEL                             VALUE 

TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISE                             00000F96
TRMT                              00000001
TRMT1                             00000001
TRMT2                             00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX                                00000006
TX1                               00000006
TX1IE                             00000004
TX1IF                             00000004
TX1IP                             00000004
TX1REG                            00000FAD
TX1STA                            00000FAC
TX2                               00000006
TX2IE                             00000004
TX2IF                             00000004
TX2IP                             00000004
TX2REG                            00000F73
TX2STA                            00000F72
TX9                               00000006
TX91                              00000006
TX92                              00000006
TX9D                              00000000
TX9D1                             00000000
TX9D2                             00000000
TXEN                              00000005
TXEN1                             00000005
TXEN2                             00000005
TXIE                              00000004
TXIF                              00000004
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 321


SYMBOL TABLE
  LABEL                             VALUE 

TXIP                              00000004
TXREG                             00000FAD
TXREG1                            00000FAD
TXREG2                            00000F73
TXSTA                             00000FAC
TXSTA1                            00000FAC
TXSTA2                            00000F72
UA                                00000001
UART1MD                           00000006
UART2MD                           00000007
VDIRMAG                           00000007
VPP                               00000003
VREFCON0                          00000F42
VREFCON1                          00000F41
VREFCON2                          00000F40
VREFM                             00000002
VREFN                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WPUB                              00000F61
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WPUE3                             00000007
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BCKLIGHT                         _PORTC??3
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_190_2L                      000000FF
_BORV_220_2L                      000000F7
_BORV_250_2L                      000000EF
_BORV_285_2L                      000000E7
_CCP2MX_PORTB3_3H                 000000FE
_CCP2MX_PORTC1_3H                 000000FF
_CCP3MX_PORTB5_3H                 000000FF
_CCP3MX_PORTC6_3H                 000000FB
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 322


SYMBOL TABLE
  LABEL                             VALUE 

_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_Days                             00000041
_Days??6                          _Days, 006h
_Days??7                          _Days, 007h
_DesnoVar                         00000042
_DoleVar                          00000043
_DutyCycleL1                      0000002D
_DutyCycleL2                      0000002F
_DutyCycleL3                      00000031
_DutyCycleL4                      00000033
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_EPROM                            000000A0
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_FOSC_ECHPIO6_1H                  000000F5
_FOSC_ECHP_1H                     000000F4
_FOSC_ECLPIO6_1H                  000000FD
_FOSC_ECLP_1H                     000000FC
_FOSC_ECMPIO6_1H                  000000FB
_FOSC_ECMP_1H                     000000FA
_FOSC_HSHP_1H                     000000F2
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 323


SYMBOL TABLE
  LABEL                             VALUE 

_FOSC_HSMP_1H                     000000F3
_FOSC_INTIO67_1H                  000000F8
_FOSC_INTIO7_1H                   000000F9
_FOSC_LP_1H                       000000F0
_FOSC_RCIO6_1H                    000000F7
_FOSC_RC_1H                       000000F6
_FOSC_XT_1H                       000000F1
_Frequency                        00000035
_GetCH_1                          000006D6
_GetCH_2                          000006E2
_GetCH_3                          000006EE
_GetCH_4                          000006FA
_GetCH_5                          00000706
_GetCH_Done                       0000070E
_GoreVar                          00000044
_HFOFST_OFF_3H                    000000F7
_HFOFST_ON_3H                     000000FF
_HPWM10_UPD                       00000554
_HP_Channel                       00000046
_HP_Duty                          00000037
_HP_Flags                         00000047
_HP_Flags??0                      _HP_Flags, 000h
_HP_Flags??1                      _HP_Flags, 001h
_HP_Flags??2                      _HP_Flags, 002h
_HP_Flags??3                      _HP_Flags, 003h
_HP_Freq                          00000039
_HP_PR2                           00000048
_HP_Temp                          0000003B
_HP_Temp??HIGHBYTE                0000003C
_HP_Temp??LOWBYTE                 0000003B
_Hours                            00000045
_Hours??6                         _Hours, 006h
_Hours??7                         _Hours, 007h
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_INTCON2??7                       INTCON2, 007h
_LM75                             00000090
_LMcnt                            0000004A
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_LevoVar                          00000049
_MCLRE_EXTMCLR_3H                 000000FF
_MCLRE_INTMCLR_3H                 0000007F
_Main                             000009A6
_Merenje                          0000003D
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 324


SYMBOL TABLE
  LABEL                             VALUE 

_Minutes                          0000004B
_Minutes??7                       _Minutes, 007h
_Month                            0000004C
_Month??5                         _Month, 005h
_Month??6                         _Month, 006h
_Month??7                         _Month, 007h
_NovoStanjeDesno                  PB01, 004h
_NovoStanjeDole                   PB01, 005h
_NovoStanjeGore                   PB01, 006h
_NovoStanjeLevo                   PB01, 007h
_NovoStanjeOdrzavanje             PB02, 000h
_NovoStanjeOk                     PB02, 001h
_OcitajTastere                    00000C3A
_OcitajTemperaturu                00000C08
_OdrzVar                          0000004D
_OkVar                            0000004E
_OverHPWM10                       000008B4
_P2BMX_PORTB5_3H                  000000FF
_P2BMX_PORTC0_3H                  000000DF
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PIR1??1                          PIR1, 001h
_PLLCFG_OFF_1H                    000000EF
_PLLCFG_ON_1H                     000000FF
_PORTB??0                         PORTB, 000h
_PORTB??1                         PORTB, 001h
_PORTB??2                         PORTB, 002h
_PORTB??3                         PORTB, 003h
_PORTB??4                         PORTB, 004h
_PORTB??5                         PORTB, 005h
_PORTB??6                         PORTB, 006h
_PORTB??7                         PORTB, 007h
_PORTC??0                         PORTC, 000h
_PORTC??1                         PORTC, 001h
_PORTC??2                         PORTC, 002h
_PORTC??3                         PORTC, 003h
_PORTC??4                         PORTC, 004h
_PORTC??5                         PORTC, 005h
_PORTC??6                         PORTC, 006h
_PORTH                            00000F82
_PORTL                            00000F81
_PR2changed                       _HP_Flags??3
_PRICLKEN_OFF_1H                  000000DF
_PRICLKEN_ON_1H                   000000FF
_PS0                              _HP_Flags??0
_PS1                              _HP_Flags??1
_PSchanged                        _HP_Flags??2
_PWRTEN_OFF_2L                    000000FF
_PWRTEN_ON_2L                     000000FE
_Potenciometar                    0000003F
_PutCH_1                          00000810
_PutCH_2                          0000081C
_PutCH_3                          00000828
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 325


SYMBOL TABLE
  LABEL                             VALUE 

_PutCH_4                          00000834
_PutCH_5                          00000840
_PutCH_Done                       00000848
_RELEJ1                           _PORTC??4
_RELEJ2                           _PORTC??5
_RTC                              000000A2
_SCL                              _PORTC??1
_SDA                              _PORTC??0
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_Seconds                          0000004F
_StaroStanjeDesno                 PB02, 004h
_StaroStanjeDole                  PB02, 005h
_StaroStanjeGore                  PB02, 006h
_StaroStanjeLevo                  PB02, 007h
_StaroStanjeOdrzavanje            PB03, 000h
_StaroStanjeOk                    PB03, 001h
_Strelica                         0000007E
_T2CKPS0                          _T2CON??0
_T2CKPS1                          _T2CON??1
_T2CON??0                         T2CON, 000h
_T2CON??1                         T2CON, 001h
_T2CON??2                         T2CON, 002h
_T3CMX_PORTB5_3H                  000000EF
_T3CMX_PORTC0_3H                  000000FF
_TASTDESNO                        _PORTB??4
_TASTDOLE                         _PORTB??5
_TASTGORE                         _PORTB??6
_TASTLEVO                         _PORTB??1
_TASTODRZAVANJE                   _PORTB??7
_TASTOK                           _PORTB??2
_TMR2IF                           _PIR1??1
_TMR2ON                           _T2CON??2
_TRISH                            00000F94
_TRISL                            00000F93
_Temp                             00000050
_Temperatura                      00000051
_UpisiVreme                       00000B3A
_UzmiVreme                        00000BA2
_WDTEN_NOSLP_2H                   000000FD
_WDTEN_OFF_2H                     000000FC
_WDTEN_ON_2H                      000000FF
_WDTEN_SWON_2H                    000000FE
_WDTPS_1024_2H                    000000EB
_WDTPS_128_2H                     000000DF
_WDTPS_16384_2H                   000000FB
_WDTPS_16_2H                      000000D3
_WDTPS_1_2H                       000000C3
_WDTPS_2048_2H                    000000EF
_WDTPS_256_2H                     000000E3
_WDTPS_2_2H                       000000C7
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000D7
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 326


SYMBOL TABLE
  LABEL                             VALUE 

_WDTPS_4096_2H                    000000F3
_WDTPS_4_2H                       000000CB
_WDTPS_512_2H                     000000E7
_WDTPS_64_2H                      000000DB
_WDTPS_8192_2H                    000000F7
_WDTPS_8_2H                       000000CF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_X                                00000052
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
_Years                            00000053
__18F25K22                        00000001
_desno                            PB01, 000h
_dole                             PB01, 001h
_gore                             PB01, 002h
_levo                             PB01, 003h
_odrzavanje                       PB02, 002h
_ok                               PB02, 003h
cmpb1                             00000370
cmpdiff                           00000388
cmpnoteq                          00000374
cmpw1                             0000036A
divchkr1                          000003A0
divdo                             000003B4
divdone                           00000410
divloop                           000003C0
divok                             000003EE
i2cckh                            000000E0
i2cckl                            000000D4
i2cdah                            00000072
i2cdal                            00000082
i2cgetbit                         000000C4
i2chigh                           0000007E
i2chl                             00000092
i2clow                            0000008C
i2creaddone                       00000034
i2creadip                         00000016
i2creadloop                       0000001A
i2cslowloop                       00000096
i2cstart                          0000009C
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 327


SYMBOL TABLE
  LABEL                             VALUE 

i2cstop                           00000064
i2cwrite2                         0000004C
i2cwritec                         000000AA
i2cwritedone                      00000060
i2cwriteip                        0000005A
i2cwriteloop                      000000B0
lcdchkcd                          000001B4
lcdloop                           000001C6
lcdout1                           00000198
lcdouta                           00000138
lcdoutcom                         00000196
lcdoutdig                         0000011A
lcdsend                           000001C2
main                              00000550
muldone                           00000538
mulsign                           00000524
pauseloop                         000002E2
pauseush                          0000030A
pauseusloop                       00000308
serout2ddig                       000002A2
serout2hdig                       00000210
serout2send1                      000002CA
shiftlloop                        00000312
shiftrloop                        00000326


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.43                   TESTPROGRAM.ASM   12-29-2012  5:33:33         PAGE 328


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXX-------- ---------------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  3363
Program Memory Bytes Free: 29405


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     8 suppressed

